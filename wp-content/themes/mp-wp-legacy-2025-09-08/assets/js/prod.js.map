{"version":3,"sources":["custom.js","calculator.js"],"names":["init","vidDefer","document","getElementsByTagName","i","length","getAttribute","setAttribute","setCookie","name","value","daysToExpire","expirationDate","Date","expires","setTime","getTime","toUTCString","cookie","isInputNotEmpty","input","trim","async","post","method","action","data","files","formData","FormData","append","JSON","stringify","postmpwp","ajax_nonce","page_id","forEach","file","index","fetch","ajax_url","credentials","body","then","response","json","constructor","this","main","querySelector","getSelectors","setEventListeners","password","form","loginBtn","msg","loader","validateForm","let","validateName","validatePassword","classList","remove","add","ajaxCall","msgHandler","success","token","window","open","url","console","error","catch","show","isError","innerText","addEventListener","contains","e","stopImmediatePropagation","setInitialData","initChoices","toolTipsEvents","checkConditions","selectElements","querySelectorAll","choices","select","choice","Choices","searchEnabled","hasAttribute","searchFields","searchResultLimit","placeholder","allowHTML","position","shouldSort","itemSelectText","searchPlaceholderValue","dataset","search","noResultsText","translations","no_choices","noChoicesText","classNames","containerOuter","labelId","id","push","extraOpen","isCalculated","isSubmited","isSpecialOffer","calcID","calculatedCirculations","calcNotes","uploadedFiles","rDiameter","calcParameters","Pavirsius","Klijai","Substrate","Forma","SpalvuSk","Lakas","Laminatas","Folija","Plotis","Ilgis","GRSk","Tirazas1","Tirazas2","Tirazas3","Tirazas4","Tirazas5","Tirazas6","Tirazas7","Tirazas8","Tirazas9","Tirazas10","Embozingas","KSpauda","TikslusTirazas","TikPilniRit","TikSuKirtForma","EtSkRit","GamybosLaikas","TranspZonaID","TranspZona","ClientComment","Comment","MajorGroup","sendFromForm","helpID","IvoresDiam","windings","pastabos","calcDisableConditions","selector","option","disableSelectors","disableOptions","optionValues","calcAllowConditions","enableSelectors","enableOptions","shapeData","shape","direction","rotation","siblingInputs","extraCalc","tableWrapper","shapeImages","extraGeneralNotes","submitBtn","calcBtn","sendPDFBtn","expandBtn","sendBtn","offerModalSendBtn","toolTipsBtns","toolTipsBox","toolTipsCloseBtns","modal","orderModalCloseBtns","orderModalContent","orderSuccessWindow","orderSuccessMsg","finalPrice","offerModal","offerModalCloseBtns","offerModalContent","offerSuccessWindow","PDFofferModal","PDFofferModalCloseBtns","calcInputs","orderModalInputs","numInputs","materialTriggers","shapeTriggers","onlyFullRollsTrigger","formInput","widthInput","heightInput","glueInput","colorInput","substrateInput","laminateVarnishesInput","materialInput","typeInput","amountInputs","amountInput1","amountInput2","amountInput3","amountInput4","amountInput5","amountInput6","amountInput7","amountInput8","amountInput9","amountInput10","productionInput","maxLengthInputs","orderAmountInput","messageInput","privacyCheckboxInput","hubInput","fileInput","formModalInputs","foilingInput","packingInput","packingAmountInput","embossingInput","changingPressInput","exactCirculationInput","onlyFullRollsInput","onlyCuttingFormInput","transportZoneInput","directionInputs","rotationInput","extraNoteInput","rDiameterWrapper","rDiameterNumber","checked","btn","setTimeout","validateValues","sendOfferToEmail","calculateValues","insertDataToModal","resetFields","directionValues","inside","outside","toggle","style","height","scrollHeight","activeInput","checkInputMaxMin","nextElementSibling","display","previousElementSibling","errorInputHandler","successMessage","isLoggedIn","undefined","urgentProdNoteOnTriggerHandler","circulation","SkTirazas","GautiSpecPasiulyma","modalSpecOfferHandler","KainaKlientui","maxLength","parseInt","counter","textContent","fileInputHandler","getMaterialsByData","showShapeImg","checkOnlyFullRolls","inputs","getSelectInput","setChoiceByValue","type","fileCards","uploadFilesDescription","card","Number","min","max","changeInputState","handler","label","getInputLabel","includes","enable","getValue","disable","disabled","conditions","disabledSelectors","disabledOptions","disabledOptionsNames","allowConditions","ignoredInputs","Array","from","map","element","matchingConditions","filter","obj","concat","matchingAllowConditions","condition","some","urgentProdNoteTriggerHandler","_presetChoices","config","Choice","currentValue","item","_presetGroups","convertedGroups","presetGroups","presetChoices","optgroup","setChoices","dropdownChoices","_currentState","count","dropdownChoice","activeDropdownChoice","getAndSetMaterials","event","stopPropagation","box","closeTooltip","tooltip","ID","tableId","title","description","image","src","closeTooltipsOutside","parentElement","target","removeEventListener","note","notes","active","onlyFullRollsChecked","packingSelected","calculateFullRolls","packingValue","remainder","cValue","pValue","trigger","activeTrigger","aInput","packingCaption","packingLabel","orderModalDirectionImg","images","modalNotes","selectedPackingChoice","find","selected","notesList","innerHTML","customProperties","labelWrapper","glue","substrate","available","adhesives","Object","values","adhesive","filteredMaterial","Adhesive","initialChoices","removeActiveItems","Attribute","SubstrateID","SubstrateName","SubstrateNameOrig","width","img","Promise","resolve","activeImg","convertedToArray","table","specOfferHandler","circulations","setValuesToOrderAmountInput","costsNotes","uploadedFilesCardsWrapper","uploadDropArea","updateFilesInput","objectToRemove","indexToRemove","findIndex","splice","createCard","allowed","fileCard","createElement","className","fileNameSpan","deleteButton","appendChild","fileUploadHandler","evt","preventDefault","dataTransfer","specOfferTriggers","checkoutBox","specOfferBox","overWriteAmount","isValid","setValues","tableCaption","laminateVarnishesLabel","laminateVarnishesSelector","laminateVarnishesValue","directionRadioButton","options","selectedIndex","text","scrollIntoView","behavior","block","inline","$","calcSubMenuHeight","click","currentTarget","hasClass","collapseSection","sectionHeight","prop","css","on","off","arguments","callee","toggleClass","not","each","removeClass","elementTransition","requestAnimationFrame","URL","location","urlParams","searchParams","updateUrlParams","param","set","delete","toString","history","replaceState","careerPage","career","sParam","sParameterName","sURLVariables","substring","split","decodeURIComponent","documentElement","animate","scrollTop","offset","top","addClass","outerHeight","val","closest","attr","pop","callback","ms","timer","key","expiry","stickyBannerHandler","stickyBannerWrapper","wrapper","btns","bannerId","isDesktop","matchMedia","allowSplit","chatbotBtn","chatbotPopup","generateWrappedText","wrapperWidth","offsetWidth","words","linesCount","currentLine","lines","testLine","testDiv","spacer","matches","whiteSpace","visibility","fontSize","scrollWidth","removeChild","line","join","thisForm","targetForm","eventID","detail","contactFormId","formContainer","parentNode","gtag","form_location","dataLayer","parents","parent","hashTop","siblings","mouseover","mouseleave","change","href","indexOf","hash","stop","pathname","formEl","bgColor","btnTextColor","btnHoverColor","lockedBtn","background","color","fill","hover","background-color","submit","get","empty","results","found","context","args","clearTimeout","apply","Swiper","slidesPerView","speed","pagination","el","autoplay","delay","disableOnInteraction","navigation","nextEl","prevEl","loop","thumbs","spaceBetween","watchSlidesProgress","swiper","pauseOnMouseEnter","clickable","breakpoints","980","690","900","heroSliderSwiper","autoHeight","grabCursor","productsCarouselHandler","productCarouselSections","blockVisibilityHandler","opacity","productCarouselSection","contentBlocks","btnPrev","btnNext","carouselSwiper","initialSlide","centeredSlides","centerInsufficientSlides","currentSlide","slides","activeIndex","slide","activeBlock","windowY","pageYOffset","jQuery","onload"],"mappings":"AA86BA,SAAAA,OAEA,IADA,IAAAC,EAAAC,SAAAC,qBAAA,QAAA,EACAC,EAAA,EAAAA,EAAAH,EAAAI,OAAAD,CAAA,GACAH,EAAAG,GAAAE,aAAA,UAAA,GACAL,EAAAG,GAAAG,aAAA,MAAAN,EAAAG,GAAAE,aAAA,UAAA,CAAA,CAGA,CCr7BA,CAAA,WAmBA,SAAAE,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAC,KAEAC,GADAF,EAAAG,QAAAH,EAAAI,QAAA,EAAA,GAAAL,EAAA,GAAA,GAAA,GAAA,EACA,WAAAC,EAAAK,YAAA,GACAf,SAAAgB,OAAAT,EAAA,IAAAC,EAAA,IAAAI,EAAA,SACA,CAQA,SAAAK,EAAAC,GAEA,OAAA,EAAAA,EAAAC,KAAA,EAAAhB,MACA,CAEAiB,eAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,CAAA,GACA,GAAA,CAAAF,GAAA,CAAAC,EAAA,MAAA,CAAA,EAEA,MAAAE,EAAA,IAAAC,SAaA,OAZAD,EAAAE,OAAA,SAAAL,CAAA,EACAG,EAAAE,OAAA,OAAAC,KAAAC,UAAAN,CAAA,CAAA,EACAE,EAAAE,OAAA,QAAAC,KAAAC,UAAAC,SAAAC,UAAA,CAAA,EACAN,EAAAE,OAAA,SAAAC,KAAAC,UAAAC,SAAAE,OAAA,CAAA,EAGAR,GACAA,EAAAS,QAAA,CAAAC,EAAAC,KACAV,EAAAE,OAAA,QAAAQ,EAAAD,CAAA,CACA,CAAA,EAGAE,MAAAN,SAAAO,SAAA,CACAhB,OAAAA,EACAiB,YAAA,cACAC,KAAAd,CACA,CAAA,EACAe,KAAAC,GAAAA,EAAAC,KAAA,CAAA,CACA,CAgIA,UA5HAC,cACAC,KAAAC,KAAA9C,SAAA+C,cAAA,gBAAA,EAEAF,KAAAC,OAEAD,KAAAG,aAAA,EACAH,KAAAI,kBAAA,EAEAJ,KAAAnB,SAAA,CACAnB,KAAA,GACA2C,SAAA,EACA,EACA,CAEAF,eACAH,KAAAM,KAAAN,KAAAC,KAAAC,cAAA,gBAAA,EACAF,KAAAtC,KAAAsC,KAAAC,KAAAC,cAAA,0BAAA,EACAF,KAAAK,SAAAL,KAAAC,KAAAC,cAAA,8BAAA,EACAF,KAAAO,SAAAP,KAAAC,KAAAC,cAAA,eAAA,EACAF,KAAAQ,IAAAR,KAAAC,KAAAC,cAAA,eAAA,EACAF,KAAAS,OAAAT,KAAAC,KAAAC,cAAA,YAAA,CACA,CAEAQ,eACAC,IAAAC,EAAA,CAAA,EACAC,EAAA,CAAA,EAOAD,EALAxC,EAAA4B,KAAAtC,KAAAC,KAAA,GACAqC,KAAAnB,SAAAnB,KAAAsC,KAAAtC,KAAAC,MAEAqC,KAAAtC,KAAAoD,UAAAC,OAAA,OAAA,EAEA,CAAA,IAEAf,KAAAtC,KAAAoD,UAAAE,IAAA,OAAA,EAEA,CAAA,GAQAH,EALAzC,EAAA4B,KAAAK,SAAA1C,KAAA,GACAqC,KAAAnB,SAAAwB,SAAAL,KAAAK,SAAA1C,MAEAqC,KAAAK,SAAAS,UAAAC,OAAA,OAAA,EAEA,CAAA,IAEAf,KAAAK,SAAAS,UAAAE,IAAA,OAAA,EAEA,CAAA,GAGAJ,GAAAC,GACAb,KAAAiB,SAAAjB,KAAAnB,QAAA,CAEA,CAEAoC,SAAAtC,GAEAqB,KAAAO,SAAAO,UAAAE,IAAA,SAAA,EACAhB,KAAAS,OAAAK,UAAAE,IAAA,QAAA,EACAhB,KAAAkB,WAAA,CAAA,EAAA,EAAA,EAEA1C,EAAA,OAAA,eAAAG,CAAA,EACAiB,KAAA,IACAC,EAAAsB,UACAtB,EAAAlB,KAAAwC,SACAnB,KAAAS,OAAAK,UAAAC,OAAA,QAAA,EAEAf,KAAAkB,WAAA,CAAA,EAAArB,EAAAlB,KAAA6B,IAAA,CAAA,CAAA,EAEA/C,EAAA,eAAAoC,EAAAlB,KAAAyC,MAAA,GAAA,EAEAC,OAAAC,KAAAzB,EAAAlB,KAAA4C,IAAA,OAAA,IAEAvB,KAAAS,OAAAK,UAAAC,OAAA,QAAA,EAEAS,QAAAC,MAAA5B,EAAAlB,KAAA6B,GAAA,EAEAR,KAAAkB,WAAA,CAAA,EAAArB,EAAAlB,KAAA6B,IAAA,CAAA,CAAA,EAEAR,KAAAO,SAAAO,UAAAC,OAAA,SAAA,GAGA,CAAA,EACAW,MAAAD,GAAAD,QAAAC,MAAAA,CAAA,CAAA,CACA,CAEAP,WAAAS,EAAAnB,EAAAoB,EAAA,CAAA,GACAD,GACA3B,KAAAQ,IAAAqB,UAAArB,EACAR,KAAAQ,IAAAM,UAAAE,IAAA,MAAA,EAEAY,GACA5B,KAAAQ,IAAAM,UAAAE,IAAA,OAAA,IAIAhB,KAAAQ,IAAAqB,UAAA,GACA7B,KAAAQ,IAAAM,UAAAC,OAAA,OAAA,OAAA,EAEA,CAEAX,oBACAJ,KAAAO,SAAAuB,iBAAA,QAAA,KACA9B,KAAAU,aAAA,CACA,CAAA,EAEA,CAAAV,KAAAK,SAAAL,KAAAtC,MAAA2B,QAAAhB,IACAA,EAAAyD,iBAAA,QAAA,KACAzD,EAAAyC,UAAAiB,SAAA,OAAA,GACA1D,EAAAyC,UAAAC,OAAA,OAAA,CAEA,CAAA,CACA,CAAA,EAEAf,KAAAM,MACAN,KAAAM,KAAAwB,iBAAA,SAAA,IACAE,EAAAC,yBAAA,CACA,CAAA,CAGA,CACA,EA+yDA,UA1yDAlC,cACAC,KAAAC,KAAA9C,SAAA+C,cAAA,4BAAA,EAEAF,KAAAC,MAEAD,KAAA/C,KAAA,CACA,CAEAA,OACAoE,OAAAS,iBAAA,OAAA,KACA9B,KAAAkC,eAAA,EACAlC,KAAAG,aAAA,EACAH,KAAAI,kBAAA,EACAJ,KAAAmC,YAAA,EACAnC,KAAAoC,eAAA,EACApC,KAAAqC,gBAAA,EACArC,KAAAS,OAAAK,UAAAC,OAAA,QAAA,CACA,CAAA,CACA,CAEAoB,cACA,IAAAG,EAAAtC,KAAAC,KAAAsC,iBAAA,QAAA,EAGA,GAFAvC,KAAAwC,QAAA,GAEA,EAAAF,EAAAhF,OACA,IAAA,MAAAmF,KAAAH,EAAA,CACA,IAAAI,EAAA,IAAAC,QAAAF,EAAA,CACAG,cAAAH,EAAAI,aAAA,aAAA,EACAC,aAAA,CAAA,QAAA,SACAC,kBAAA,GACAC,YAAA,CAAA,EACAC,UAAA,CAAA,EACAC,SAAA,SACAC,WAAA,CAAA,EACAC,eAAA,GACAC,uBAAAZ,EAAAI,aAAA,aAAA,EAAAJ,EAAAa,QAAAC,OAAA,GACAC,cAAAC,aAAAC,WACAC,cAAAF,aAAAC,WACAE,WAAA,CACAZ,YAAA,uBACAa,eAAA,WAAApB,EAAA/E,IACA,EACAoG,QAAArB,EAAAsB,EACA,CAAA,EAEA/D,KAAAwC,QAAAwB,KAAAtB,CAAA,CACA,CAEA,CAEAR,iBACAlC,KAAAiE,UAAA,CAAA,EACAjE,KAAAkE,aAAA,CAAA,EACAlE,KAAAmE,WAAA,CAAA,EACAnE,KAAAoE,eAAA,CAAA,EACApE,KAAAqE,OAAA,GACArE,KAAAsE,uBAAA,GACAtE,KAAAuE,UAAA,GACAvE,KAAAwE,cAAA,GACAxE,KAAAyE,UAAA,GAEAzE,KAAA0E,eAAA,CACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,MAAA,GACAC,SAAA,GACAC,MAAA,GACAC,UAAA,GACAC,OAAA,GACAC,OAAA,GACAC,MAAA,GACAC,KAAA,GACAC,SAAA,IACAC,SAAA,IACAC,SAAA,IACAC,SAAA,IACAC,SAAA,IACAC,SAAA,IACAC,SAAA,IACAC,SAAA,IACAC,SAAA,IACAC,UAAA,IACAC,WAAA,GACAC,QAAA,GACAC,eAAA,GACAC,YAAA,GACAC,eAAA,GACAC,QAAA,OACAC,cAAA,GACAC,aAAA,GACAC,WAAA,GACAC,cAAA,GACAC,QAAA,GACAC,WAAA,GACAC,aAAA,KACAC,OAAA,GACAC,WAAA,GACAC,SAAA,GACAC,SAAA,EACA,EAEAhH,KAAAiH,sBAAA,CACA,CACAC,SAAA,kBACAC,OAAA,SACAC,iBAAA,CAAA,2BAAA,gBAAA,mBACAC,eAAA,EACA,EACA,CACAH,SAAA,kBACAC,OAAA,QACAC,iBAAA,CAAA,mBACAC,eAAA,EACA,EACA,CACAH,SAAA,kBACAC,OAAA,cACAC,iBAAA,CAAA,mBACAC,eAAA,EACA,EACA,CACAH,SAAA,kBACAC,OAAA,QACAC,iBAAA,CAAA,mBACAC,eAAA,EACA,EACA,CACAH,SAAA,kBACAC,OAAA,cACAC,iBAAA,CAAA,mBACAC,eAAA,EACA,EACA,CACAH,SAAA,kBACAC,OAAA,YACAC,iBAAA,CAAA,mBACAC,eAAA,CACA,CACAH,SAAA,2BACAI,aAAA,CAAA,QAAA,OAAA,UAAA,SACA,EAEA,EACA,CACAJ,SAAA,kBACAC,OAAA,kBACAC,iBAAA,CAAA,mBACAC,eAAA,CACA,CACAH,SAAA,2BACAI,aAAA,CAAA,QAAA,OAAA,UAAA,SACA,EAEA,EACA,CACAJ,SAAA,kBACAC,OAAA,QACAC,iBAAA,CAAA,gBAAA,mBACAC,eAAA,CACA,CACAH,SAAA,2BACAI,aAAA,CAAA,SAAA,QAAA,SAAA,UAAA,UACA,EACA,CACAJ,SAAA,mBACAI,aAAA,CAAA,IACA,EAEA,EACA,CACAJ,SAAA,kBACAC,OAAA,QACAC,iBAAA,CAAA,gBAAA,mBACAC,eAAA,CACA,CACAH,SAAA,2BACAI,aAAA,CAAA,SAAA,QAAA,SAAA,UAAA,UACA,EACA,CACAJ,SAAA,mBACAI,aAAA,CAAA,IACA,EAEA,EACA,CACAJ,SAAA,kBACAC,OAAA,OACAC,iBAAA,CAAA,gBAAA,mBACAC,eAAA,CACA,CACAH,SAAA,2BACAI,aAAA,CAAA,SAAA,QAAA,SAAA,UAAA,UAAA,QAAA,OAAA,UACA,EAEA,EACA,CACAJ,SAAA,kBACAC,OAAA,YACAC,iBAAA,CAAA,iBACAC,eAAA,CACA,CACAH,SAAA,2BACAI,aAAA,CAAA,QAAA,OAAA,UAAA,SACA,EAEA,EACA,CACAJ,SAAA,kBACAC,OAAA,gBACAC,iBAAA,CAAA,4BACAC,eAAA,EACA,EACA,CACAH,SAAA,kBACAC,OAAA,iBACAC,iBAAA,CAAA,4BACAC,eAAA,EACA,EACA,CACAH,SAAA,kBACAC,OAAA,sBACAC,iBAAA,CAAA,4BACAC,eAAA,EACA,EACA,CACAH,SAAA,kBACAC,OAAA,gBACAC,iBAAA,CAAA,4BACAC,eAAA,EACA,EACA,CACAH,SAAA,kBACAC,OAAA,cACAC,iBAAA,CAAA,4BACAC,eAAA,EACA,EACA,CACAH,SAAA,2BACAC,OAAA,UACAC,iBAAA,GACAC,eAAA,CACA,CACAH,SAAA,mBACAI,aAAA,CAAA,IACA,EAEA,EACA,CACAJ,SAAA,mBACAC,OAAA,IACAC,iBAAA,CAAA,gBAAA,kBAAA,uBAAA,0BAAA,wBAAA,0BAAA,wBACAC,eAAA,EACA,EACA,CACAH,SAAA,gBACAC,OAAA,YACAC,iBAAA,GACAC,eAAA,CACA,CACAH,SAAA,mBACAI,aAAA,CAAA,IACA,EAEA,EACA,CACAJ,SAAA,gBACAC,OAAA,UACAC,iBAAA,GACAC,eAAA,CACA,CACAH,SAAA,mBACAI,aAAA,CAAA,IACA,EAEA,EACA,CACAJ,SAAA,gBACAC,OAAA,YACAC,iBAAA,GACAC,eAAA,CACA,CACAH,SAAA,mBACAI,aAAA,CAAA,IACA,EAEA,EACA,CACAJ,SAAA,kBACAC,OAAA,CAAA,EACAC,iBAAA,GACAC,eAAA,CACA,CACAH,SAAA,mBACAI,aAAA,CAAA,IACA,EAEA,EACA,CACAJ,SAAA,uBACAC,OAAA,CAAA,EACAC,iBAAA,GACAC,eAAA,CACA,CACAH,SAAA,mBACAI,aAAA,CAAA,IACA,EAEA,EACA,CACAJ,SAAA,0BACAC,OAAA,CAAA,EACAC,iBAAA,GACAC,eAAA,CACA,CACAH,SAAA,mBACAI,aAAA,CAAA,IACA,EAEA,EACA,CACAJ,SAAA,wBACAC,OAAA,CAAA,EACAC,iBAAA,GACAC,eAAA,CACA,CACAH,SAAA,mBACAI,aAAA,CAAA,IACA,EAEA,EACA,CACAJ,SAAA,0BACAC,OAAA,CAAA,EACAC,iBAAA,GACAC,eAAA,CACA,CACAH,SAAA,mBACAI,aAAA,CAAA,IACA,EAEA,EACA,CACAJ,SAAA,uBACAC,OAAA,CAAA,EACAC,iBAAA,GACAC,eAAA,CACA,CACAH,SAAA,mBACAI,aAAA,CAAA,IACA,EAEA,EACA,CACAJ,SAAA,iBACAC,OAAA,SACAC,iBAAA,CAAA,iBACAC,eAAA,CACA,CACAH,SAAA,2BACAI,aAAA,CAAA,QAAA,OAAA,UAAA,SACA,EAEA,GAGAtH,KAAAuH,oBAAA,CACA,CACAL,SAAA,kBACAC,OAAA,OACAK,gBAAA,GACAC,cAAA,CACA,CACAP,SAAA,2BACAI,aAAA,CAAA,SACA,EAEA,GAGAtH,KAAA0H,UAAA,CACAC,MAAA,SACAC,UAAA,OACAC,SAAA,SACA,CACA,CAEA1H,eAGAH,KAAAM,KAAAN,KAAAC,KAAAC,cAAA,qBAAA,EACAF,KAAA8H,cAAA9H,KAAAC,KAAAsC,iBAAA,mBAAA,EACAvC,KAAA+H,UAAA/H,KAAAC,KAAAC,cAAA,WAAA,EACAF,KAAAgI,aAAAhI,KAAAC,KAAAC,cAAA,gBAAA,EACAF,KAAAS,OAAAT,KAAAC,KAAAC,cAAA,YAAA,EACAF,KAAAiI,YAAAjI,KAAAC,KAAAsC,iBAAA,eAAA,EACAvC,KAAAkI,kBAAAlI,KAAAC,KAAAC,cAAA,mBAAA,EAGAF,KAAAmI,UAAAnI,KAAAC,KAAAC,cAAA,gBAAA,EACAF,KAAAoI,QAAApI,KAAAC,KAAAC,cAAA,mBAAA,EACAF,KAAAqI,WAAArI,KAAAC,KAAAC,cAAA,kBAAA,EAEAF,KAAAsI,UAAAtI,KAAAC,KAAAC,cAAA,sBAAA,EACAF,KAAAuI,QAAAvI,KAAAC,KAAAC,cAAA,cAAA,EACAF,KAAAwI,kBAAAxI,KAAAC,KAAAC,cAAA,oBAAA,EAGAF,KAAAyI,aAAAzI,KAAAC,KAAAsC,iBAAA,kBAAA,EACAvC,KAAA0I,YAAA1I,KAAAC,KAAAsC,iBAAA,kBAAA,EACAvC,KAAA2I,kBAAA3I,KAAAC,KAAAsC,iBAAA,wBAAA,EAGAvC,KAAA4I,MAAA5I,KAAAC,KAAAC,cAAA,gBAAA,EACAF,KAAA6I,oBAAA7I,KAAAC,KAAAsC,iBAAA,qBAAA,EACAvC,KAAA8I,kBAAA9I,KAAAC,KAAAC,cAAA,mBAAA,EACAF,KAAA+I,mBAAA/I,KAAAC,KAAAC,cAAA,0BAAA,EACAF,KAAAgJ,gBAAAhJ,KAAAC,KAAAC,cAAA,+BAAA,EACAF,KAAAiJ,WAAAjJ,KAAAC,KAAAC,cAAA,iBAAA,EAGAF,KAAAkJ,WAAAlJ,KAAAC,KAAAC,cAAA,iBAAA,EACAF,KAAAmJ,oBAAAnJ,KAAAC,KAAAsC,iBAAA,2BAAA,EACAvC,KAAAoJ,kBAAApJ,KAAAC,KAAAC,cAAA,mBAAA,EACAF,KAAAqJ,mBAAArJ,KAAAC,KAAAC,cAAA,0BAAA,EAGAF,KAAAsJ,cAAAtJ,KAAAC,KAAAC,cAAA,eAAA,EACAF,KAAAuJ,uBAAAvJ,KAAAC,KAAAsC,iBAAA,yBAAA,EAGAvC,KAAAwJ,WAAAxJ,KAAAC,KAAAsC,iBAAA,gBAAA,EACAvC,KAAAyJ,iBAAAzJ,KAAAC,KAAAsC,iBAAA,iBAAA,EACAvC,KAAA0J,UAAA1J,KAAAC,KAAAsC,iBAAA,eAAA,EACAvC,KAAA2J,iBAAA3J,KAAAC,KAAAsC,iBAAA,iCAAA,EACAvC,KAAA4J,cAAA5J,KAAAC,KAAAsC,iBAAA,wBAAA,EACAvC,KAAA6J,qBAAA7J,KAAAC,KAAAsC,iBAAA,kCAAA,EACAvC,KAAA8J,UAAA9J,KAAAC,KAAAC,cAAA,qBAAA,EACAF,KAAA+J,WAAA/J,KAAAC,KAAAC,cAAA,sBAAA,EACAF,KAAAgK,YAAAhK,KAAAC,KAAAC,cAAA,uBAAA,EACAF,KAAAiK,UAAAjK,KAAAC,KAAAC,cAAA,qBAAA,EACAF,KAAAkK,WAAAlK,KAAAC,KAAAC,cAAA,sBAAA,EACAF,KAAAmK,eAAAnK,KAAAC,KAAAC,cAAA,0BAAA,EACAF,KAAAoK,uBAAApK,KAAAC,KAAAC,cAAA,mCAAA,EACAF,KAAAqK,cAAArK,KAAAC,KAAAC,cAAA,yBAAA,EACAF,KAAAsK,UAAAtK,KAAAC,KAAAC,cAAA,qBAAA,EACAF,KAAAuK,aAAAvK,KAAAC,KAAAsC,iBAAA,kBAAA,EACAvC,KAAAwK,aAAAxK,KAAAC,KAAAC,cAAA,2BAAA,EACAF,KAAAyK,aAAAzK,KAAAC,KAAAC,cAAA,2BAAA,EACAF,KAAA0K,aAAA1K,KAAAC,KAAAC,cAAA,2BAAA,EACAF,KAAA2K,aAAA3K,KAAAC,KAAAC,cAAA,2BAAA,EACAF,KAAA4K,aAAA5K,KAAAC,KAAAC,cAAA,2BAAA,EACAF,KAAA6K,aAAA7K,KAAAC,KAAAC,cAAA,2BAAA,EACAF,KAAA8K,aAAA9K,KAAAC,KAAAC,cAAA,2BAAA,EACAF,KAAA+K,aAAA/K,KAAAC,KAAAC,cAAA,2BAAA,EACAF,KAAAgL,aAAAhL,KAAAC,KAAAC,cAAA,2BAAA,EACAF,KAAAiL,cAAAjL,KAAAC,KAAAC,cAAA,4BAAA,EACAF,KAAAkL,gBAAAlL,KAAAC,KAAAC,cAAA,2BAAA,EACAF,KAAAmL,gBAAAnL,KAAAC,KAAAsC,iBAAA,sBAAA,EAGAvC,KAAAoL,iBAAApL,KAAAC,KAAAC,cAAA,+BAAA,EACAF,KAAAqL,aAAArL,KAAAC,KAAAC,cAAA,wBAAA,EACAF,KAAAsL,qBAAAtL,KAAAC,KAAAC,cAAA,iCAAA,EACAF,KAAAuL,SAAAvL,KAAAC,KAAAC,cAAA,oBAAA,EACAF,KAAAwL,UAAAxL,KAAAC,KAAAC,cAAA,+BAAA,EACAF,KAAAyL,gBAAAzL,KAAAC,KAAAsC,iBAAA,sBAAA,EAGAvC,KAAA0L,aAAA1L,KAAAC,KAAAC,cAAA,wBAAA,EACAF,KAAA2L,aAAA3L,KAAAC,KAAAC,cAAA,wBAAA,EACAF,KAAA4L,mBAAA5L,KAAAC,KAAAC,cAAA,+BAAA,EACAF,KAAA6L,eAAA7L,KAAAC,KAAAC,cAAA,0BAAA,EACAF,KAAA8L,mBAAA9L,KAAAC,KAAAC,cAAA,+BAAA,EACAF,KAAA+L,sBAAA/L,KAAAC,KAAAC,cAAA,kCAAA,EACAF,KAAAgM,mBAAAhM,KAAAC,KAAAC,cAAA,gCAAA,EACAF,KAAAiM,qBAAAjM,KAAAC,KAAAC,cAAA,kCAAA,EACAF,KAAAkM,mBAAAlM,KAAAC,KAAAC,cAAA,+BAAA,EACAF,KAAAmM,gBAAAnM,KAAAC,KAAAsC,iBAAA,0BAAA,EACAvC,KAAAoM,cAAApM,KAAAC,KAAAC,cAAA,yBAAA,EACAF,KAAAqM,eAAArM,KAAAC,KAAAC,cAAA,qBAAA,EACAF,KAAAsM,iBAAAtM,KAAAC,KAAAC,cAAA,wBAAA,EACAF,KAAAuM,gBAAAvM,KAAAC,KAAAC,cAAA,gBAAA,CACA,CAEAE,oBAEAJ,KAAA+L,sBAAAjK,iBAAA,SAAA,KACA9B,KAAA+L,sBAAAS,QACAxM,KAAAC,KAAAC,cAAA,4BAAA,GACAF,KAAAC,KAAAC,cAAA,4BAAA,EAAAY,UAAAE,IAAA,MAAA,EAGAhB,KAAAC,KAAAC,cAAA,4BAAA,GACAF,KAAAC,KAAAC,cAAA,4BAAA,EAAAY,UAAAC,OAAA,MAAA,CAGA,CAAA,EAEAf,KAAAmJ,oBAAA9J,QAAAoN,IACAA,EAAA3K,iBAAA,QAAA,KACA9B,KAAAkJ,WAAApI,UAAAC,OAAA,QAAA,EAEA2L,WAAA,KACA1M,KAAAoJ,kBAAAtI,UAAAC,OAAA,MAAA,EACAf,KAAAqJ,mBAAAvI,UAAAC,OAAA,QAAA,CACA,EAAA,GAAA,CACA,CAAA,CACA,CAAA,EAEAf,KAAAwI,kBAAA1G,iBAAA,QAAA,KACA9B,KAAA2M,eAAA3M,KAAAwJ,UAAA,GACAxJ,KAAA4M,iBAAA,CAEA,CAAA,EAEA5M,KAAAoI,QAAAtG,iBAAA,QAAA,KACA9B,KAAA2M,eAAA3M,KAAAwJ,UAAA,GACAxJ,KAAA6M,gBAAA,CAEA,CAAA,EAEA7M,KAAAmI,UAAArG,iBAAA,QAAA,KACA9B,KAAA2M,eAAA3M,KAAAwJ,UAAA,GAAAxJ,KAAAkE,eACAlE,KAAA8M,kBAAA,EACA9M,KAAA4I,MAAA9H,UAAAE,IAAA,QAAA,EAEA,CAAA,EAEAhB,KAAA6I,oBAAAxJ,QAAAoN,IACAA,EAAA3K,iBAAA,QAAA,KACA9B,KAAAmE,aACAnE,KAAA8I,kBAAAhI,UAAAC,OAAA,MAAA,EACAf,KAAA+I,mBAAAjI,UAAAC,OAAA,QAAA,EAEAf,KAAAmE,WAAA,CAAA,EAEAnE,KAAA+M,YAAA/M,KAAAyL,eAAA,GAGAzL,KAAA4I,MAAA9H,UAAAC,OAAA,QAAA,CACA,CAAA,CACA,CAAA,EAEAf,KAAAuJ,uBAAAlK,QAAAoN,IACAA,EAAA3K,iBAAA,QAAA,KACA9B,KAAAsJ,cAAAxI,UAAAC,OAAA,QAAA,CACA,CAAA,CACA,CAAA,EAEAf,KAAAoM,cAAAtK,iBAAA,SAAA,KACA,IAAAkL,EAAAhN,KAAAC,KAAAsC,iBAAA,qBAAA,EAEA,EAAAyK,EAAA1P,QACA0P,EAAA3N,QAAA1B,IACAqC,KAAAoM,cAAAI,QACA7O,EAAAkE,UAAAlE,EAAA2F,QAAA2J,OAEAtP,EAAAkE,UAAAlE,EAAA2F,QAAA4J,OAEA,CAAA,CAEA,CAAA,EAEAlN,KAAAsI,UAAAxG,iBAAA,QAAA,KACA9B,KAAAsI,UAAAxH,UAAAqM,OAAA,SAAA,EACAnN,KAAA+H,UAAAjH,UAAAqM,OAAA,SAAA,EAEAnN,KAAAiE,UAAA,CAAAjE,KAAAiE,UAEAjE,KAAAiE,UACAjE,KAAA+H,UAAAqF,MAAAC,OAAArN,KAAA+H,UAAAuF,aAAA,KAEAtN,KAAA+H,UAAAqF,MAAAC,OAAA,KAEA,CAAA,EAEArN,KAAA8J,UAAAhI,iBAAA,SAAA,KACA,CAAA9B,KAAAgK,YAAAhK,KAAA+J,YAAA1K,QAAAhB,IACAA,EAAAV,MAAA,EACA,CAAA,CACA,CAAA,EAEA,CAAAqC,KAAAgK,YAAAhK,KAAA+J,YAAA1K,QAAAhB,IACAA,EAAAyD,iBAAA,QAAA,KACA,IAEAnE,EAFA,WAAAqC,KAAA8J,UAAAnM,QAEAA,EAAAU,EAAAV,MAEAqC,KAAAgK,YAAArM,MAAAA,EACAqC,KAAA+J,WAAApM,MAAAA,EAEA,CAAA,EAEAU,EAAAyD,iBAAA,OAAA,KACA,WAAA9B,KAAA8J,UAAAnM,OAEA,CAAAqC,KAAAgK,YAAAhK,KAAA+J,YAAA1K,QAAAkO,IACAvN,KAAAwN,iBAAAD,CAAA,EAEAvN,KAAAgK,YAAArM,QAAAqC,KAAA+J,WAAApM,QACAqC,KAAAgK,YAAArM,MAAA,GACAqC,KAAA+J,WAAApM,MAAA,GAEA,CAAA,CAEA,CAAA,CACA,CAAA,EAEA,EAAAqC,KAAA8H,cAAAxK,QACA0C,KAAA8H,cAAAzI,QAAAhB,IACAA,EAAAyD,iBAAA,QAAA,KACA,KAAAzD,EAAAV,MACAU,EAAAoP,qBACApP,EAAAoP,mBAAAL,MAAAM,QAAA,UAGArP,EAAAoP,oBACA,KAAApP,EAAAoP,mBAAA9P,QACAU,EAAAoP,mBAAAL,MAAAM,QAAA,QAIArP,EAAAsP,wBAAA,KAAAtP,EAAAsP,uBAAAhQ,QACAU,EAAA+O,MAAAM,QAAA,QAGA,CAAA,CACA,CAAA,EAGA,EAAA1N,KAAAyJ,iBAAAnM,QACA0C,KAAAyJ,iBAAApK,QAAAhB,IACAA,EAAAyD,iBAAA,SAAA,KACA9B,KAAA4N,kBAAA,CAAA,EAAAvP,EAAAX,IAAA,CACA,CAAA,CACA,CAAA,EAGAsC,KAAAuI,QAAAzG,iBAAA,QAAA,KACA9B,KAAA2M,eAAA3M,KAAAwJ,UAAA,GAAAxJ,KAAAkE,cAAA,CAAAlE,KAAAoE,gBACApE,KAAA2M,eAAA3M,KAAAyJ,iBAAA,CAAA,CAAA,GACAzJ,KAAAiB,SAAA,OAAA,aAAAjB,KAAA0E,eAAA1E,KAAAwE,aAAA,EACA5E,KAAA,IACAC,EAAAlB,KAAAwC,UAEAnB,KAAAS,OAAAK,UAAAC,OAAA,QAAA,EAEAlB,EAAAlB,KAAAA,KAAA0F,SACArE,KAAAqE,OAAAxE,EAAAlB,KAAAA,KAAA0F,QAMArE,KAAA8I,kBAAAhI,UAAAE,IAAA,MAAA,EACAhB,KAAA+I,mBAAAjI,UAAAE,IAAA,QAAA,EAEAnB,EAAAlB,KAAAA,KAAAkP,iBACA7N,KAAAgJ,gBAAAnH,UAAAhC,EAAAlB,KAAAA,KAAAkP,gBAGA7N,KAAAmE,WAAA,CAAA,EAEA,CAAA,CAGA,CAAA,EAEAnE,KAAAqI,WAAAvG,iBAAA,QAAA,KACA9B,KAAA2M,eAAA3M,KAAAwJ,UAAA,GAAAxJ,KAAAkE,cACAlE,KAAAiB,SAAA,OAAA,kBAAAjB,KAAA0E,cAAA,EACA9E,KAAA,IACAC,EAAAsB,UACAtB,EAAAlB,KAAAmP,YACA9N,KAAAsJ,cAAApJ,cAAA,WAAA,EACA2B,UAAA,OAAAhC,EAAAlB,KAAA6B,KAAAuN,KAAAA,IAAAlO,EAAAlB,KAAA6B,IAAAX,EAAAlB,KAAA6B,IAAA,GACAR,KAAAsJ,cAAAxI,UAAAE,IAAA,QAAA,EACAhB,KAAAS,OAAAK,UAAAC,OAAA,QAAA,GAEAM,OAAAC,KAAAzB,EAAAlB,KAAA4C,IAAA,OAAA,EAGA,CAAA,CAEA,CAAA,EAEA,EAAAvB,KAAA0J,UAAApM,QACA0C,KAAA0J,UAAArK,QAAAhB,IACAA,EAAAyD,iBAAA,OAAA,KACA9B,KAAAwN,iBAAAnP,CAAA,CACA,CAAA,CACA,CAAA,EAGA,EAAA2B,KAAAwJ,WAAAlM,QACA0C,KAAAwJ,WAAAnK,QAAAhB,IACAA,EAAAyD,iBAAA,SAAA,KAEA9B,KAAAwJ,WAAAnK,QAAAkO,IACAvN,KAAA4N,kBAAA,CAAA,EAAAL,EAAA7P,IAAA,CACA,CAAA,EAEA,qBAAAW,EAAAX,OACA,MAAAW,EAAAV,MACAqC,KAAAgO,+BAAA,CAAA,CAAA,EAEAhO,KAAAgO,+BAAA,CAAA,CAAA,GAIAhO,KAAAkE,aAAA,CAAA,EAEAlE,KAAAmI,UAAArH,UAAAiB,SAAA,QAAA,GACA/B,KAAAmI,UAAArH,UAAAC,OAAA,QAAA,EAGAf,KAAAqI,WAAAvH,UAAAiB,SAAA,QAAA,GACA/B,KAAAqI,WAAAvH,UAAAC,OAAA,QAAA,EAGAf,KAAAqC,gBAAA,CACA,CAAA,CACA,CAAA,EAGArC,KAAAoL,iBAAAtJ,iBAAA,SAAA,KACA,KAAA9B,KAAAoL,iBAAAzN,OAAA,EAAAqC,KAAAsE,uBAAAhH,QAEA0C,KAAAsE,uBAAAjF,QAAA4O,IACAjO,KAAAoL,iBAAAzN,OAAAsQ,EAAAC,YACA,MAAAD,EAAAE,mBACAnO,KAAAoO,sBAAA,CAAA,CAAA,GAEApO,KAAAoO,sBAAA,CAAA,CAAA,EAEApO,KAAAiJ,WAAApH,UAAA,OAAAoM,EAAAI,eAAAN,KAAAA,IAAAE,EAAAI,cAAAJ,EAAAI,cAAA,IAGA,CAAA,CAEA,CAAA,EAGA,EAAArO,KAAAmL,gBAAA7N,QACA0C,KAAAmL,gBAAA9L,QAAAhB,IACAA,EAAAyD,iBAAA,QAAA,KACA,IAAAwM,EAAAjQ,EAAAd,aAAA,WAAA,EAAAgR,SAAAlQ,EAAAd,aAAA,WAAA,EAAA,EAAA,EAAA,GACAiR,EAAAnQ,EAAAoP,mBAEAe,GAAAA,EAAA1N,UAAAiB,SAAA,eAAA,IACAyM,EAAAC,YAAAH,EAAAjQ,EAAAV,MAAAL,OAEA,CAAA,CACA,CAAA,EAKA0C,KAAA0O,iBAAA,EAEA1O,KAAA2O,mBAAA,EAEA3O,KAAA4O,aAAA,EAEA5O,KAAA6O,mBAAA,CACA,CAEA9B,YAAA+B,GAEAA,EAAAzP,QAAA,SAAAhB,GACA,IAAA6I,EAAAlH,KAAA+O,eAAA1Q,EAAAX,IAAA,EAEAwJ,EACAA,EAAA8H,iBAAA,CAAA,GAAA,GAEA,SAAA3Q,EAAA4Q,MAAA,aAAA5Q,EAAA4Q,OACA5Q,EAAAV,MAAA,IAGA,aAAAU,EAAA4Q,OACA5Q,EAAAmO,QAAA,CAAA,GAGA,SAAAnO,EAAA4Q,OACA5Q,EAAAV,MAAA,GAEAqC,KAAAwE,cAAA,GAEA0K,EAAAlP,KAAAC,KAAAsC,iBAAA,eAAA,GACA4M,EAAAnP,KAAAC,KAAAC,cAAA,gCAAA,IAEAiP,EAAArO,UAAAC,OAAA,OAAA,EAEA,EAAAmO,EAAA5R,SACA4R,EAAA7P,QAAA,SAAA+P,GACAA,EAAArO,OAAA,CACA,CAAA,EAIA,CAAA,CACA,CAEAyM,iBAAAnP,GACA,KAAAA,EAAAV,QAEA0R,OAAAhR,EAAAiF,QAAAgM,GAAA,EAAAD,OAAAhR,EAAAV,KAAA,IACAU,EAAAV,MAAAU,EAAAiF,QAAAgM,IAEAjR,EAAAyC,UAAAE,IAAA,OAAA,EAEA0L,WAAA,KACArO,EAAAyC,UAAAC,OAAA,OAAA,CACA,EAAA,GAAA,GAGAsO,OAAAhR,EAAAV,KAAA,EAAA0R,OAAAhR,EAAAiF,QAAAiM,GAAA,KACAlR,EAAAV,MAAAU,EAAAiF,QAAAiM,IAEAlR,EAAAyC,UAAAE,IAAA,OAAA,EAEA0L,WAAA,KACArO,EAAAyC,UAAAC,OAAA,OAAA,CACA,EAAA,GAAA,EAEA,CAEAyO,iBAAAC,EAAA/R,GAEAiD,IAAAuG,EAAAlH,KAAA+O,eAAArR,CAAA,EACA,MAAAgS,EAAA1P,KAAA2P,cAAAjS,CAAA,EACA,CAAA,wBAEAkS,SAAAlS,CAAA,IAEAwJ,EACAuI,GACAvI,EAAA2I,OAAA,EAEAH,GACAA,EAAA5O,UAAAC,OAAA,QAAA,IAIAmG,EAAA4I,SAAA,EAAAnS,OACAuJ,EAAA8H,iBAAA,CAAA,GAAA,EAGAU,GACAA,EAAA5O,UAAAE,IAAA,QAAA,EAGAkG,EAAA6I,QAAA,GAKA,GAFAjB,EAAA9O,KAAAC,KAAAsC,+BAAA7E,IAAA,GAEAJ,QACAwR,EAAAzP,QAAAhB,IACAoR,IACA,SAAApR,EAAA4Q,KACA5Q,EAAAV,MAAA,GACA,aAAAU,EAAA4Q,OACA5Q,EAAAmO,QAAA,CAAA,IAIAkD,IACAD,EAAAC,EAAA5O,UAAAC,OAAA,QAAA,EAAA2O,EAAA5O,UAAAE,IAAA,QAAA,GAGA3C,EAAA2R,SAAA,CAAAP,CACA,CAAA,EAGA,CAEApN,kBAEA1B,IAAAsP,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAAC,MAAAC,KAAAxQ,KAAAC,KAAAsC,iBAAA,wBAAA,CAAA,EAAAkO,IAAAC,GAAAA,EAAA3M,EAAA,EAkCA/D,KAAAwJ,WAAAnK,QAAAhB,IAEA,IAAAsS,EAAA3Q,KAAAiH,sBAAA2J,OAAAC,GACAA,EAAA3J,WAAA7I,EAAAX,MAAAmT,EAAA1J,UAAA,aAAA9I,EAAA4Q,KAAA5Q,EAAAmO,QAAAnO,EAAAV,MACA,EAEAsS,EAAAA,EAAAa,OAAAH,CAAA,CACA,CAAA,EAEA3Q,KAAAwJ,WAAAnK,QAAAhB,IACA,IAAA0S,EAAA/Q,KAAAuH,oBAAAqJ,OAAAC,GACAA,EAAA3J,WAAA7I,EAAAX,MAAAmT,EAAA1J,UAAA,aAAA9I,EAAA4Q,KAAA5Q,EAAAmO,QAAAnO,EAAAV,MACA,EAEA0S,EAAAA,EAAAS,OAAAC,CAAA,CACA,CAAA,EAEA,EAAAd,EAAA3S,QACA2S,EAAA5Q,QAAA2R,IACA,EAAAA,EAAA5J,iBAAA9J,QACA0T,EAAA5J,iBAAA/H,QAAA3B,IACAwS,EAAAlM,KAAAtG,CAAA,EAEAsC,KAAAwP,iBAAA,CAAA,EAAA9R,CAAA,CACA,CAAA,EAGA,EAAAsT,EAAA3J,eAAA/J,QACA0T,EAAA3J,eAAAhI,QAAA8H,IACAgJ,EAAAnM,KAAAmD,CAAA,CACA,CAAA,CAEA,CAAA,EAGA,EAAAkJ,EAAA/S,QACA+S,EAAAhR,QAAA2R,IACA,EAAAA,EAAAvJ,cAAAnK,QACA0T,EAAAvJ,cAAApI,QAAA8H,IACAgJ,EAAAnM,KAAAmD,CAAA,CACA,CAAA,CAEA,CAAA,EAGA,EAAAgJ,EAAA7S,SACA6S,EAAAc,KAAAJ,GAAA,qBAAAA,EAAA3J,QAAA,GAGAlH,KAAAkR,6BAAA,CAAA,CAAA,GAIAlR,KAAAwJ,WAAAnK,QAAAhB,IACA6R,EAAAN,SAAAvR,EAAAX,IAAA,GACAsC,KAAAwP,iBAAA,CAAA,EAAAnR,EAAAX,IAAA,EAGA,MAAA+E,EAAAzC,KAAA+O,eAAA1Q,EAAAX,IAAA,EAEA+E,GACAA,EAAA0O,eAAA9R,QAAAqD,IACAyN,EAAA9Q,QAAA8H,IACAA,EAAAG,aAAAsI,SAAAlN,EAAA/E,KAAA,GAAA8E,EAAA2O,OAAAtN,UAAAqD,EAAAD,UACAkJ,EAAApM,KAAA,CACAtG,KAAA+E,EAAA2O,OAAAtN,QACAnG,MAAA+E,EAAA/E,KACA,CAAA,CAEA,CAAA,CACA,CAAA,CAEA,CAAA,EAEAqC,KAAAwC,QAAAnD,QAAAgS,IACA1Q,IAAA2Q,EAAAD,CAAAA,CAAAA,EAAAvB,SAAA,GAAAuB,EAAAvB,SAAA,EAAAnS,MA4BA,GA1BA0T,EAAAF,eAAA9R,QAAAkS,IACAA,EAAAvB,SAAA,CAAA,EAEAI,EAAA/Q,QAAA3B,IACA2T,EAAAD,OAAAtN,UAAApG,EAAAA,MAAA6T,EAAA5T,QAAAD,EAAAC,QACA4T,EAAAvB,SAAA,CAAA,EAEA,CAAA,CACA,CAAA,EAEA,EAAAqB,EAAAG,cAAAlU,QACAmU,GAxHA,IAEA9Q,IAAA+Q,EAAAhB,EAAAc,cACA7Q,IAAAgR,EAAAjB,EAAAS,eAEA,OAAAO,EAAAjB,IAAA,CAAAmB,EAAArS,KACA,IAAAiD,EAAA+N,MAAAC,KAAAoB,EAAArP,iBAAA,QAAA,CAAA,EAAAkO,IAAAtJ,IAEAxG,IAAAqP,EAQA,OANA2B,EAAAtS,QAAAkS,IACApK,EAAAxJ,QAAA4T,EAAA5T,QACAqS,EAAAuB,EAAAvB,SAEA,CAAA,EAEA,CACArS,MAAAwJ,EAAAxJ,MACA+R,MAAAvI,EAAAsH,YACAuB,SAAAA,CACA,CACA,CAAA,EAEA,MAAA,CACAN,MAAAkC,EAAAlC,MACA3L,GAAAxE,EAAA,EACAyQ,SAAA,CAAA,EACAxN,QAAAA,CACA,CACA,CAAA,CACA,GA0FA6O,CAAA,KAGAI,EAAAzN,KAAA,CACArG,MAAA,GAAA+R,MAAAjM,aAAAhB,MACA,CAAA,EAEA4O,EAAAQ,WAAAJ,EAAA,QAAA,QAAA,CAAA,CAAA,GAGAnB,EAAAV,SAAAyB,EAAAD,OAAAtN,OAAA,GACAuN,EAAAQ,WAAAR,EAAAF,eAAA,QAAA,QAAA,CAAA,CAAA,EAIAG,EAEAD,EAAArC,iBAAA,CAAAsC,EAAA,EAEAlB,EAAA/Q,QAAA3B,IACA,GAAA2T,EAAAD,OAAAtN,UAAApG,EAAAA,MAAA4T,IAAA5T,EAAAC,MAAA,CAEA,qBAAAD,EAAAA,MAAA,MAAAA,EAAAC,QACAqC,KAAAkR,6BAAA,CAAA,CAAA,EACAlR,KAAAgO,+BAAA,CAAA,CAAA,GAGA,IAAA,MAAA7G,KAAAkK,EAAAF,eAAA,CACA,GAAA,KAAAhK,EAAAxJ,MAAA,CACA0T,EAAArC,iBAAA,CAAA,GAAA,EAEAhP,KAAAqC,gBAAA,EAEA,KACA,CACA,GAAA,CAAA8E,EAAA6I,SAAA,CACAqB,EAAArC,iBAAA,CAAA7H,EAAAxJ,MAAA,EAEAqC,KAAAqC,gBAAA,EAEA,KACA,CAEA,CACA,CACA,CAAA,MACA,CAEA,IAAAyP,EAAAT,EAAAU,cAAAvP,QACA7B,IAAAqR,EAAA,EAEA,GAAA,EAAAF,EAAAxU,OAAA,CACA,IAAA,MAAA2U,KAAAH,EACAG,EAAAjC,UAAA,KAAAiC,EAAAtU,OACAqU,CAAA,GAIA,GAAA,IAAAA,EACA,IAAA,MAAAE,KAAAJ,EACAI,EAAAlC,UAAA,KAAAkC,EAAAvU,QACA0T,EAAArC,iBAAA,CAAAkD,EAAAvU,MAAA,EAEAqC,KAAAmS,mBAAA,EAIA,CACA,CACA,CAAA,CACA,CAEA/P,iBACA,EAAApC,KAAAyI,aAAAnL,QACA0C,KAAAyI,aAAApJ,QAAAoN,IACAA,EAAA3K,iBAAA,QAAA,IAGA,GAFAsQ,EAAAC,gBAAA,EAEA5F,EAAAgB,mBAAA,CACAzN,KAAA0I,YAAArJ,QAAAiT,GAAAC,EAAAD,CAAA,CAAA,EAEA3R,IAAA6R,EAAA/F,EAAAgB,mBAEA+E,EAAA1R,UAAAiB,SAAA,QAAA,GACA0K,EAAA3L,UAAAE,IAAA,QAAA,EACAwR,EAAA1R,UAAAE,IAAA,QAAA,GAEAhB,KAAAiB,SAAA,OAAA,aAAA,CACAwR,GAAAD,EAAAlP,QAAAoP,OACA,CAAA,EACA9S,KAAA,IACA,IAGA+S,EACAC,EACAC,EALAhT,EAAAlB,KAAAwC,SACAtB,EAAAlB,KAAAA,MAEAgU,EAAAH,EAAAtS,cAAA,WAAA,EACA0S,EAAAJ,EAAAtS,cAAA,iBAAA,EACA2S,EAAAL,EAAAtS,cAAA,WAAA,EAEAyS,EAAA9Q,UAAA,OAAAhC,EAAAlB,KAAAA,KAAAgU,OAAA5E,KAAAA,IAAAlO,EAAAlB,KAAAA,KAAAgU,MAAA9S,EAAAlB,KAAAA,KAAAgU,MAAA,GACAC,EAAA/Q,UAAA,OAAAhC,EAAAlB,KAAAA,KAAAiU,aAAA7E,KAAAA,IAAAlO,EAAAlB,KAAAA,KAAAiU,YAAA/S,EAAAlB,KAAAA,KAAAiU,YAAA,GAEA/S,EAAAlB,KAAAA,KAAAkU,QACAA,EAAAC,IAAAjT,EAAAlB,KAAAA,KAAAkU,MACAA,EAAA/R,UAAAE,IAAA,QAAA,GAGAhB,KAAAS,OAAAK,UAAAC,OAAA,QAAA,EACA0L,EAAA3L,UAAAE,IAAA,QAAA,EACAwR,EAAA1R,UAAAE,IAAA,SAAA,QAAA,GAKAhB,KAAAS,OAAAK,UAAAC,OAAA,QAAA,CAEA,CAAA,EAIA5D,SAAA2E,iBAAA,QAAAiR,CAAA,CACA,CACA,CAAA,CACA,CAAA,EAGA,EAAA/S,KAAA2I,kBAAArL,QACA0C,KAAA2I,kBAAAtJ,QAAAoN,IACAA,EAAA3K,iBAAA,QAAA,IACAsQ,EAAAC,gBAAA,EAEA5F,EAAAuG,eACAT,EAAA9F,EAAAuG,aAAA,CAEA,CAAA,CACA,CAAA,EAGA,MAAAD,EAAA,IACA/S,KAAA0I,YAAArJ,QAAAiT,IACAA,EAAAvQ,SAAAqQ,EAAAa,MAAA,GACAV,EAAAD,CAAA,CAEA,CAAA,EAEAtS,KAAAyI,aAAApJ,QAAAoN,IACAA,EAAA1K,SAAAqQ,EAAAa,MAAA,GAAAxG,EAAAgB,mBAAA1L,SAAAqQ,EAAAa,MAAA,GACAV,EAAA9F,EAAAgB,kBAAA,CAEA,CAAA,CACA,EAEA8E,EAAA,IACAD,IAEAA,EAAAxR,UAAAC,OAAA,QAAA,EACAuR,EAAA3E,uBAAA7M,UAAAC,OAAA,QAAA,EAEA5D,SAAA+V,oBAAA,QAAAH,CAAA,EACA,CACA,CAEA7B,6BAAAvP,GACA,IAAAwR,EAAAnT,KAAAC,KAAAC,cAAA,4BAAA,EAEAiT,IAEAxR,EACAwR,EAAArS,UAAAC,OAAA,MAAA,EAEAoS,EAAArS,UAAAE,IAAA,MAAA,EAEA,CAEAgN,+BAAArM,GACA,IAAAyR,EAAApT,KAAAC,KAAAsC,iBAAA,+BAAA,EAEA,IAAA6Q,EAAA9V,SAEAqE,EACAyR,EAAA/T,QAAA8T,IACAA,EAAArS,UAAAC,OAAA,MAAA,CACA,CAAA,EAEAqS,EAAA/T,QAAA8T,IACAA,EAAArS,UAAAE,IAAA,MAAA,CACA,CAAA,EAEA,CAGA6N,qBAEAlO,IAAA0S,EAAA,CAAA,EACAC,EAAA,CAAA,EACAC,EAAA,CAAA,EAEA,MAkBAC,EAAA,KAEA7S,IAAA8S,EAAAzT,KAAA4L,mBAAAjO,MAEA0V,GAEArT,KAAAuK,aAAAlL,QAAAhB,IAxBA,IAAAoV,EASAC,EAgBA,KAAArV,EAAAV,QACAU,EAAAV,OA1BA2T,EA0BAjT,EAAAV,MA1BA8V,EA0BAA,EAxBAE,EAAAtE,OAAAiC,CAAA,EACAsC,EAAAvE,OAAAoE,CAAA,EAEAE,EAAAC,EACAA,EAKA,GAFAF,EAAAC,EAAAC,GAGAD,GAAAC,EAAAF,GAGAC,GAaA,CAAA,CACA,EAEA3T,KAAA6J,qBAAAxK,QAAAwU,IACAA,EAAA/R,iBAAA,SAAA,KACA9B,KAAA6J,qBAAAxK,QAAAyU,IACA,0BAAAA,EAAA/P,KACAuP,EAAA,CAAA,CAAAQ,EAAAtH,SAGA,kBAAAsH,EAAA/P,KACAwP,EAAA,KAAAO,EAAAnW,SAGAqC,KAAA4L,mBAAAjO,MAAA,IAGA,CAAA,EAEA2V,EACAtT,KAAAC,KAAAC,cAAA,0BAAA,GACAF,KAAAC,KAAAC,cAAA,0BAAA,EAAAY,UAAAE,IAAA,MAAA,EAGAhB,KAAAC,KAAAC,cAAA,0BAAA,GACAF,KAAAC,KAAAC,cAAA,0BAAA,EAAAY,UAAAC,OAAA,MAAA,GAIAsS,EAAAC,GAAAC,IAGAC,EAAA,CAEA,CAAA,CACA,CAAA,EAEA,EAAAxT,KAAAuK,aAAAjN,QACA0C,KAAAuK,aAAAlL,QAAA0U,IACAA,EAAAjS,iBAAA,OAAA0R,CAAA,CACA,CAAA,CAEA,CAEA1G,oBACA,IAAAkH,EAAAhU,KAAAC,KAAAC,cAAA,qBAAA,EACAuC,EAAAzC,KAAA+O,eAAA,eAAA,EACAkF,EAAAxR,EAAAqN,SAAA,EAAA9M,YAAA,GAAAP,EAAAqN,SAAA,EAAAJ,MACA+D,EAAA,OAAAzT,KAAA4L,mBAAAjO,OAAAoQ,KAAAA,IAAA/N,KAAA4L,mBAAAjO,MAAAqC,KAAA4L,mBAAAjO,MAAA,GACA,MAAAuW,EAAAlU,KAAAC,KAAAC,cAAA,yBAAA,EACA,IAqBAiU,EArBAC,EAAApU,KAAA4I,MAAA1I,cAAA,WAAA,EACAmU,EAAA5R,EAAA0O,eAAAmD,KAAA,GAAA5R,EAAA6R,QAAA,EAEA,GAAA,EAAAvU,KAAAuE,UAAAjH,OAAA,CACAqD,IAAA6T,EAAA,OACA,IAAA,IAAAnX,EAAA,EAAAA,EAAA2C,KAAAuE,UAAAjH,OAAAD,CAAA,GACAmX,GAAA,OAAAxU,KAAAuE,UAAAlH,GAAA,QAEAmX,GAAA,QACAJ,EAAAK,UAAAD,CACA,MACAJ,EAAAK,UAAA,GAGAT,EAAAnS,UAAAoS,OAAAR,MAAAY,EAAAA,EAAAK,iBAAA,IAEA,IAAA,MAAA9M,KAAA5H,KAAAmM,gBACAvE,EAAA4E,UACAmI,EAAA3U,KAAA2P,cAAA/H,EAAA7D,EAAA,IAKA,GAFAoQ,EAAAQ,EAAApS,iBAAA,eAAA,GAEAjF,QACA6W,EAAA9U,QAAAwT,IACAA,EAAA/R,UAAAiB,SAAA,QAAA,IACAmS,EAAApB,IAAAD,EAAAC,IAEA,CAAA,CAKA,CAEAnE,qBACAhO,IAAAiU,EAAAC,EAEA7U,KAAA2J,iBAAAtK,QAAAwU,IACAA,EAAA/R,iBAAA,SAAA,KAEA9B,KAAA4N,kBAAA,CAAA,EAAA,gBAAA,EAEA,oBAAAiG,EAAA9P,KACA8Q,EAAAhB,EAAAlW,MAEAqC,KAAAiB,SAAA,OAAA,eAAA,CACA4D,UAAAgQ,CACA,CAAA,EACAjV,KAAA,IAEAe,IAAA8B,EAAAzC,KAAA+O,eAAA,YAAA,EACApO,IAAAmU,EAAA,GAEAjV,EAAAsB,UACAtB,EAAAlB,KAAAwC,SAEA4T,EAAAlV,EAAAlB,KAAAA,KACAmW,EAAAC,EAAAtE,IAAApT,GAAA2X,OAAAC,OAAA5X,CAAA,EAAA,EAAA,EAEAoF,EAAA0O,eAAA9R,QAAAkS,IACAA,EAAAvB,SAAA,CAAA,EAEA8E,EAAAzV,QAAA3B,IACA6T,EAAA5T,QAAAD,IACA6T,EAAAvB,SAAA,CAAA,EAEA,CAAA,CACA,CAAA,EAEAvN,EAAAoP,WAAApP,EAAA0O,eAAA,QAAA,QAAA,CAAA,CAAA,EAEAnR,KAAAqC,gBAAA,IAGAI,EAAA0O,eAAA9R,QAAAkS,IACAuD,EAAAzV,QAAA3B,IACA6T,EAAA5T,QAAAD,IACA6T,EAAAvB,SAAA,CAAA,EAEA,CAAA,CACA,CAAA,EAEAvN,EAAAoP,WAAApP,EAAA0O,eAAA,QAAA,QAAA,CAAA,CAAA,GAGAnR,KAAAS,OAAAK,UAAAC,OAAA,QAAA,EAEA,CAAA,GAGA,eAAA8S,EAAA9P,KACA6Q,EAAAf,EAAAlW,OAGAkX,GAAAD,GACA5U,KAAAmS,mBAAA,CAEA,CAAA,CACA,CAAA,CACA,CAEAA,qBACAxR,IAAAkU,EAAAK,EAAAC,EAEAnV,KAAA2J,iBAAAtK,QAAAwU,IACA,eAAAA,EAAA9P,KACAmR,EAAArB,EAAAlW,OAGA,oBAAAkW,EAAA9P,KACA8Q,EAAAhB,EAAAlW,MAEA,CAAA,EAEAkX,GAAAK,GACAlV,KAAAiB,SAAA,OAAA,eAAA,CACA4D,UAAAgQ,EACAO,SAAAF,CACA,CAAA,EACAtV,KAAA,IACA,IAGA6C,EAHA5C,EAAAsB,UACAkU,EAAAxV,EAAAlB,KAAAA,MAEA8D,EAAAzC,KAAA+O,eAAA,gBAAA,GAEAuG,kBAAA,CAAA,EAEA,EAAAD,EAAA/X,QAEA6X,EADA,IAAAE,EAAA/X,SAGA6X,EAAAE,EAAAf,KAAAzD,GAAA,SAAAA,EAAA0E,SAAA,IAGAF,EAAA,KAKA5S,EAAAoP,WAAA,CACA,CACAlU,MAAAwX,EAAAK,YACA9F,MAAAyF,EAAAM,cAAA,IAAAN,EAAAO,iBACA,GACA,QAAA,QAAA,CAAA,CAAA,EAEAjT,EAAAuM,iBAAA,CAAAmG,EAAAK,YAAA,EAEAxV,KAAAqC,gBAAA,GAGArC,KAAA4N,kBAAA,CAAA,EAAA,gBAAA,GAGAnL,EAAAoP,WAAA,GAAA,QAAA,QAAA,CAAA,CAAA,EAEA7R,KAAA4N,kBAAA,CAAA,EAAA,gBAAA,GAGA5N,KAAAS,OAAAK,UAAAC,OAAA,QAAA,EAEA,CAAA,CAEA,CAEA4O,cAAAjS,GACAgS,EAAA1P,KAAAC,KAAAC,4BAAAxC,KAAA,EAEA,OAAAgS,GAGA,CAAA,CAEA,CAEAd,eAEAjO,IAAAgV,EAAA,EAAAtI,EAAA,EAAAzF,EAEA5H,KAAA4J,cAAAvK,QAAAwU,IACAA,EAAA/R,iBAAA,SAAA,KACA,eAAA+R,EAAAnW,OACAsC,KAAA0H,UAAAC,MAAAkM,EAAAlW,OAGA,mBAAAkW,EAAAnW,OACAsC,KAAA0H,UAAAG,SAAAgM,EAAArH,QAAA,SAAA,WAGA,gBAAAqH,EAAAnW,OACAiY,EAAAtG,OAAAwE,EAAAlW,KAAA,GAGA,iBAAAkW,EAAAnW,OACA2P,EAAAgC,OAAAwE,EAAAlW,KAAA,GAIAiK,EADA,cAAA5H,KAAA0H,UAAAC,MACAgO,EAAAtI,EAAA,aAAAsI,IAAAtI,EAAA,OAAA,WACA,SAAArN,KAAA0H,UAAAC,MACAgO,EAAAtI,EAAA,aAAA,WAEA,OAGArN,KAAA0H,UAAAE,UAAAA,EAEA5H,KAAAiI,YAAA5I,QAAAuW,IACAA,EAAAtS,QAAAqE,QAAA3H,KAAA0H,UAAAC,OAAAiO,EAAAtS,QAAAuE,WAAA7H,KAAA0H,UAAAG,UAAA+N,EAAAtS,QAAAsE,YAAA5H,KAAA0H,UAAAE,WACA,IAAAiO,QAAAC,IACAA,EAAA9V,KAAAiI,YAAA5I,QAAA0W,GAAAA,EAAAjV,UAAAC,OAAA,QAAA,CAAA,CAAA,CACA,CAAA,EAAAnB,KAAA,IAAAgW,EAAA9U,UAAAE,IAAA,QAAA,CAAA,CAEA,CAAA,CACA,CAAA,CACA,CAAA,CACA,CAEA6L,kBAEA7M,KAAAiJ,WAAApH,UAAA,GAEA7B,KAAAiB,SAAA,OAAA,kBAAAjB,KAAA0E,cAAA,EACA9E,KAAA,IACA,IAiBAoW,EAjBAnW,EAAAsB,UACAtB,EAAAlB,KAAAmP,WACAjO,EAAAlB,KAAAA,OACAqB,KAAAgI,aAAAyM,UAAA5U,EAAAlB,KAAAA,KAAAsX,MAEAjW,KAAAS,OAAAK,UAAAC,OAAA,QAAA,EAEAlB,EAAAlB,KAAAwC,WACAnB,KAAAmI,UAAArH,UAAAE,IAAA,QAAA,EACAhB,KAAAqI,WAAAvH,UAAAE,IAAA,QAAA,EAEAhB,KAAAkE,aAAA,CAAA,EAEAlE,KAAAkW,iBAAA,EAEArW,EAAAlB,KAAAA,KAAAwX,eAEAH,EAAAhB,OAAAC,OAAApV,EAAAlB,KAAAA,KAAAwX,YAAA,EAEAnW,KAAAoW,4BAAAJ,CAAA,EAEAhW,KAAAsE,uBAAA0R,EAEAhW,KAAAoO,sBAAA,CAAA,CAAA,GAGAvO,EAAAlB,KAAAA,KAAA0X,aACArW,KAAAuE,UAAA1E,EAAAlB,KAAAA,KAAA0X,YAGAxW,EAAAlB,KAAAA,KAAA8F,WACAzE,KAAAuM,gBAAA1K,UAAAhC,EAAAlB,KAAAA,KAAA8F,UACAzE,KAAAsM,iBAAAxL,UAAAC,OAAA,MAAA,IAMAf,KAAAuM,gBAAA1K,UAAA,GACA7B,KAAAsM,iBAAAxL,UAAAE,IAAA,MAAA,GAEAhB,KAAAiE,aACAjE,KAAA+H,UAAAqF,MAAAC,OAAArN,KAAA+H,UAAAuF,aAAA,MAMAjM,OAAAC,KAAAzB,EAAAlB,KAAA4C,IAAA,OAAA,EAGA,CAAA,CACA,CAEA6U,4BAAAnB,GACA,IAAA7J,EAAApL,KAAA+O,eAAA,sBAAA,EAEA3D,IAEA,EAAA6J,EAAA3X,OACA8N,EAAAyG,WAAAoD,EAAAxE,IAAAc,IAAA,CACA7B,MAAA6B,EAAArD,UACAvQ,MAAA4T,EAAArD,SACA,EAAA,EAAA,QAAA,QAAA,CAAA,CAAA,EAGA9C,EAAAyG,WAAA,GAAA,QAAA,QAAA,CAAA,CAAA,EAEA,CAEAjF,mBAEA5M,KAAAiB,SAAA,OAAA,YAAAjB,KAAA0E,cAAA,EACA9E,KAAA,IACAC,EAAAsB,UACAtB,EAAAlB,KAAAmP,YACAjO,EAAAlB,KAAAA,MACAqB,KAAAoJ,kBAAAtI,UAAAE,IAAA,MAAA,EACAhB,KAAAqJ,mBAAAvI,UAAAE,IAAA,QAAA,GAIAhB,KAAAkJ,WAAApI,UAAAC,OAAA,QAAA,EACAf,KAAAS,OAAAK,UAAAC,OAAA,QAAA,GAGAM,OAAAC,KAAAzB,EAAAlB,KAAA4C,IAAA,OAAA,EAGA,CAAA,CACA,CAEAmN,mBAEA,MAAA4H,EAAAtW,KAAAC,KAAAC,cAAA,oBAAA,EACAiP,EAAAnP,KAAAC,KAAAC,cAAA,gCAAA,EACAqW,EAAAvW,KAAAC,KAAAC,cAAA,yBAAA,EAEAsW,EAAA,IACA,MAAAC,EAAAnX,EAAA5B,KAEAgZ,EAAA1W,KAAAwE,cAAAmS,UAAA9F,GAAAA,EAAAnT,OAAA+Y,CAAA,EAEA,CAAA,IAAAC,GACA1W,KAAAwE,cAAAoS,OAAAF,EAAA,CAAA,CAEA,EAEAG,EAAA,CAAAvX,EAAAwX,EAAA,CAAA,KACA,MAAAC,EAAA5Z,SAAA6Z,cAAA,KAAA,EACAD,EAAAE,UAAAH,EAAA,yBAAA,+BACAC,EAAAhT,GAAAzE,EAAA5B,KAEA,IAAAwZ,EAAA/Z,SAAA6Z,cAAA,GAAA,EAIAG,GAHAD,EAAAD,UAAA,YACAC,EAAAzI,YAAAnP,EAAA5B,KAEAP,SAAA6Z,cAAA,QAAA,GACAG,EAAA1I,YAAA,GACA0I,EAAArV,iBAAA,QAAA,WACAiV,EAAAhW,OAAA,EACAyV,EAAAlX,CAAA,CACA,CAAA,EAEAyX,EAAAK,YAAAF,CAAA,EACAH,EAAAK,YAAAD,CAAA,EAEAb,EAAAc,YAAAL,CAAA,CACA,EAEAM,EAAA,IACArX,KAAAwE,cAAAyM,KAAAM,GAAAA,EAAA7T,OAAA4B,EAAA5B,IAAA,GAEAsC,KAAAiB,SAAA,OAAA,YAAAjB,KAAA0E,eAAA,CAAApF,EAAA,EACAM,KAAAC,IACAG,KAAAS,OAAAK,UAAAC,OAAA,QAAA,EAEAlB,EAAAlB,KAAAwC,SACAnB,KAAAwE,cAAAR,KAAA1E,CAAA,EAEAuX,EAAAvX,CAAA,IAEAuX,EAAAvX,EAAA,CAAA,CAAA,EAEA6P,EAAArO,UAAAE,IAAA,OAAA,EAEA,CAAA,CACA,EAEAhB,KAAAwL,UAAA1J,iBAAA,SAAA,KAEAqN,EAAArO,UAAAC,OAAA,OAAA,EAEA,EAAAf,KAAAwL,UAAA5M,MAAAtB,QACAiT,MAAAC,KAAAxQ,KAAAwL,UAAA5M,KAAA,EAAAS,QAAAC,IACA+X,EAAA/X,CAAA,CACA,CAAA,CAEA,CAAA,EAEA,CAAA,WAAA,aAAAD,QAAAiY,IACAf,EAAAzU,iBAAAwV,EAAA,IACAtV,EAAAuV,eAAA,CACA,CAAA,CACA,CAAA,EAEAhB,EAAAzU,iBAAA,OAAA,IAKA,GAJAE,EAAAuV,eAAA,EAEApI,EAAArO,UAAAC,OAAA,OAAA,EAEA,EAAAiB,EAAAwV,aAAA5Y,MAAAtB,OACA,IAAA,MAAAgC,KAAA0C,EAAAwV,aAAA5Y,MACAyY,EAAA/X,CAAA,CAGA,CAAA,CACA,CAEA4W,mBAEA,IAAAuB,EAAAzX,KAAAC,KAAAsC,iBAAA,gBAAA,EAEA,EAAAkV,EAAAna,QACAma,EAAApY,QAAAoN,IACAA,EAAA3K,iBAAA,QAAA,KACA9B,KAAA4I,MAAA9H,UAAAC,OAAA,QAAA,EAEAf,KAAAkJ,WAAApI,UAAAE,IAAA,QAAA,CACA,CAAA,CACA,CAAA,CAEA,CAEAoN,sBAAAqB,GACAzP,KAAAoE,eAAAqL,EAEA,IAAAiI,EAAA1X,KAAAC,KAAAC,cAAA,kBAAA,EACAyX,EAAA3X,KAAAC,KAAAC,cAAA,oBAAA,EAEAuP,GACAiI,EAAA5W,UAAAE,IAAA,MAAA,EACA2W,EAAA7W,UAAAC,OAAA,MAAA,IAEA2W,EAAA5W,UAAAC,OAAA,MAAA,EACA4W,EAAA7W,UAAAE,IAAA,MAAA,EAEA,CAEA2L,eAAAsI,EAAA2C,EAAA,CAAA,GAEAjX,IAAAkX,EAAA,CAAA,EAEA,GAAA,IAAA5C,EAAA3X,OAAA,MAAA,CAAA,EAEA,IAAA,MAAAe,KAAA4W,EACA5W,EAAAwE,aAAA,UAAA,GAAA,CAAAxE,EAAAwE,aAAA,UAAA,IACA,aAAAxE,EAAA4Q,MAAA,KAAA5Q,EAAAV,OAAA,aAAAU,EAAA4Q,MAAA,CAAA5Q,EAAAmO,UACAxM,KAAA4N,kBAAA,CAAA,EAAAvP,EAAAX,IAAA,EAEAma,EAAA,CAAA,GAKA7X,KAAA4N,kBAAA,CAAA,EAAAvP,EAAAX,IAAA,EAQA,OAJAma,GACA7X,KAAA8X,UAAAF,CAAA,EAGAC,CACA,CAEAC,UAAAF,GAEA,IAAAG,EAAA/X,KAAAC,KAAAC,cAAA,mBAAA,EAEAS,IAAAqX,EAAA,GAEA,IAAAC,EAAAjY,KAAA+O,eAAA,0BAAA,EAEApO,IAAAuX,EAAAlY,KAAA+O,eAAA,0BAAA,EAAAe,SAAA,EAEAmI,GACAA,EAAA9G,eAAA9R,QAAAqD,IACAA,EAAA/E,QAAAua,EAAAva,QACAqa,EAAAtV,EAAAgS,iBAEA,CAAA,EAGAyD,EAAA,CAAA,GAAAnY,KAAAmM,iBAAAmI,KAAAjW,GAAAA,EAAAmO,OAAA,EAEAxM,KAAA0E,eAAAI,MAAA9E,KAAA8J,UAAAnM,MACAqC,KAAA0E,eAAAS,OAAAnF,KAAA+J,WAAApM,MACAqC,KAAA0E,eAAAU,MAAApF,KAAAgK,YAAArM,MACAqC,KAAA0E,eAAAK,SAAA/E,KAAAkK,WAAAvM,MACAqC,KAAA0E,eAAAE,OAAA5E,KAAAiK,UAAAtM,MACAqC,KAAA0E,eAAAC,UAAA3E,KAAAmK,eAAAxM,MACAqC,KAAA0E,eAAAO,UAAA,aAAA+S,EAAAhY,KAAAoK,uBAAAzM,MAAA,IACAqC,KAAA0E,eAAAM,MAAA,YAAAgT,EAAAhY,KAAAoK,uBAAAzM,MAAA,IACAqC,KAAA0E,eAAAG,UAAA7E,KAAAqK,cAAA1M,MACAqC,KAAA0E,eAAAW,KAAArF,KAAAsK,UAAA3M,MACAqC,KAAA0E,eAAAY,UAAAsS,EAAA5X,KAAAoL,iBAAApL,KAAAwK,cAAA7M,MACAqC,KAAA0E,eAAAa,SAAAqS,CAAAA,GAAA,OAAA5X,KAAAyK,aAAA9M,OAAAoQ,KAAAA,IAAA/N,KAAAyK,aAAA9M,MAAAqC,KAAAyK,aAAA9M,MAAA,IACAqC,KAAA0E,eAAAc,SAAAoS,CAAAA,GAAA,OAAA5X,KAAA0K,aAAA/M,OAAAoQ,KAAAA,IAAA/N,KAAA0K,aAAA/M,MAAAqC,KAAA0K,aAAA/M,MAAA,IACAqC,KAAA0E,eAAAe,SAAAmS,CAAAA,GAAA,OAAA5X,KAAA2K,aAAAhN,OAAAoQ,KAAAA,IAAA/N,KAAA2K,aAAAhN,MAAAqC,KAAA2K,aAAAhN,MAAA,IACAqC,KAAA0E,eAAAgB,SAAAkS,CAAAA,GAAA,OAAA5X,KAAA4K,aAAAjN,OAAAoQ,KAAAA,IAAA/N,KAAA4K,aAAAjN,MAAAqC,KAAA4K,aAAAjN,MAAA,IACAqC,KAAA0E,eAAAiB,SAAAiS,CAAAA,GAAA,OAAA5X,KAAA6K,aAAAlN,OAAAoQ,KAAAA,IAAA/N,KAAA6K,aAAAlN,MAAAqC,KAAA6K,aAAAlN,MAAA,IACAqC,KAAA0E,eAAAkB,SAAAgS,CAAAA,GAAA,OAAA5X,KAAA8K,aAAAnN,OAAAoQ,KAAAA,IAAA/N,KAAA8K,aAAAnN,MAAAqC,KAAA8K,aAAAnN,MAAA,IACAqC,KAAA0E,eAAAmB,SAAA+R,CAAAA,GAAA,OAAA5X,KAAA+K,aAAApN,OAAAoQ,KAAAA,IAAA/N,KAAA+K,aAAApN,MAAAqC,KAAA+K,aAAApN,MAAA,IACAqC,KAAA0E,eAAAoB,SAAA8R,CAAAA,GAAA,OAAA5X,KAAAgL,aAAArN,OAAAoQ,KAAAA,IAAA/N,KAAAgL,aAAArN,MAAAqC,KAAAgL,aAAArN,MAAA,IACAqC,KAAA0E,eAAAqB,UAAA6R,CAAAA,GAAA,OAAA5X,KAAAiL,cAAAtN,OAAAoQ,KAAAA,IAAA/N,KAAAiL,cAAAtN,MAAAqC,KAAAiL,cAAAtN,MAAA,IACAqC,KAAA0E,eAAA4B,cAAAtG,KAAAkL,gBAAAvN,MACAqC,KAAA0E,eAAA2B,QAAArG,KAAA4L,mBAAAjO,MACAqC,KAAA0E,eAAAQ,OAAA,OAAAlF,KAAA0L,aAAA/N,OAAAoQ,KAAAA,IAAA/N,KAAA0L,aAAA/N,MAAAqC,KAAA0L,aAAA/N,MAAA,IACAqC,KAAA0E,eAAAsB,WAAAhG,KAAA6L,eAAAW,QAAA,IAAA,KACAxM,KAAA0E,eAAAuB,QAAAjG,KAAA8L,mBAAAU,QAAA,IAAA,KACAxM,KAAA0E,eAAAwB,eAAAlG,KAAA+L,sBAAAS,QAAA,IAAA,KACAxM,KAAA0E,eAAAyB,YAAAnG,KAAAgM,mBAAAQ,QAAA,IAAA,KACAxM,KAAA0E,eAAA0B,eAAApG,KAAAiM,qBAAAO,QAAA,IAAA,KACAxM,KAAA0E,eAAA6B,aAAA,OAAAvG,KAAAkM,mBAAAvO,OAAAoQ,KAAAA,IAAA/N,KAAAkM,mBAAAvO,MAAAqC,KAAAkM,mBAAAvO,MAAA,GACAqC,KAAA0E,eAAA8B,WAAA,KAAAxG,KAAAkM,mBAAAvO,MAAAqC,KAAAkM,mBAAAkM,QAAApY,KAAAkM,mBAAAmM,eAAAC,KAAA,GACAtY,KAAA0E,eAAAqC,SAAA/G,KAAAoM,cAAAI,QAAA6C,OAAA8I,EAAAxa,KAAA,EAAA,EAAA0R,OAAA8I,EAAAxa,KAAA,EACAqC,KAAA0E,eAAAsC,SAAA+Q,EAAAA,EAAAtJ,YAAA,GAEAzO,KAAA0E,eAAAgC,QAAA,OAAA1G,KAAAqL,aAAA1N,OAAAoQ,KAAAA,IAAA/N,KAAAqL,aAAA1N,MAAAqC,KAAAqL,aAAA1N,MAAA,GACAqC,KAAA0E,eAAAoC,WAAA,OAAA9G,KAAAuL,SAAA5N,OAAAoQ,KAAAA,IAAA/N,KAAAuL,SAAA5N,MAAAqC,KAAAuL,SAAA5N,MAAA,GACAqC,KAAA0E,eAAA+B,cAAA,OAAAzG,KAAAqM,eAAA1O,OAAAoQ,KAAAA,IAAA/N,KAAAqM,eAAA1O,MAAAqC,KAAAqM,eAAA1O,MAAA,GAEA,UAAAqC,KAAA0E,eAAAO,WAAA,MAAAjF,KAAA0E,eAAAQ,SACAlF,KAAA0E,eAAAO,UAAA,SAEA,CAEA2I,kBAAA6B,EAAA/R,GACAwJ,EAAAlH,KAAAC,KAAAC,cAAA,IAAAxC,CAAA,EAEAwJ,IAEAuI,GACAvI,EAAApG,UAAAE,IAAA,OAAA,EAEAkG,EAAAqR,eAAA,CAAAC,SAAA,SAAAC,MAAA,SAAAC,OAAA,SAAA,CAAA,GAEAxR,EAAApG,UAAAC,OAAA,OAAA,EAEA,CAEAE,SAAAxC,EAAAC,EAAAC,EAAAC,GAIA,OAFAoB,KAAAS,OAAAK,UAAAE,IAAA,QAAA,EAEAxC,EAAAC,EAAAC,EAAAC,EAAAC,CAAA,CACA,CAEAmQ,eAAAhL,GACA,IAAA,MAAAtB,KAAAzC,KAAAwC,QACA,GAAAuB,IAAAtB,EAAA2O,OAAAtN,QACA,OAAArB,CAGA,CACA,CAGA,EAAA,EDz+DA,SAAAkW,GA8BA,SAAAC,IAOAD,EAAA,YAAA,EAAArE,KAAA,YAAA,EAAAuE,MAAA,SAAA7W,GA+CA,IAAA0O,EA9CA1O,EAAAiR,QAAAjR,EAAA8W,gBACAH,EAAA3Y,IAAA,EAAA+Y,SAAA,UAAA,EACAC,EAAAL,EAAA3Y,IAAA,EAAAsU,KAAA,WAAA,CAAA,GA4CA5D,EA1CAiI,EAAA3Y,IAAA,EAAAsU,KAAA,WAAA,EA6CA2E,GAFAvI,EAAAiI,EAAAjI,EAAA,EAAA,GAEAwI,KAAA,cAAA,EAAA,GAEAxI,EAAAyI,IAAA,SAAAF,EAAA,IAAA,EACAvI,EAAAyI,IAAA,cAAA,MAAA,EACAzI,EAAAyI,IAAA,iBAAA,KAAA,EAGAzI,EAAA0I,GAAA,eAAA,SAAApX,GACA0O,EAAA2I,IAAA,eAAAC,UAAAC,MAAA,EACA7I,EAAAyI,IAAA,SAAA,IAAA,EACAzI,EAAAyI,IAAA,cAAA,IAAA,EACAzI,EAAAyI,IAAA,iBAAA,IAAA,CACA,CAAA,GAvDAR,EAAA3Y,IAAA,EAAAwZ,YAAA,UAAA,EACAb,EAAA,uBAAA,EAAAc,IAAAzZ,IAAA,EAAA0Z,KAAA,WACAV,EAAAL,EAAA3Y,IAAA,EAAAsU,KAAA,WAAA,CAAA,EACAqE,EAAA3Y,IAAA,EAAA2Z,YAAA,UAAA,CACA,CAAA,EAEA,CAAA,CAGA,CAEA,SAAAX,EAAAtI,GAIA,IAAAuI,GAHAvI,EAAAiI,EAAAjI,EAAA,EAAA,GAGAwI,KAAA,cAAA,EAAA,GAGAU,EAAAlJ,EAAAyI,IAAA,YAAA,EACAzI,EAAAyI,IAAA,aAAA,kBAAA,EAKAU,sBAAA,WACAnJ,EAAAyI,IAAA,SAAAF,EAAA,IAAA,EACAvI,EAAAyI,IAAA,aAAAS,CAAA,EACAlJ,EAAAyI,IAAA,cAAA,MAAA,EACAzI,EAAAyI,IAAA,iBAAA,KAAA,EAIAU,sBAAA,WACAnJ,EAAAyI,IAAA,SAAA,CAAA,EACAzI,EAAAyI,IAAA,cAAA,CAAA,EACAzI,EAAAyI,IAAA,iBAAA,CAAA,CACA,CAAA,CACA,CAAA,CACA,CA+HA,IAAA5X,EAAA,IAAAuY,IAAAzY,OAAA0Y,QAAA,EACAC,EAAA,IAAAF,IAAA3c,SAAA4c,QAAA,EAAAE,aAEA,SAAAC,EAAAC,EAAAxc,GACAA,EACAqc,EAAAI,IAAAD,EAAAxc,CAAA,EAGAqc,EAAAK,OAAAF,CAAA,EAGA5Y,EAAAgC,OAAAyW,EAAAM,SAAA,EAEAC,QAAAC,aAAA,GAAA,KAAAjZ,EAAA+Y,SAAA,CAAA,CACA,CAkBA,SAAAG,IACA,IAAAC,EAjBA,SAAAC,GAMA,IALA,IAEAC,EADAC,EADAxZ,OAAA0Y,SAAAxW,OAAAuX,UAAA,CAAA,EACAC,MAAA,GAAA,EAIA1d,EAAA,EAAAA,EAAAwd,EAAAvd,OAAAD,CAAA,GAGA,IAFAud,EAAAC,EAAAxd,GAAA0d,MAAA,GAAA,GAEA,KAAAJ,EACA,OAAA5M,KAAAA,IAAA6M,EAAA,IAAAI,mBAAAJ,EAAA,EAAA,EAGA,MAAA,CAAA,CACA,EAGA,GAAA,EAEAF,GAAA,EAAA/B,EAAA,uBAAA+B,EAAA,IAAA,EAAApd,QACAqb,EAAA,CAAAxb,SAAA8d,gBAAA9d,SAAAwC,KAAA,EAAAub,QAAA,CACAC,UAAAxC,EAAA,uBAAA+B,EAAA,IAAA,EAAAU,OAAA,EAAAC,IAAA,GACA,EAAA,IAAA,WACA1C,EAAA,uBAAA+B,EAAA,IAAA,EAAApG,KAAA,OAAA,EAAAuE,MAAA,CACA,CAAA,EAGAF,EAAA,UAAA,EAAAe,KAAA,WACAf,EAAA3Y,IAAA,EAAAsb,SAAA,QAAA,EACA,IAAAjO,EAAAsL,EAAA3Y,IAAA,EAAAsU,KAAA,iBAAA,EAAAiH,YAAA,EAAA,GACA5C,EAAA3Y,IAAA,EAAAsU,KAAA,iBAAA,EAAA6E,IAAA,SAAA9L,CAAA,EACAsL,EAAA3Y,IAAA,EAAA2Z,YAAA,QAAA,EACAhB,EAAA3Y,IAAA,EAAAsU,KAAA,6BAAA,EAAAkH,IAAA7C,EAAA3Y,IAAA,EAAAsU,KAAA,WAAA,EAAAgE,KAAA,CAAA,CACA,CAAA,EAEAK,EAAA,UAAA,EAAArE,KAAA,OAAA,EAAA8E,GAAA,QAAA,WACAT,EAAA,UAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,gBAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA3Y,IAAA,EAAAyb,QAAA,UAAA,EAAAH,SAAA,QAAA,EACA3C,EAAA3Y,IAAA,EAAAsb,SAAA,QAAA,EACApB,EAAA,IAAAvB,EAAA3Y,IAAA,EAAA0b,KAAA,WAAA,CAAA,CACA,CAAA,EAEA/C,EAAA,UAAA,EAAArE,KAAA,eAAA,EAAA8E,GAAA,QAAA,WACAT,EAAA3Y,IAAA,EAAAyb,QAAA,UAAA,EAAA9B,YAAA,QAAA,EACAhB,EAAA3Y,IAAA,EAAAyb,QAAA,UAAA,EAAAnH,KAAA,OAAA,EAAAqF,YAAA,QAAA,EACAO,EAAA,GAAA,EACAvB,EAAA,CAAAxb,SAAA8d,gBAAA9d,SAAAwC,KAAA,EAAAub,QAAA,CACAC,UAAAxC,EAAA3Y,IAAA,EAAAyb,QAAA,YAAA,EAAAL,OAAA,EAAAC,IAAA,EACA,EAAA,GAAA,CACA,CAAA,EAEA1C,EAAA,0BAAA,EAAAS,GAAA,QAAA,SAAApX,GACAA,EAAAiR,QAAAjR,EAAA8W,eACAH,EAAA,0BAAA,EAAAgB,YAAA,QAAA,CAEA,CAAA,EAEAhB,EAAA,oBAAA,EAAAS,GAAA,SAAA,WACA,IAAA5N,EAAAmN,EAAA3Y,IAAA,EAAAyb,QAAA,OAAA,EAAAnH,KAAA,aAAA,EAEAqE,EAAAnN,CAAA,EAAAmO,YAAA,iBAAA,EAEA,KAAAhB,EAAA3Y,IAAA,EAAAwb,IAAA,GACA7C,EAAAnN,CAAA,EAAA8P,SAAA,QAAA,EACA3C,EAAAnN,CAAA,EAAA8I,KAAA,MAAA,EAAAgE,KAAAK,EAAA3Y,IAAA,EAAAwb,IAAA,EAAAT,MAAA,IAAA,EAAAY,IAAA,CAAA,IAEAhD,EAAAnN,CAAA,EAAAmO,YAAA,QAAA,EACAhB,EAAAnN,CAAA,EAAA8I,KAAA,MAAA,EAAAgE,KAAAK,EAAA,aAAA,EAAA+C,KAAA,WAAA,CAAA,EAEA,CAAA,EAEA/C,EAAA,aAAA,EAAArE,KAAA,QAAA,EAAA8E,GAAA,QAAA,SAAApX,GACAA,EAAAuV,eAAA,EACAoB,EAAA,oBAAA,EAAA6C,IAAA,EAAA,EAAA3H,QAAA,QAAA,CACA,CAAA,EAEA,EAAA8E,EAAA,UAAA,EAAArb,QACAqb,EAAA,cAAA,EAAAS,GAAA,QAAA,WACAT,EAAA3Y,IAAA,EAAAsb,SAAA,SAAA,EACA3C,EAAA3Y,IAAA,EAAAyb,QAAA,aAAA,EAAAnH,KAAA,sBAAA,EAAAuE,MAAA,CACA,CAAA,EAGAF,EAAA,eAAA,EAAAS,GAAA,QAAA,WACAT,EAAA,iBAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,gBAAA,EAAA2C,SAAA,QAAA,EACA3C,EAAA,0BAAA,EAAAgB,YAAA,QAAA,EAEAhB,EAAA,CAAAxb,SAAA8d,gBAAA9d,SAAAwC,KAAA,EAAAub,QAAA,CACAC,UAAAxC,EAAA,YAAA,EAAAyC,OAAA,EAAAC,GACA,EAAA,GAAA,CACA,CAAA,CAEA,CAyFA,IApSAO,EAAAC,EACAC,EA0YA,SAAAre,EAAAse,EAAApe,EAAAqe,GACA,IAAAje,EAAA,IAAAD,KACAC,EAAAC,QAAAD,EAAAE,QAAA,EAAA,GAAA+d,EAAA,GAAA,GAAA,GAAA,EACA7e,SAAAgB,OAAA4d,EAAA,IAAApe,EAAA,YAAAI,EAAAG,YAAA,EAAA,SACA,CA0KA,SAAA+d,IACA,MAAAC,EAAA/e,SAAA+C,cAAA,mBAAA,EAEA,GAAA,CAAAgc,EAAA,OAEA,MAAAC,EAAAD,EAAAhc,cAAA,oBAAA,EACA,IAAAkc,EAAAF,EAAA3Z,iBAAA,oBAAA,EACA,MAAA8Z,EAAAH,EAAA5Y,QAAA+Y,SACAC,EAAAjb,OAAAkb,WAAA,oBAAA,EACAjE,EAAA6D,EAAA7Y,QAAAgV,KACAkE,EAAA,MAAAL,EAAA7Y,QAAAyX,MACA0B,EAAAtf,SAAA+C,cAAA,UAAA,EACAwc,EAAAvf,SAAA+C,cAAA,aAAA,EAEAyc,EAAA,IAEA,GAAAH,EAAA,CAEA,IAAAI,EAAAT,EAAAU,YACAC,EAAAxE,EAAAyC,MAAA,GAAA,EACApa,IAAAoc,EAAA,EAEAC,EAAAF,EAAA,GACA,IAAAG,EAAA,GAEA,IAAAtc,IAAAtD,EAAA,EAAAA,EAAAyf,EAAAxf,OAAAD,CAAA,GAAA,CACA,IAAA6f,EAAAF,EAAA,IAAAF,EAAAzf,IAiBA,CAAAib,EAAA9J,KACA,MAAA2O,EAAAhgB,SAAA6Z,cAAA,GAAA,EACArW,IAAAyc,EAAAd,EAAAe,QAAA,KAAA,KACAF,EAAA/P,MAAAlK,SAAA,WACAia,EAAA/P,MAAAkQ,WAAA,SACAH,EAAA/P,MAAAmQ,WAAA,SACAJ,EAAA/P,MAAAoQ,SAAAlB,EAAAe,QAAA,OAAA,OACAF,EAAA1O,YAAA6J,EACAnb,SAAAwC,KAAAyX,YAAA+F,CAAA,EACA,MAAAxH,EAAAwH,EAAAM,YAAAjP,EAAA4O,EAEA,OADAjgB,SAAAwC,KAAA+d,YAAAP,CAAA,EACAxH,CACA,GA5BAuH,EAAAH,CAAA,GAEAH,EACAI,EAAAE,GAEAD,EAAAjZ,KAAAgZ,CAAA,EACAA,EAAAF,EAAAzf,GACA0f,CAAA,GAEA,CAEAE,EAAAjZ,KAAAgZ,CAAA,EAEAb,EAAA1H,UAAAwI,EAAAxM,IAAAkN,SAAAA,OAAA,EAAAC,KAAA,EAAA,CAxBA,CAyBA,EAgBAjB,EAAArE,CAAA,EAEAjX,OAAAS,iBAAA,SAAA,KACA6a,EAAArE,CAAA,CACA,CAAA,EAEA,EAAA8D,EAAA9e,QACA8e,EAAA/c,QAAAoN,IACAA,EAAA3K,iBAAA,QAAA,KACArE,EAAA4e,EAAA,CAAA,EAAA,CAAA,EACAH,EAAApb,UAAAC,OAAA,QAAA,EAEA0b,GAAAC,IACAD,EAAA3b,UAAAC,OAAA,eAAA,EACA2b,EAAA5b,UAAAC,OAAA,eAAA,EAEA,CAAA,CACA,CAAA,EAGAmb,EAAApb,UAAAiB,SAAA,WAAA,IACAma,EAAApb,UAAAE,IAAA,QAAA,EAEAyb,IAAAC,IACAD,EAAA3b,UAAAE,IAAA,eAAA,EACA0b,EAAA5b,UAAAE,IAAA,eAAA,EAGA,CA9SA2X,EAAAxb,QAAA,EAAAic,GAAA,gBA5DA,SAAAhH,GACA,IAqCAyL,EArCAC,EAAA1L,EAAAa,OACA8K,EAAA3L,EAAA4L,OAAAC,cACAC,EAAAJ,EAAAK,WAAAA,WAAAA,WAAArd,UAAA,GACAsd,KAAA,QAAA,oBAAA,CACAC,cAAAH,CACA,CAAA,EACAvF,EAAA,eAAAoF,EAAA,GAAA,EAAAzJ,KAAA,uBAAA,EACAqF,YAAA,SAAA,EACAhB,EAAAmF,EAAAK,WAAAA,UAAA,EAAA7J,KAAA,iBAAA,EAAAgH,SAAA,QAAA,EACA,EAAA3C,EAAA,YAAA,EAAArb,SAEAqb,EAAA,YAAA,EAAArE,KAAAwJ,CAAA,EAAAxgB,SACA+D,OAAAid,UAAAjd,OAAAid,WAAA,GACAjd,OAAAid,UAAAta,KAAA,CAAAoO,MAAA,oBAAA,CAAA,GAGAuG,EAAA,UAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,gBAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,0BAAA,EAAA2C,SAAA,QAAA,EAEA3C,EAAA,CAAAxb,SAAA8d,gBAAA9d,SAAAwC,KAAA,EAAAub,QAAA,CACAC,UAAAxC,EAAA,YAAA,EAAAyC,OAAA,EAAAC,GACA,EAAA,GAAA,EAEA1C,EAAAmF,CAAA,EAAAxJ,KAAA,aAAA,EAAAqF,YAAA,QAAA,EACAhB,EAAAmF,CAAA,EAAAxJ,KAAA,aAAA,EAAAA,KAAA,MAAA,EAAAgE,KAAAK,EAAA,aAAA,EAAA+C,KAAA,WAAA,CAAA,GAEA/C,EAAA,qBAAA,EAAAI,SAAA,QAAA,IACAJ,EAAA3Y,IAAA,EAAAsU,KAAA,iBAAA,EAAAgH,SAAA,QAAA,EACA3C,EAAA3Y,IAAA,EAAAsU,KAAA,QAAA,EAAAgH,SAAA,SAAA,GAEA3C,EAAA,SAAAoF,CAAA,EAAAzJ,KAAA,iBAAA,EAAAyE,SAAA,QAAA,GACAJ,EAAA,SAAAoF,EAAA,aAAA,EAAArE,KAAA,WACAf,EAAA3Y,IAAA,EAAA,GAAA6Y,MAAA,CACA,CAAA,EAEA,EAAAF,EAAAvG,EAAAa,MAAA,EAAAsL,QAAA,4BAAA,EAAAjhB,UACAugB,EAAAlF,EAAAvG,EAAAa,MAAA,GACAsL,QAAA,4BAAA,EAAAjD,SAAA,SAAA,EACA5O,WAAA,WACAmR,EAAAU,QAAA,4BAAA,EAAA5E,YAAA,SAAA,CACA,EAAA,GAAA,EAEA,CAgBA,EACAhB,EAAAxb,QAAA,EAAAic,GAAA,gBAfA,SAAAhH,GACA,IAAA0L,EAAA1L,EAAAa,OACA8K,EAAA3L,EAAA4L,OAAAC,cACAtF,EAAA,eAAAoF,EAAA,GAAA,EAAAzJ,KAAA,uBAAA,EACAqF,YAAA,SAAA,EACAhB,EAAAmF,CAAA,EAAAxJ,KAAA,aAAA,EAAAyE,SAAA,QAAA,GACAJ,EAAAmF,CAAA,EAAAxJ,KAAA,aAAA,EAAAqF,YAAA,iBAAA,EACAhB,EAAAmF,CAAA,EAAAxJ,KAAA,aAAA,EAAAkK,OAAA,EAAAlK,KAAA,6BAAA,EAAAqF,YAAA,QAAA,IAEAhB,EAAAmF,CAAA,EAAAxJ,KAAA,aAAA,EAAAgH,SAAA,iBAAA,EACA3C,EAAAmF,CAAA,EAAAxJ,KAAA,aAAA,EAAAkK,OAAA,EAAAlK,KAAA,6BAAA,EAAAgH,SAAA,QAAA,EAEA,CAGA,EAyYA3C,EAAAtX,MAAA,EAAA+X,GAAA,OAAA,WAzdA,IAhEAqF,EAmJA9F,EAAA,iBAAA,EAAAe,KAAA,WACAf,EAAA3Y,IAAA,EAAAsb,SAAA,UAAA,EACA,IAAAjO,EAAAsL,EAAA3Y,IAAA,EAAAmZ,IAAA,QAAA,EACAR,EAAA3Y,IAAA,EAAAmZ,IAAA,SAAA9L,CAAA,EACAsL,EAAA3Y,IAAA,EAAA2Z,YAAA,UAAA,CACA,CAAA,EACAhB,EAAA,mCAAA,EAAAS,GAAA,QAAA,WACAT,EAAA3Y,IAAA,EAAA+Y,SAAA,MAAA,GACAJ,EAAA3Y,IAAA,EAAA0e,SAAA,iBAAA,EAAA/E,YAAA,UAAA,EACAhB,EAAA3Y,IAAA,EAAA2Z,YAAA,MAAA,EACAhB,EAAA3Y,IAAA,EAAAsU,KAAA,MAAA,EAAAgE,KAAAK,EAAA3Y,IAAA,EAAA0b,KAAA,WAAA,CAAA,IAEA/C,EAAA3Y,IAAA,EAAA0e,SAAA,iBAAA,EAAApD,SAAA,UAAA,EACA3C,EAAA3Y,IAAA,EAAAsb,SAAA,MAAA,EACA3C,EAAA3Y,IAAA,EAAAsU,KAAA,MAAA,EAAAgE,KAAAK,EAAA3Y,IAAA,EAAA0b,KAAA,WAAA,CAAA,EAEA,CAAA,EAIA/C,EAAA,oBAAA,EAAAe,KAAA,WACAf,EAAA3Y,IAAA,EAAAsb,SAAA,UAAA,EACA,IAAAjO,EAAAsL,EAAA3Y,IAAA,EAAAmZ,IAAA,QAAA,EACAR,EAAA3Y,IAAA,EAAAmZ,IAAA,SAAA9L,CAAA,EACAsL,EAAA3Y,IAAA,EAAA2Z,YAAA,UAAA,CACA,CAAA,EACAhB,EAAA,sCAAA,EAAAS,GAAA,QAAA,WACAT,EAAA3Y,IAAA,EAAA+Y,SAAA,MAAA,GACAJ,EAAA3Y,IAAA,EAAA0e,SAAA,oBAAA,EAAA/E,YAAA,UAAA,EACAhB,EAAA3Y,IAAA,EAAA2Z,YAAA,MAAA,EACAhB,EAAA3Y,IAAA,EAAAsU,KAAA,MAAA,EAAAgE,KAAAK,EAAA3Y,IAAA,EAAA0b,KAAA,WAAA,CAAA,IAEA/C,EAAA3Y,IAAA,EAAA0e,SAAA,oBAAA,EAAApD,SAAA,UAAA,EACA3C,EAAA3Y,IAAA,EAAAsb,SAAA,MAAA,EACA3C,EAAA3Y,IAAA,EAAAsU,KAAA,MAAA,EAAAgE,KAAAK,EAAA3Y,IAAA,EAAA0b,KAAA,WAAA,CAAA,EAEA,CAAA,EAqWA9C,EAAA,EA1vBAD,EAAA,QAAA,EAAArE,KAAA,YAAA,EAAAoF,KAAA,WACAf,EAAA3Y,IAAA,EAAAsb,SAAA,UAAA,EACA,IAAAjO,EAAAsL,EAAA3Y,IAAA,EAAAsU,KAAA,WAAA,EAAAiH,YAAA,CAAA,CAAA,EAAA,GACA5C,EAAA3Y,IAAA,EAAAsU,KAAA,WAAA,EAAA6E,IAAA,SAAA9L,CAAA,EACAsL,EAAA3Y,IAAA,EAAA2Z,YAAA,UAAA,CACA,CAAA,EACAhB,EAAA,QAAA,EAAArE,KAAA,YAAA,EAAAuE,MAAA,SAAA7W,GACAA,EAAAiR,QAAAjR,EAAA8W,eACAH,EAAA3Y,IAAA,EAAAwZ,YAAA,UAAA,CAEA,CAAA,EAuEAb,EAAA,qBAAA,EAAAS,GAAA,QAAA,WACAT,EAAA3Y,IAAA,EAAAsb,SAAA,SAAA,EACA3C,EAAA,kCAAA,EAAAE,MAAA,CACA,CAAA,EAaAF,EAAA,UAAA,EAAAS,GAAA,QAAA,WACAT,EAAA3Y,IAAA,EAAA+Y,SAAA,QAAA,GACAqF,KAAA,QAAA,iBAAA,EAEAzF,EAAA3Y,IAAA,EAAAwZ,YAAA,QAAA,EACAb,EAAA,aAAA,EAAAa,YAAA,QAAA,CACA,CAAA,EAfAb,EAAA,QAAA,EAAAgG,UAAA,WACAhG,EAAA,cAAA,EAAA2C,SAAA,OAAA,CACA,CAAA,EACA3C,EAAA,QAAA,EAAAiG,WAAA,WACAjG,EAAA,cAAA,EAAAgB,YAAA,OAAA,CACA,CAAA,EAkqBAc,EAAA,GAheA3L,EAAA6J,EAAA,yIAAA,GAEAS,GAAA,UAAAtK,EAAA,WACA6J,EAAA3Y,IAAA,EAAA2Z,YAAA,iBAAA,EACAhB,EAAA3Y,IAAA,EAAA0e,SAAA,sBAAA,EAAA3d,OAAA,CACA,CAAA,EAEA4X,EAAA,8BAAA,EAAAkG,OAAA,WACAlG,EAAA3Y,IAAA,EAAA2Z,YAAA,iBAAA,EACAhB,EAAA3Y,IAAA,EAAA0e,SAAA,sBAAA,EAAA3d,OAAA,EACA4X,EAAA3Y,IAAA,EAAAyb,QAAA,OAAA,EAAAnH,KAAA,6BAAA,EAAAqF,YAAA,QAAA,CACA,CAAA,EAEAhB,EAAA,kCAAA,EAAAkG,OAAA,WACAlG,EAAA3Y,IAAA,EAAA2Z,YAAA,iBAAA,CACA,CAAA,EAnFA,CAAA,GAAAtY,OAAA0Y,SAAA+E,KAAAC,QAAA,GAAA,IACAC,EAAA3d,OAAA0Y,SAAA+E,KAAA/D,MAAA,GAAA,EAAA,GACAiE,EAAA,IAAAhE,mBAAAgE,CAAA,EACAP,EAAA9F,EAAAqG,CAAA,EAAA5D,OAAA,EAAAC,IAAA,IACA1C,EAAA,CAAAxb,SAAA8d,gBAAA9d,SAAAwC,KAAA,EAAAsf,KAAA,EAAA/D,QAAA,CACAC,UAAAsD,CACA,EAAA,GAAA,GAEA9F,EAAA,cAAA,EAAAS,GAAA,QAAA,SAAApX,GACA,IACAgd,GAAAA,EADArG,EAAA3Y,IAAA,EAAA0b,KAAA,MAAA,GACAX,MAAA,GAAA,EAAA,GACA/a,KAAAkf,WAAA7d,OAAA0Y,SAAAmF,WACAF,EAAA,IAAAhE,mBAAAgE,CAAA,EACAhd,EAAAuV,eAAA,EACAoB,EAAA,CAAAxb,SAAA8d,gBAAA9d,SAAAwC,KAAA,EAAAsf,KAAA,EAAA/D,QAAA,CACAC,UAAAxC,EAAAqG,CAAA,EAAA5D,OAAA,EAAAC,IAAA,GACA,EAAA,GAAA,EAEA,CAAA,EAeA1C,EAAA,qBAAA,EAAAS,GAAA,QAAA,SAAApX,GACAA,EAAAiR,QAAAjR,EAAA8W,gBACAH,EAAA,qBAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,iBAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,4BAAA,EAAAgB,YAAA,SAAA,EACAhB,EAAA,cAAA,EAAA2C,SAAA,UAAA,EACA3C,EAAA,kBAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,6BAAA,EAAAO,KAAA,UAAA,CAAA,CAAA,EAEA,CAAA,EAEAP,EAAA,oBAAA,EAAAS,GAAA,QAAA,WACAgF,KAAA,QAAA,qBAAA,EACAzF,EAAA,qBAAA,EAAA2C,SAAA,QAAA,CACA,CAAA,EACA3C,EAAA,oEAAA,EAAAS,GAAA,QAAA,WACAT,EAAA,qBAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,iBAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,4BAAA,EAAAgB,YAAA,SAAA,EACAhB,EAAA,cAAA,EAAA2C,SAAA,UAAA,EACA3C,EAAA,kBAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,6BAAA,EAAAO,KAAA,UAAA,CAAA,CAAA,CACA,CAAA,EACAP,EAAA,cAAA,EAAAS,GAAA,QAAA,WACAT,EAAA3Y,IAAA,EAAAsb,SAAA,SAAA,EACA3C,EAAA,0CAAA,EAAAE,MAAA,CACA,CAAA,EACAF,EAAA,kBAAA,EAAAS,GAAA,QAAA,WACAT,EAAA3Y,IAAA,EAAAwZ,YAAA,QAAA,EACAb,EAAA,6BAAA,EAAAE,MAAA,EACAF,EAAA,cAAA,EAAAa,YAAA,UAAA,CACA,CAAA,EA1CAb,EAAA,yBAAA,EAAA6C,IAAAre,SAAAwV,KAAA,EACAgG,EAAA,gBAAA,EAAAS,GAAA,QAAA,WACAT,EAAA3Y,IAAA,EAAAsb,SAAA,SAAA,EACA3C,EAAA3Y,IAAA,EAAAue,QAAA,sBAAA,EAAAjK,KAAA,sBAAA,EAAAuE,MAAA,CACA,CAAA,EACAF,EAAA,kBAAA,EAAAS,GAAA,QAAA,WACAT,EAAA,iBAAA,EAAAgB,YAAA,QAAA,CACA,CAAA,EA/NAhB,EAAA,aAAA,EAAAS,GAAA,QAAA,WACA,IAAArV,EAAA4U,EAAA3Y,IAAA,EAAA0b,KAAA,SAAA,EACA/C,EAAA,0BAAA,EAAA2C,SAAA,QAAA,EACA3C,EAAA,0BAAA5U,EAAA,IAAA,EAAAuX,SAAA,QAAA,CACA,CAAA,EACA3C,EAAA,2BAAA,EAAAS,GAAA,QAAA,WACAT,EAAA,0BAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,eAAA,EAAAgB,YAAA,QAAA,CACA,CAAA,EACAhB,EAAA,0BAAA,EAAAS,GAAA,QAAA,SAAApX,GACAA,EAAAiR,QAAAjR,EAAA8W,gBACAH,EAAA,0BAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,eAAA,EAAAgB,YAAA,QAAA,EAEA,CAAA,EA+tBAsC,EAAA,EAEAtD,EAAA,sBAAA,EAAAe,KAAA,WACA/Y,IAAAwe,EAAAxG,EAAA3Y,IAAA,EACAW,IAAAye,EAAAD,EAAAxgB,KAAA,WAAA,EACAgC,IAAA0e,EAAAF,EAAAxgB,KAAA,UAAA,EACAgC,IAAA2e,EAAAH,EAAAxgB,KAAA,cAAA,EACAgC,IAAA4e,EAAAJ,EAAA7K,KAAA,gBAAA,EAAA6E,IAAA,CAAAqG,WAAAJ,EAAAK,MAAAJ,CAAA,CAAA,EACAF,EAAA7K,KAAA,yBAAA,EAAA6E,IAAA,CAAAuG,KAAAL,CAAA,CAAA,EAEAE,EAAAI,MACA,WACAhH,EAAA3Y,IAAA,EAAAmZ,IAAA,CACAyG,mBAAAN,CACA,CAAA,CACA,EACA,WACA3G,EAAA3Y,IAAA,EAAAmZ,IAAA,CACAyG,mBAAAR,CACA,CAAA,CACA,CACA,CACA,CAAA,CACA,CAAA,EAh4BAzG,EAAA,cAAA,EAAAS,GAAA,QAAA,WACAT,EAAA,YAAA,EAAA2C,SAAA,QAAA,EACA3C,EAAA,sBAAA,EAAA2C,SAAA,QAAA,EACA3C,EAAA3Y,IAAA,EAAAsb,SAAA,QAAA,EACA3C,EAAA,MAAA,EAAA2C,SAAA,WAAA,CACA,CAAA,EACA3C,EAAA,wBAAA,EAAAE,MAAA,WACAF,EAAA,YAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,sBAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,cAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,MAAA,EAAAgB,YAAA,WAAA,CACA,CAAA,EACAhB,EAAA,iBAAA,EAAAS,GAAA,QAAA,SAAApX,GACA2W,EAAA,YAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,sBAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,cAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,MAAA,EAAAgB,YAAA,WAAA,CACA,CAAA,EACAhB,EAAA,sBAAA,EAAAE,MAAA,WACAF,EAAA3Y,IAAA,EAAA2Z,YAAA,QAAA,EACAhB,EAAA,YAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,cAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,MAAA,EAAAgB,YAAA,WAAA,CACA,CAAA,EAuHAhB,EAAA,qBAAA,EAAAS,GAAA,QAAA,WACAT,EAAA,QAAA,EAAA2C,SAAA,QAAA,EACA3C,EAAA,MAAA,EAAA2C,SAAA,QAAA,CACA,CAAA,EACA3C,EAAA,oBAAA,EAAAS,GAAA,QAAA,WACAT,EAAA,QAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,MAAA,EAAAgB,YAAA,QAAA,CACA,CAAA,EACA,EAAAhB,EAAA,iBAAA,EAAArb,SACAqb,EAAA,eAAA,EAAAkH,OAAA,WACA,MAAA,CAAA,CACA,CAAA,EACAlH,EAAA,eAAA,EAAAS,GAAA,iBA1CAwC,EA0CA,SAAA5Z,GACAA,EAAAuV,eAAA,EAOAoB,EAAA,iBAAA,EAAA2C,SAAA,QAAA,EACA3c,EAAA,CACAD,OAAA,cACA6E,OAAAoV,EAAA,eAAA,EAAA6C,IAAA,CACA,EAEA7C,EAAAmH,IAAA5gB,SAAAO,SAAAd,EAAA,SAAAkB,GACAA,EAAAsB,UACAwX,EAAA,iBAAA,EAAAgB,YAAA,QAAA,EACAhB,EAAA,iBAAA,EAAAoH,MAAA,EACApH,EAAA,iBAAA,EAAA5Z,OAAAc,EAAAlB,KAAAqhB,OAAA,EACArH,EAAA,cAAA,EAAAL,KAAAzY,EAAAlB,KAAAshB,KAAA,EACAtH,EAAA,gBAAA,EAAAL,KAAAzY,EAAAlB,KAAAgU,KAAA,EAEA,CAAA,CAnBA,EA7CAkJ,EA6CA,KA5CAC,EAAA,EACA,WACA,IAAAoE,EAAAlgB,KAAAmgB,EAAA7G,UACA8G,aAAAtE,CAAA,EACAA,EAAApP,WAAA,WACAkP,EAAAyE,MAAAH,EAAAC,CAAA,CACA,EAAAtE,GAAA,CAAA,CACA,EAqCA,GA8WAlD,EAAA,mCAAA,EAAAe,KAAA,WACA,EAAAf,EAAA3Y,IAAA,EAAAsU,KAAA,eAAA,EAAAhX,QACA,IAAAgjB,OAAA3H,EAAA3Y,IAAA,EAAA,GAAA,CACAugB,cAAA,EACAC,MAAA,KACAC,WAAA,CACAC,GAAA,oBACA,EACAC,SAAA,CACAC,MAAA,IACAC,qBAAA,CAAA,CACA,EACAC,WAAA,CACAC,OAAA,6BACAC,OAAA,4BACA,EACAC,KAAA,CAAA,CACA,CAAA,CAEA,CAAA,EAIA,IAAAX,OAAA,yCAAA,CACAC,cAAA,EACAC,MAAA,KACAS,KAAA,CAAA,EACAR,WAAA,CACAC,GAAA,oBACA,EACAC,SAAA,CACAC,MAAA,IACAC,qBAAA,CAAA,CACA,EACAC,WAAA,CACAC,OAAA,6BACAC,OAAA,4BACA,CACA,CAAA,EAkDA,IAAAV,OAAA,kCAAA,CACAW,KAAA,CAAA,EACAT,MAAA,IACAD,cAAA,EACAE,WAAA,CACAC,GAAA,oBACA,EACAI,WAAA,CACAC,OAAA,6BACAC,OAAA,4BACA,CACA,CAAA,EAzDA,EAAArI,EAAA,eAAA,EAAArb,QACAqb,EAAA,eAAA,EAAAe,KAAA,SAAAna,GACA,IACA2hB,EADA,EAAAvI,EAAA,+BAAApZ,EAAA,IAAA,EAAAjC,QACA4jB,EAAA,IAAAZ,OAAA,+BAAA/gB,EAAA,KAAA,CACAihB,MAAA,IACAW,aAAA,GACAZ,cAAA,EACAa,oBAAA,CAAA,CACA,CAAA,EAEA,IAAAd,OAAA,0BAAA/gB,EAAA,KAAA,CACAghB,cAAA,EACAC,MAAA,IACAS,KAAA,CAAA,EACAN,SAAA,CACAC,MAAA,IACAC,qBAAA,CAAA,CACA,EACAC,WAAA,CACAC,OAAA,6BACAC,OAAA,4BACA,EACAE,OAAA,CACAG,OAAAH,CACA,CACA,CAAA,GAEA,IAAAZ,OAAA,0BAAA/gB,EAAA,KAAA,CACAghB,cAAA,EACAC,MAAA,IACAS,KAAA,CAAA,EACAN,SAAA,CACAC,MAAA,IACAC,qBAAA,CAAA,CACA,EACAC,WAAA,CACAC,OAAA,6BACAC,OAAA,4BACA,CACA,CAAA,CAEA,CAAA,EAoBA,IAAAV,OAAA,yCAAA,CACAW,KAAA,CAAA,EACAV,cAAA,IACAY,aAAA,GACAX,MAAA,IACAG,SAAA,CACAE,qBAAA,CAAA,EACAS,kBAAA,CAAA,CACA,EACAb,WAAA,CACAC,GAAA,qBACAa,UAAA,CAAA,CACA,EACAC,YAAA,CACAC,IAAA,CACAlB,cAAA,EACAY,aAAA,EACA,CACA,CACA,CAAA,EAIA,IAAAb,OAAA,gBAAA,CACAC,cAAA,IACAY,aAAA,GACAX,MAAA,IACAC,WAAA,CACAC,GAAA,oBACA,EACAc,YAAA,CACAE,IAAA,CACAnB,cAAA,EACAY,aAAA,EACA,EACAQ,IAAA,CACApB,cAAA,EACAY,aAAA,EACA,CACA,CACA,CAAA,EAIA,IAAAb,OAAA,uBAAA,CACAC,cAAA,IACAY,aAAA,GACAX,MAAA,IACAC,WAAA,CACAC,GAAA,oBACA,CAEA,CAAA,GA2FAkB,EAAAzkB,SAAA+C,cAAA,iBAAA,IAIA,IAAAogB,OAAAsB,EAAA,CACArB,cAAA,EACAsB,WAAA,CAAA,EACArB,MAAA,KACAS,KAAA,CAAA,EACAR,WAAA,CACAC,GAAA,qBACAa,UAAA,CAAA,CACA,EACAT,WAAA,CACAC,OAAA,0BACAC,OAAA,yBACA,EACAc,WAAA,CAAA,CACA,CAAA,EAyHAC,CArHA,IAAAC,EAAA7kB,SAAAoF,iBAAA,+BAAA,EAEA,MAAA0f,EAAA,CAAAxJ,EAAAhJ,KACAA,GACAgJ,EAAArL,MAAAC,OAAA,OACAoL,EAAArL,MAAA8U,QAAA,IAEAzJ,EAAArL,MAAAC,OAAA,EACAoL,EAAArL,MAAA8U,QAAA,EAEA,EAEA,EAAAF,EAAA1kB,QACA0kB,EAAA3iB,QAAA8iB,IAEA,MAAAC,EAAAD,EAAA5f,iBAAA,aAAA,EACA,IAAA8f,EAAAF,EAAAjiB,cAAA,4BAAA,EACAoiB,EAAAH,EAAAjiB,cAAA,4BAAA,EACAqiB,EAAAJ,EAAAjiB,cAAA,uBAAA,EAEA,MAAAmhB,EAAA,IAAAf,OAAAiC,EAAA,CACAhC,cAAA,IACAC,MAAA,KACAgC,aAAA,EACAC,eAAA,CAAA,EACAC,yBAAA,CAAA,EACAvB,aAAA,EACAF,KAAA,CAAA,EACAhkB,KAAA,CAAA,EACA6jB,WAAA,CACAC,OAAAuB,EACAtB,OAAAqB,CACA,EACA5B,WAAA,CACAC,GAAA,qBACAa,UAAA,CAAA,CACA,EACAO,WAAA,CAAA,EACAN,YAAA,CACAG,IAAA,CACAR,aAAA,GACAZ,cAAA,CACA,CACA,CACA,CAAA,EAEA,CAAA,cAAA,QAAAlhB,QAAA+S,IACAiP,EAAAjI,GAAAhH,EAAA,WAEA,MAAAuQ,EAAAtB,EAAAuB,OAAAvB,EAAAwB,aAEAT,EAAA/iB,QAAAoZ,IACAkK,EAAArf,QAAAwf,QAAArK,EAAAnV,QAAAwf,QAEAV,EAAA/iB,QAAA0jB,GAAAd,EAAAc,EAAA,CAAA,CAAA,CAAA,EAEAd,EAAAxJ,EAAA,CAAA,CAAA,EAEA,CAAA,CACA,CAAA,CACA,CAAA,EAEA4I,EAAApkB,KAAA,CACA,CAAA,CAsDA,CAEA0b,EAAAtX,MAAA,EAAA+X,GAAA,SAAA,WACA,IAAA4J,EAAA3hB,OAAA4hB,YAEA,IAAAD,EACA7lB,SAAA+C,cAAA,wBAAA,GACA/C,SAAA+C,cAAA,wBAAA,EAAAY,UAAAE,IAAA,sBAAA,EAGA7D,SAAA+C,cAAA,wBAAA,GACA/C,SAAA+C,cAAA,wBAAA,EAAAY,UAAAC,OAAA,sBAAA,EAIA,KAAAiiB,EACArK,EAAA,UAAA,EAAA2C,SAAA,UAAA,EAEA3C,EAAA,UAAA,EAAAgB,YAAA,UAAA,CAEA,CAAA,EAEAhB,EAAAtX,MAAA,EAAA+X,GAAA,SAAA,YAEA,CAEA,EAEA8J,MAAA,EAWA7hB,OAAA8hB,OAAAlmB","file":"prod.js","sourcesContent":["(function ($) {\n\n    function sideMenu() {\n\n        $('.burger-icon').on('click', function () {\n            $('.side-menu').addClass('active');\n            $('.buttons .close-icon').addClass('active');\n            $(this).addClass('hidden');\n            $('body').addClass('no-scroll');\n        })\n        $('.side-menu .close-icon').click(function () {\n            $('.side-menu').removeClass('active');\n            $('.buttons .close-icon').removeClass('active');\n            $('.burger-icon').removeClass('hidden');\n            $('body').removeClass('no-scroll');\n        })\n        $('section, footer').on('click', function (e) {\n            $('.side-menu').removeClass('active');\n            $('.buttons .close-icon').removeClass('active');\n            $('.burger-icon').removeClass('hidden');\n            $('body').removeClass('no-scroll');\n        });\n        $('.buttons .close-icon').click(function () {\n            $(this).removeClass('active');\n            $('.side-menu').removeClass('active');\n            $('.burger-icon').removeClass('hidden');\n            $('body').removeClass('no-scroll');\n        })\n    }\n\n    function calcSubMenuHeight() {\n        // $('.side-menu').find('.menu-item').each(function () {\n        //     $(this).addClass('expanded');\n        //     var height = $(this).find('.sub-menu').outerHeight(true) + 32;\n        //     $(this).find('.sub-menu').css('height', height);\n        //     $(this).removeClass('expanded');\n        // });\n        $('.side-menu').find('.menu-item').click(function (e) {\n            if (e.target == e.currentTarget) {\n                if ($(this).hasClass('expanded')) {\n                    collapseSection($(this).find('.sub-menu'));\n                } else {\n                    expandSection($(this).find('.sub-menu'));\n                }\n                $(this).toggleClass('expanded');\n                $('.side-menu .menu-item').not(this).each(function () {\n                    collapseSection($(this).find('.sub-menu'));\n                    $(this).removeClass('expanded');\n                });\n            }\n        });\n\n\n    }\n\n    function collapseSection(element) {\n        element = $(element[0]);\n\n        // get the height of the element's inner content, regardless of its actual size\n        var sectionHeight = element.prop('scrollHeight') + 32;\n\n        // temporarily disable all css transitions\n        var elementTransition = element.css('transition');\n        element.css('transition', '0.4s ease-in-out');\n\n        // on the next frame (as soon as the previous style change has taken effect),\n        // explicitly set the element's height to its current pixel height, so we\n        // aren't transitioning out of 'auto'\n        requestAnimationFrame(function () {\n            element.css('height', sectionHeight + 'px');\n            element.css('transition', elementTransition);\n            element.css('padding-top', 24 + 'px');\n            element.css('padding-bottom', 8 + 'px');\n\n            // on the next frame (as soon as the previous style change has taken effect),\n            // have the element transition to height: 0\n            requestAnimationFrame(function () {\n                element.css('height', 0);\n                element.css('padding-top', 0);\n                element.css('padding-bottom', 0);\n            });\n        });\n    }\n\n    function expandSection(element) {\n        element = $(element[0]);\n        // get the height of the element'xs inner content, regardless of its actual size\n        var sectionHeight = element.prop('scrollHeight') + 32;\n        // have the element transition to the height of its inner content\n        element.css('height', sectionHeight + 'px');\n        element.css('padding-top', 24 + 'px');\n        element.css('padding-bottom', 8 + 'px');\n\n        // when the next css transition finishes (which should be the one we just triggered)\n        element.on('transitioned', function (e) {\n            element.off('transitioned', arguments.callee);\n            element.css('height', null);\n            element.css('padding-top', null);\n            element.css('padding-bottom', null);\n        });\n    }\n\n    function calcMobileFooter() {\n        $('footer').find('.menu-item').each(function () {\n            $(this).addClass('expanded');\n            var height = $(this).find('.sub-menu').outerHeight(true) + 10;\n            $(this).find('.sub-menu').css('height', height);\n            $(this).removeClass('expanded');\n        });\n        $('footer').find('.menu-item').click(function (e) {\n            if (e.target == e.currentTarget) {\n                $(this).toggleClass('expanded');\n            }\n        })\n    }\n\n    function delay(callback, ms) {\n        var timer = 0;\n        return function () {\n            var context = this, args = arguments;\n            clearTimeout(timer);\n            timer = setTimeout(function () {\n                callback.apply(context, args);\n            }, ms || 0);\n        };\n    }\n\n    function productMarketPopup() {\n        $('.open-popup').on('click', function () {\n            var id = $(this).attr('data-id');\n            $('.market-popup-background').addClass('active');\n            $('.market-popup[data-id=\"' + id + '\"]').addClass('active');\n        });\n        $('.market-popup .close-icon').on('click', function () {\n            $('.market-popup-background').removeClass('active');\n            $('.market-popup').removeClass('active');\n        });\n        $('.market-popup-background').on('click', function (e) {\n            if (e.target == e.currentTarget) {\n                $('.market-popup-background').removeClass('active');\n                $('.market-popup').removeClass('active');\n            }\n        });\n    }\n\n    function search() {\n        $('header .search-icon').on('click', function () {\n            $('header').addClass('search');\n            $('body').addClass('search');\n        });\n        $('header .close-icon').on('click', function () {\n            $('header').removeClass('search');\n            $('body').removeClass('search');\n        });\n        if ($('.search-section').length > 0) {\n            $('.search-input').submit(function () {\n                return false;\n            });\n            $('.search-field').on('change, keyup', delay(function (e) {\n                e.preventDefault();\n                loadSearch();\n            }, 1400));\n        }\n    }\n\n    function loadSearch() {\n        $('.loading-screen').addClass('active');\n        var data = {\n            'action': 'load_search',\n            'search': $('.search-field').val()\n        };\n\n        $.get(postmpwp.ajax_url, data, function (response) {\n            if (response.success) {\n                $('.loading-screen').removeClass('active');\n                $('.search-results').empty();\n                $('.search-results').append(response.data.results);\n                $('.found-count').text(response.data.found);\n                $('.section-title').text(response.data.title);\n            }\n        });\n    }\n\n    function submitPopup() {\n        $('.chat-popup .button').on('click', function () {\n            $(this).addClass('loading');\n            $('.chat-popup input[type=\"submit\"]').click();\n        })\n    }\n\n    function breadcrumbs() {\n        $('header').mouseover(function () {\n            $('.breadcrumbs').addClass('hover');\n        })\n        $('header').mouseleave(function () {\n            $('.breadcrumbs').removeClass('hover');\n        })\n    }\n\n    function toggleChatbox() {\n        $('.chatbot').on('click', function () {\n            if (!$(this).hasClass('active')) {\n                gtag('event', 'chat_bot_opened');\n            }\n            $(this).toggleClass('active');\n            $('.chat-popup').toggleClass('active');\n        })\n    }\n\n    var url = new URL(window.location);\n    var urlParams = (new URL(document.location)).searchParams;\n\n    function updateUrlParams(param, value) {\n        if (value) {\n            urlParams.set(param, value);\n\n        } else {\n            urlParams.delete(param);\n        }\n\n        url.search = urlParams.toString();\n\n        history.replaceState({}, null, url.toString());\n    }\n\n    var getUrlParameter = function getUrlParameter(sParam) {\n        var sPageURL = window.location.search.substring(1),\n            sURLVariables = sPageURL.split('&'),\n            sParameterName,\n            i;\n\n        for (i = 0; i < sURLVariables.length; i++) {\n            sParameterName = sURLVariables[i].split('=');\n\n            if (sParameterName[0] === sParam) {\n                return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);\n            }\n        }\n        return false;\n    };\n\n    function careerPage() {\n        var career = getUrlParameter('q');\n\n        if (career && ($('.vacancy[data-href=\"' + career + '\"]').length > 0)) {\n            $([document.documentElement, document.body]).animate({\n                scrollTop: $('.vacancy[data-href=\"' + career + '\"]').offset().top - 200\n            }, 1000, function () {\n                $('.vacancy[data-href=\"' + career + '\"]').find('.link').click();\n            });\n        }\n\n        $('.vacancy').each(function () {\n            $(this).addClass('active');\n            var height = $(this).find('.bottom-section').outerHeight() + 80;\n            $(this).find('.bottom-section').css('height', height);\n            $(this).removeClass('active');\n            $(this).find('input[name=\"position-name\"]').val($(this).find('.position').text());\n        });\n\n        $('.vacancy').find('.link').on('click', function () {\n            $('.vacancy').removeClass('active');\n            $('.vacancy .link').removeClass('hidden');\n            $(this).closest('.vacancy').addClass('active');\n            $(this).addClass('hidden');\n            updateUrlParams('q', $(this).attr('data-href'));\n        });\n\n        $('.vacancy').find('.button-close').on('click', function () {\n            $(this).closest('.vacancy').removeClass('active');\n            $(this).closest('.vacancy').find('.link').removeClass('hidden');\n            updateUrlParams('q');\n            $([document.documentElement, document.body]).animate({\n                scrollTop: $(this).closest('.vacancies').offset().top - 50\n            }, 1000);\n        });\n\n        $('.success-modal-vacancies').on('click', function (e) {\n            if (e.target == e.currentTarget) {\n                $('.success-modal-vacancies').removeClass('active');\n            }\n        });\n\n        $('input[type=\"file\"]').on('change', function () {\n            var fileInput = $(this).closest('label').find('.file-input');\n\n            $(fileInput).removeClass('wpcf7-not-valid');\n\n            if ($(this).val() !== '') {\n                $(fileInput).addClass('active');\n                $(fileInput).find('span').text($(this).val().split('\\\\').pop());\n            } else {\n                $(fileInput).removeClass('active');\n                $(fileInput).find('span').text($('.file-input').attr('data-text'));\n            }\n        });\n\n        $('.file-input').find('.close').on('click', function (e) {\n            e.preventDefault();\n            $('input[type=\"file\"]').val('').trigger('change');\n        });\n\n        if ($('.vacancy').length > 0) {\n            $('.submit-form').on('click', function () {\n                $(this).addClass('loading');\n                $(this).closest('.wpcf7-form').find('input[type=\"submit\"]').click();\n            });\n        }\n\n        $('.show-listing').on('click', function () {\n            $('.vacancies-list').removeClass('hidden');\n            $('.success-block').addClass('hidden');\n            $('.success-modal-vacancies').removeClass('active');\n\n            $([document.documentElement, document.body]).animate({\n                scrollTop: $('.vacancies').offset().top\n            }, 1000);\n        });\n\n    }\n\n    function scrollOnAnchor() {\n        if (window.location.href.indexOf(\"#\") != -1) {\n            var hash = window.location.href.split('#')[1];\n            hash = '#' + decodeURIComponent(hash);\n            var hashTop = $(hash).offset().top - 200;\n            $([document.documentElement, document.body]).stop().animate({\n                scrollTop: hashTop\n            }, 500);\n        }\n        $('a[href*=\\\\#]').on('click', function (e) {\n            var hash = $(this).attr('href');\n            hash = hash.split('#')[1];\n            if (this.pathname === window.location.pathname) {\n                hash = '#' + decodeURIComponent(hash);\n                e.preventDefault();\n                $([document.documentElement, document.body]).stop().animate({\n                    scrollTop: $(hash).offset().top - 200\n                }, 500);\n            }\n        });\n    }\n\n    function lockedForm() {\n        $('input[name=\"page-name\"]').val(document.title);\n        $('.submit-locked').on('click', function () {\n            $(this).addClass('loading');\n            $(this).parents('.section-locked-form').find('input[type=\"submit\"]').click();\n        });\n        $('.dismiss-success').on('click', function () {\n            $('.success-screen').removeClass('active');\n        });\n    }\n\n    function cta() {\n        $('.contact-form-modal').on('click', function (e) {\n            if (e.target == e.currentTarget) {\n                $('.contact-form-modal').removeClass('active');\n                $('.success-window').removeClass('active');\n                $('.contact-form-modal .modal').removeClass('success');\n                $('.submit-form').addClass('disabled');\n                $('.policy-checkbox').removeClass('active');\n                $('input[name=\"policy-accept\"]').prop('checked', false);\n            }\n        });\n\n        $('.open-contact-form').on('click', function () {\n            gtag('event', 'contact_form_opened');\n            $('.contact-form-modal').addClass('active');\n        });\n        $('.contact-form-modal .close-icon, .contact-form-modal .close-button').on('click', function () {\n            $('.contact-form-modal').removeClass('active');\n            $('.success-window').removeClass('active');\n            $('.contact-form-modal .modal').removeClass('success');\n            $('.submit-form').addClass('disabled');\n            $('.policy-checkbox').removeClass('active');\n            $('input[name=\"policy-accept\"]').prop('checked', false);\n        });\n        $('.submit-form').on('click', function () {\n            $(this).addClass('loading');\n            $('.contact-form-modal input[type=\"submit\"]').click();\n        });\n        $('.policy-checkbox').on('click', function () {\n            $(this).toggleClass('active');\n            $('input[name=\"policy-accept\"]').click();\n            $('.submit-form').toggleClass('disabled');\n        })\n    }\n\n    function inputHandler() {\n        var inputs = $('.wpcf7-form input[type=text], .wpcf7-form textarea, .wpcf7-form input[type=email], .wpcf7-form input[type=tel], .wpcf7-form .file-input');\n\n        inputs.on('focusin', inputs, function () {\n            $(this).removeClass('wpcf7-not-valid');\n            $(this).siblings('.wpcf7-not-valid-tip').remove();\n        });\n\n        $('.wpcf7-form input[type=file]').change(function () {\n            $(this).removeClass('wpcf7-not-valid');\n            $(this).siblings('.wpcf7-not-valid-tip').remove();\n            $(this).closest('label').find('.wpcf7-not-valid-tip-custom').removeClass('active');\n        });\n\n        $('.wpcf7-form input[type=checkbox]').change(function () {\n            $(this).removeClass('wpcf7-not-valid');\n        });\n    }\n\n    var onSentOk = function (event) {\n            var targetForm = event.target;\n            var eventID = event.detail.contactFormId;\n            var formContainer = targetForm.parentNode.parentNode.parentNode.classList[0];\n            gtag('event', 'contact_form_sent', {\n                form_location: formContainer\n            });\n            var submitButton = $('[id^=wpcf7-f' + eventID + ']').find('.submit-form, .button');\n            submitButton.removeClass('loading');\n            $(targetForm.parentNode.parentNode).find('.success-screen').addClass('active');\n            if ($('.vacancies').length > 0) {\n\n                if ($('.vacancies').find(targetForm).length) {\n                    window.dataLayer = window.dataLayer || [];\n                    window.dataLayer.push({'event': 'submit_career_form'});\n                }\n\n                $('.vacancy').removeClass('active');\n                $('.vacancy .link').removeClass('hidden');\n                $('.success-modal-vacancies').addClass('active');\n\n                $([document.documentElement, document.body]).animate({\n                    scrollTop: $('.vacancies').offset().top\n                }, 1000);\n\n                $(targetForm).find('.file-input').removeClass('active');\n                $(targetForm).find('.file-input').find('span').text($('.file-input').attr('data-text'));\n            }\n            if ($('.contact-form-modal').hasClass('active')) {\n                $(this).find('.success-window').addClass('active');\n                $(this).find('.modal').addClass('success');\n            }\n            if ($('.form-' + eventID).find('.success-screen').hasClass('active')) {\n                $('.form-' + eventID + ' .file-link').each(function () {\n                    $(this)[0].click();\n                });\n            }\n            if ($(event.target).parents('.form-section-form-wrapper').length > 0) {\n                var thisForm = $(event.target);\n                thisForm.parents('.form-section-form-wrapper').addClass('success');\n                setTimeout(function () {\n                    thisForm.parents('.form-section-form-wrapper').removeClass('success');\n                }, 10000);\n            }\n        },\n\n        onSentInvalid = function (event) {\n            var targetForm = event.target;\n            var eventID = event.detail.contactFormId;\n            var submitButton = $('[id^=wpcf7-f' + eventID + ']').find('.submit-form, .button');\n            submitButton.removeClass('loading');\n            if ($(targetForm).find('.file-input').hasClass('active')) {\n                $(targetForm).find('.file-input').removeClass('wpcf7-not-valid');\n                $(targetForm).find('.file-input').parent().find('.wpcf7-not-valid-tip-custom').removeClass('active');\n            } else {\n                $(targetForm).find('.file-input').addClass('wpcf7-not-valid');\n                $(targetForm).find('.file-input').parent().find('.wpcf7-not-valid-tip-custom').addClass('active');\n            }\n        };\n\n    $(document).on('wpcf7mailsent', onSentOk);\n    $(document).on('wpcf7invalid ', onSentInvalid);\n\n    function mobileCalcProcess() {\n        $('.processes-grid').each(function () {\n            $(this).addClass('expanded');\n            var height = $(this).css('height');\n            $(this).css('height', height);\n            $(this).removeClass('expanded');\n        })\n        $('.process-section .see-more-button').on('click', function () {\n            if ($(this).hasClass('less')) {\n                $(this).siblings('.processes-grid').removeClass('expanded');\n                $(this).removeClass('less');\n                $(this).find('span').text($(this).attr('data-more'));\n            } else {\n                $(this).siblings('.processes-grid').addClass('expanded');\n                $(this).addClass('less');\n                $(this).find('span').text($(this).attr('data-less'));\n            }\n        })\n    }\n\n    function mobileCalcImageText() {\n        $('.image-text-blocks').each(function () {\n            $(this).addClass('expanded');\n            var height = $(this).css('height');\n            $(this).css('height', height);\n            $(this).removeClass('expanded');\n        })\n        $('.section-image-text .see-more-button').on('click', function () {\n            if ($(this).hasClass('less')) {\n                $(this).siblings('.image-text-blocks').removeClass('expanded');\n                $(this).removeClass('less');\n                $(this).find('span').text($(this).attr('data-more'));\n            } else {\n                $(this).siblings('.image-text-blocks').addClass('expanded');\n                $(this).addClass('less');\n                $(this).find('span').text($(this).attr('data-less'));\n            }\n        })\n    }\n\n    function setCookie(key, value, expiry) {\n        var expires = new Date();\n        expires.setTime(expires.getTime() + (expiry * 24 * 60 * 60 * 1000));\n        document.cookie = key + '=' + value + ';expires=' + expires.toUTCString() + ';path=/';\n    }\n\n    function cookieBox() {\n        $('.cookie-accept').on('click', function () {\n            setCookie('CookieConsent', 1, 30);\n            $('.cookiebar').addClass('hide');\n        })\n    }\n\n    // Swipers\n\n    function slideshow() {\n        $('[data-swiper=\"slideshow-section\"]').each(function () {\n            if ($(this).find('.swiper-slide').length > 1) {\n                var swiper = new Swiper($(this)[0], {\n                    slidesPerView: 1,\n                    speed: 1200,\n                    pagination: {\n                        el: '.swiper-pagination',\n                    },\n                    autoplay: {\n                        delay: 3000,\n                        disableOnInteraction: true\n                    },\n                    navigation: {\n                        nextEl: '.swiper-custom-button-next',\n                        prevEl: '.swiper-custom-button-prev',\n                    },\n                    loop: true\n                });\n            }\n        });\n    }\n\n    function slideshowText() {\n        var swiper = new Swiper('[data-swiper=\"slideshow-text-section\"]', {\n            slidesPerView: 1,\n            speed: 1200,\n            loop: true,\n            pagination: {\n                el: '.swiper-pagination',\n            },\n            autoplay: {\n                delay: 3000,\n                disableOnInteraction: true\n            },\n            navigation: {\n                nextEl: '.swiper-custom-button-next',\n                prevEl: '.swiper-custom-button-prev',\n            },\n        });\n    }\n\n    function popupSlideshow() {\n        if ($('.market-popup').length > 0) {\n            $('.market-popup').each(function (index) {\n                if ($('.swiper-thumbnails[data-id=\"' + index + '\"]').length > 0) {\n                    var thumbs = new Swiper('.swiper-thumbnails[data-id=\"' + index + '\"]', {\n                        speed: 800,\n                        spaceBetween: 12,\n                        slidesPerView: 4,\n                        watchSlidesProgress: true,\n                    });\n\n                    var swiper = new Swiper('.swiper-popup[data-id=\"' + index + '\"]', {\n                        slidesPerView: 1,\n                        speed: 800,\n                        loop: true,\n                        autoplay: {\n                            delay: 3000,\n                            disableOnInteraction: true\n                        },\n                        navigation: {\n                            nextEl: '.swiper-custom-button-next',\n                            prevEl: '.swiper-custom-button-prev',\n                        },\n                        thumbs: {\n                            swiper: thumbs,\n                        },\n                    });\n                } else {\n                    var swiper = new Swiper('.swiper-popup[data-id=\"' + index + '\"]', {\n                        slidesPerView: 1,\n                        speed: 800,\n                        loop: true,\n                        autoplay: {\n                            delay: 3000,\n                            disableOnInteraction: true\n                        },\n                        navigation: {\n                            nextEl: '.swiper-custom-button-next',\n                            prevEl: '.swiper-custom-button-prev',\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    function aboutSlideshow() {\n        var swiper = new Swiper('[data-swiper=\"about-slideshow\"]', {\n            loop: true,\n            speed: 800,\n            slidesPerView: 1,\n            pagination: {\n                el: '.swiper-pagination',\n            },\n            navigation: {\n                nextEl: '.swiper-custom-button-next',\n                prevEl: '.swiper-custom-button-prev',\n            },\n        });\n    }\n\n    function certificatesSlideshow() {\n        var swiper = new Swiper('[data-swiper=\"certificates-slideshow\"]', {\n            loop: true,\n            slidesPerView: 2.2,\n            spaceBetween: 10,\n            speed: 800,\n            autoplay: {\n                disableOnInteraction: false,\n                pauseOnMouseEnter: true,\n            },\n            pagination: {\n                el: '.swiper-pagination',\n                clickable: true\n            },\n            breakpoints: {\n                980: {\n                    slidesPerView: 4,\n                    spaceBetween: 20,\n                }\n            }\n        });\n    }\n\n    function logosSwiper() {\n        var swiper = new Swiper('.logos-swiper', {\n            slidesPerView: 2.1,\n            spaceBetween: 10,\n            speed: 800,\n            pagination: {\n                el: '.swiper-pagination',\n            },\n            breakpoints: {\n                690: {\n                    slidesPerView: 4,\n                    spaceBetween: 20,\n                },\n                900: {\n                    slidesPerView: 5,\n                    spaceBetween: 20,\n                }\n            }\n        });\n    }\n\n    function afterBlockSwiper() {\n        var swiper = new Swiper('.after-blocks-swiper', {\n            slidesPerView: 1.1,\n            spaceBetween: 10,\n            speed: 800,\n            pagination: {\n                el: '.swiper-pagination',\n            },\n\n        });\n    }\n\n    function stickyBannerHandler() {\n        const stickyBannerWrapper = document.querySelector('.js-sticky-banner');\n\n        if (!stickyBannerWrapper) return;\n\n        const wrapper = stickyBannerWrapper.querySelector('.js-banner-content');\n        const btns = stickyBannerWrapper.querySelectorAll('.js-set-cookie-btn');\n        const bannerId = stickyBannerWrapper.dataset.bannerId;\n        const isDesktop = window.matchMedia('(min-width: 900px)');\n        const text = wrapper.dataset.text;\n        const allowSplit = wrapper.dataset.split === '1';\n        const chatbotBtn = document.querySelector('.chatbot');\n        const chatbotPopup = document.querySelector('.chat-popup');\n\n        const generateWrappedText = (text) => {\n\n            if (!allowSplit) return;\n\n            const wrapperWidth = wrapper.offsetWidth;\n            const words = text.split(' ');\n            let linesCount = 0;\n\n            let currentLine = words[0];\n            const lines = [];\n\n            for (let i = 1; i < words.length; i++) {\n                const testLine = currentLine + ' ' + words[i];\n                const testWidth = getTextWidth(testLine, linesCount);\n\n                if (testWidth <= wrapperWidth) {\n                    currentLine = testLine;\n                } else {\n                    lines.push(currentLine);\n                    currentLine = words[i];\n                    linesCount++;\n                }\n            }\n\n            lines.push(currentLine);\n\n            wrapper.innerHTML = lines.map(line => `<p>${line}</p>`).join('');\n        };\n\n        const getTextWidth = (text, counter) => {\n            const testDiv = document.createElement('p');\n            let spacer = isDesktop.matches ? '34' : '24';\n            testDiv.style.position = 'absolute';\n            testDiv.style.whiteSpace = 'nowrap';\n            testDiv.style.visibility = 'hidden';\n            testDiv.style.fontSize = isDesktop.matches ? '18px' : '14px';\n            testDiv.textContent = text;\n            document.body.appendChild(testDiv);\n            const width = testDiv.scrollWidth + (counter * spacer);\n            document.body.removeChild(testDiv);\n            return width;\n        };\n\n        generateWrappedText(text);\n\n        window.addEventListener('resize', () => {\n            generateWrappedText(text);\n        });\n\n        if (btns.length > 0) {\n            btns.forEach(btn => {\n                btn.addEventListener('click', () => {\n                    setCookie(bannerId, true, 1);\n                    stickyBannerWrapper.classList.remove('active');\n\n                    if (chatbotBtn && chatbotPopup) {\n                        chatbotBtn.classList.remove('banner-active');\n                        chatbotPopup.classList.remove('banner-active');\n                    }\n                })\n            })\n        }\n\n        if (stickyBannerWrapper.classList.contains('available')) {\n            stickyBannerWrapper.classList.add('active');\n\n            if (chatbotBtn && chatbotPopup) {\n                chatbotBtn.classList.add('banner-active');\n                chatbotPopup.classList.add('banner-active');\n            }\n        }\n    }\n\n    function heroSlider() {\n        const heroSliderSwiper = document.querySelector('.js-hero-slider');\n\n        if (!heroSliderSwiper) return;\n\n        new Swiper(heroSliderSwiper, {\n            slidesPerView: 1,\n            autoHeight: true,\n            speed: 1200,\n            loop: true,\n            pagination: {\n                el: '.swiper-pagination',\n                clickable: true\n            },\n            navigation: {\n                nextEl: '.js-slider-nav-btn-next',\n                prevEl: '.js-slider-nav-btn-prev'\n            },\n            grabCursor: true,\n        });\n    }\n\n    function productsCarouselHandler() {\n        const productCarouselSections = document.querySelectorAll('.js-products-carousel-section');\n\n        const blockVisibilityHandler = (block, handler) => {\n            if (handler) {\n                block.style.height = '100%';\n                block.style.opacity = 1;\n            } else {\n                block.style.height = 0;\n                block.style.opacity = 0;\n            }\n        }\n\n        if (productCarouselSections.length > 0) {\n            productCarouselSections.forEach(productCarouselSection => {\n\n                const contentBlocks = productCarouselSection.querySelectorAll('.js-content');\n                const btnPrev = productCarouselSection.querySelector('.js-products-carousel-prev');\n                const btnNext = productCarouselSection.querySelector('.js-products-carousel-next');\n                const carouselSwiper = productCarouselSection.querySelector('.js-products-carousel');\n\n                const swiper = new Swiper(carouselSwiper, {\n                    slidesPerView: 1.3,\n                    speed: 1200,\n                    initialSlide: 1,\n                    centeredSlides: true,\n                    centerInsufficientSlides: true,\n                    spaceBetween: 8,\n                    loop: true,\n                    init: false,\n                    navigation: {\n                        nextEl: btnNext,\n                        prevEl: btnPrev\n                    },\n                    pagination: {\n                        el: '.swiper-pagination',\n                        clickable: true\n                    },\n                    grabCursor: true,\n                    breakpoints: {\n                        900: {\n                            spaceBetween: 20,\n                            slidesPerView: 2,\n                        }\n                    }\n                });\n\n                ['slideChange', 'init'].forEach(event => {\n                    swiper.on(event, function () {\n\n                        const currentSlide = swiper.slides[swiper.activeIndex];\n\n                        contentBlocks.forEach(block => {\n                            if (currentSlide.dataset.slide === block.dataset.slide) {\n\n                                contentBlocks.forEach(activeBlock => blockVisibilityHandler(activeBlock, false));\n\n                                blockVisibilityHandler(block, true);\n                            }\n                        })\n                    });\n                })\n\n                swiper.init();\n            })\n        }\n    }\n\n    $(window).on('load', function () {\n        mobileCalcProcess();\n        mobileCalcImageText();\n        calcSubMenuHeight();\n        calcMobileFooter();\n        submitPopup();\n        toggleChatbox();\n        breadcrumbs();\n        careerPage();\n        inputHandler();\n        scrollOnAnchor();\n        cta();\n        lockedForm();\n        productMarketPopup();\n        // cookieBox();\n        stickyBannerHandler();\n\n        $(`.section-locked-form`).each(function () {\n            let formEl = $(this);\n            let bgColor = formEl.data('btn-color');\n            let btnTextColor = formEl.data('btn-text');\n            let btnHoverColor = formEl.data('button-hover');\n            let lockedBtn = formEl.find('.submit-locked').css({'background': bgColor, 'color': btnTextColor});\n            formEl.find('.submit-locked svg path').css({'fill': btnTextColor});\n\n            lockedBtn.hover(\n                function () {\n                    $(this).css({\n                        'background-color': btnHoverColor,\n                    });\n                },\n                function () {\n                    $(this).css({\n                        'background-color': bgColor,\n                    });\n                }\n            );\n        });\n    });\n\n    sideMenu();\n    search();\n    slideshow();\n    slideshowText();\n    aboutSlideshow();\n    popupSlideshow();\n    certificatesSlideshow();\n    logosSwiper();\n    afterBlockSwiper();\n    heroSlider();\n    productsCarouselHandler();\n\n    $(window).on('scroll', function () {\n        var windowY = window.pageYOffset;\n\n        if (windowY >= 80) {\n            if (document.querySelector('.js-header-transparent')) {\n                document.querySelector('.js-header-transparent').classList.add('transparent-scrolled')\n            }\n        } else {\n            if (document.querySelector('.js-header-transparent')) {\n                document.querySelector('.js-header-transparent').classList.remove('transparent-scrolled')\n            }\n        }\n\n        if (windowY >= 150) {\n            $('.chatbot').addClass('scrolled');\n        } else {\n            $('.chatbot').removeClass('scrolled');\n        }\n    });\n\n    $(window).on('resize', function () {\n\n    });\n\n})\n\n(jQuery);\n\nfunction init() {\n    var vidDefer = document.getElementsByTagName('iframe');\n    for (var i = 0; i < vidDefer.length; i++) {\n        if (vidDefer[i].getAttribute('data-src')) {\n            vidDefer[i].setAttribute('src', vidDefer[i].getAttribute('data-src'));\n        }\n    }\n}\n\nwindow.onload = init;\n\n","(function () {\n\n    const getCookie = function (name) {\n        const cookieName = name + \"=\";\n        const decodedCookies = decodeURIComponent(document.cookie);\n        const cookieArray = decodedCookies.split(';');\n\n        for (let i = 0; i < cookieArray.length; i++) {\n            let cookie = cookieArray[i];\n            while (cookie.charAt(0) === ' ') {\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(cookieName) === 0) {\n                return cookie.substring(cookieName.length, cookie.length);\n            }\n        }\n        return null;\n    }\n\n    const setCookie = function (name, value, daysToExpire) {\n        const expirationDate = new Date();\n        expirationDate.setTime(expirationDate.getTime() + (daysToExpire * 24 * 60 * 60 * 1000));\n        const expires = \"expires=\" + expirationDate.toUTCString();\n        document.cookie = name + \"=\" + value + \";\" + expires + \";path=/\";\n    }\n\n    const isEmail = function (email) {\n        const pattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n        return pattern.test(email);\n    }\n\n    const isInputNotEmpty = function (input) {\n\n        return input.trim().length > 0;\n    }\n\n    const post = async function (method, action, data, files = false) {\n        if (!action && !data) return false;\n\n        const formData = new FormData();\n        formData.append('action', action);\n        formData.append('data', JSON.stringify(data));\n        formData.append('nonce', JSON.stringify(postmpwp.ajax_nonce));\n        formData.append('pageId', JSON.stringify(postmpwp.page_id));\n\n        // Append files to FormData\n        if (files) {\n            files.forEach((file, index) => {\n                formData.append(`file_${index}`, file);\n            });\n        }\n\n        return fetch(postmpwp.ajax_url, {\n            method: method,\n            credentials: 'same-origin',\n            body: formData,\n        })\n            .then(response => response.json());\n    };\n\n\n    class Login {\n        constructor() {\n            this.main = document.querySelector('.js-login-page');\n\n            if (!this.main) return;\n\n            this.getSelectors();\n            this.setEventListeners();\n\n            this.formData = {\n                name: '',\n                password: ''\n            }\n        }\n\n        getSelectors() {\n            this.form = this.main.querySelector('.js-login-form');\n            this.name = this.main.querySelector('input[name=\"login-name\"]');\n            this.password = this.main.querySelector('input[name=\"login-password\"]');\n            this.loginBtn = this.main.querySelector('.js-login-btn');\n            this.msg = this.main.querySelector('.js-login-msg');\n            this.loader = this.main.querySelector('.js-loader');\n        }\n\n        validateForm() {\n            let validateName = false;\n            let validatePassword = false;\n\n            if (isInputNotEmpty(this.name.value)) {\n                this.formData.name = this.name.value;\n\n                this.name.classList.remove('error');\n\n                validateName = true;\n            } else {\n                this.name.classList.add('error');\n\n                validateName = false;\n            }\n\n            if (isInputNotEmpty(this.password.value)) {\n                this.formData.password = this.password.value;\n\n                this.password.classList.remove('error');\n\n                validatePassword = true;\n            } else {\n                this.password.classList.add('error');\n\n                validatePassword = false;\n            }\n\n            if (validateName && validatePassword) {\n                this.ajaxCall(this.formData);\n            }\n        }\n\n        ajaxCall(data) {\n\n            this.loginBtn.classList.add('loading');\n            this.loader.classList.add('active');\n            this.msgHandler(false, '')\n\n            post('POST', 'loginHandler', data)\n                .then((response) => {\n                    if (response.success) {\n                        if (response.data.success) {\n                            this.loader.classList.remove('active');\n\n                            this.msgHandler(true, response.data.msg, false)\n\n                            setCookie('CalcEX_token', response.data.token, '1');\n\n                            window.open(response.data.url, '_self');\n                        } else {\n                            this.loader.classList.remove('active');\n\n                            console.error(response.data.msg);\n\n                            this.msgHandler(true, response.data.msg, true)\n\n                            this.loginBtn.classList.remove('loading');\n                        }\n                    }\n                })\n                .catch(error => console.error(error))\n        }\n\n        msgHandler(show, msg, isError = false) {\n            if (show) {\n                this.msg.innerText = msg;\n                this.msg.classList.add('show');\n\n                if (isError) {\n                    this.msg.classList.add('error');\n                }\n\n            } else {\n                this.msg.innerText = '';\n                this.msg.classList.remove('show', 'error');\n            }\n        }\n\n        setEventListeners() {\n            this.loginBtn.addEventListener('click', () => {\n                this.validateForm();\n            });\n\n            [this.password, this.name].forEach(input => {\n                input.addEventListener('input', () => {\n                    if (input.classList.contains('error')) {\n                        input.classList.remove('error');\n                    }\n                })\n            })\n\n            if (this.form) {\n                this.form.addEventListener('submit', (e) => {\n                    e.stopImmediatePropagation();\n                })\n            }\n            \n        }\n    }\n\n    new Login();\n\n    class Calculator {\n        constructor() {\n            this.main = document.querySelector('.js-label-price-calculator');\n\n            if (!this.main) return;\n\n            this.init();\n        }\n\n        init() {\n            window.addEventListener('load', () => {\n                this.setInitialData();\n                this.getSelectors();\n                this.setEventListeners();\n                this.initChoices();\n                this.toolTipsEvents();\n                this.checkConditions();\n                this.loader.classList.remove('active');\n            })\n        }\n\n        initChoices() {\n            const selectElements = this.main.querySelectorAll('select');\n            this.choices = [];\n\n            if (selectElements.length > 0) {\n                for (const select of selectElements) {\n                    const choice = new Choices(select, {\n                        searchEnabled: select.hasAttribute('data-search'),\n                        searchFields: ['label', 'value'],\n                        searchResultLimit: 20,\n                        placeholder: true,\n                        allowHTML: true,\n                        position: 'bottom',\n                        shouldSort: false,\n                        itemSelectText: '',\n                        searchPlaceholderValue: select.hasAttribute('data-search') ? select.dataset.search : '',\n                        noResultsText: translations.no_choices, // from wp localize\n                        noChoicesText: translations.no_choices, // from wp localize\n                        classNames: {\n                            placeholder: 'choices__placeholder',\n                            containerOuter: `choices ${select.name}`\n                        },\n                        labelId: select.id\n                    });\n\n                    this.choices.push(choice);\n                }\n            }\n        }\n\n        setInitialData() {\n            this.extraOpen = false;\n            this.isCalculated = false;\n            this.isSubmited = false;\n            this.isSpecialOffer = false;\n            this.calcID = '';\n            this.calculatedCirculations = '';\n            this.calcNotes = '';\n            this.uploadedFiles = [];\n            this.rDiameter = '';\n\n            this.calcParameters = {\n                Pavirsius: \"\",\n                Klijai: \"\",\n                Substrate: \"\",\n                Forma: \"\",\n                SpalvuSk: \"\",\n                Lakas: \"\",\n                Laminatas: \"\",\n                Folija: \"\",\n                Plotis: \"\",\n                Ilgis: \"\",\n                GRSk: \"\",\n                Tirazas1: \"0\",\n                Tirazas2: \"0\",\n                Tirazas3: \"0\",\n                Tirazas4: \"0\",\n                Tirazas5: \"0\",\n                Tirazas6: \"0\",\n                Tirazas7: \"0\",\n                Tirazas8: \"0\",\n                Tirazas9: \"0\",\n                Tirazas10: \"0\",\n                Embozingas: \"\",\n                KSpauda: \"\",\n                TikslusTirazas: \"\",\n                TikPilniRit: \"\",\n                TikSuKirtForma: \"\",\n                EtSkRit: \"1000\",\n                GamybosLaikas: \"\",\n                TranspZonaID: \"\",\n                TranspZona: \"\",\n                ClientComment: \"\",\n                Comment: \"\",\n                MajorGroup: \"\", // get from user\n                sendFromForm: \"EX\", // hardcoded\n                helpID: \"\",\n                IvoresDiam: \"\",\n                windings: \"\",\n                pastabos: \"\"\n            }\n\n            this.calcDisableConditions = [\n                {\n                    selector: 'label-substrate',\n                    option: 'Vellum',\n                    disableSelectors: ['label-laminate-varnishes', 'label-foiling', 'label-embossing'],\n                    disableOptions: []\n                },\n                {\n                    selector: 'label-substrate',\n                    option: 'PP GW',\n                    disableSelectors: ['label-embossing'],\n                    disableOptions: []\n                },\n                {\n                    selector: 'label-substrate',\n                    option: 'PP GW PET30',\n                    disableSelectors: ['label-embossing'],\n                    disableOptions: []\n                },\n                {\n                    selector: 'label-substrate',\n                    option: 'PP GC',\n                    disableSelectors: ['label-embossing'],\n                    disableOptions: []\n                },\n                {\n                    selector: 'label-substrate',\n                    option: 'PP GC PET30',\n                    disableSelectors: ['label-embossing'],\n                    disableOptions: []\n                },\n                {\n                    selector: 'label-substrate',\n                    option: 'PP Silver',\n                    disableSelectors: ['label-embossing'],\n                    disableOptions: [\n                        {\n                            selector: 'label-laminate-varnishes',\n                            optionValues: ['Gloss', 'Matt', 'Praimer', 'Thermo']\n                        },\n                    ]\n                },\n                {\n                    selector: 'label-substrate',\n                    option: 'PP Silver PET30',\n                    disableSelectors: ['label-embossing'],\n                    disableOptions: [\n                        {\n                            selector: 'label-laminate-varnishes',\n                            optionValues: ['Gloss', 'Matt', 'Praimer', 'Thermo']\n                        },\n                    ]\n                },\n                {\n                    selector: 'label-substrate',\n                    option: 'PE GW',\n                    disableSelectors: ['label-foiling', 'label-embossing'],\n                    disableOptions: [\n                        {\n                            selector: 'label-laminate-varnishes',\n                            optionValues: ['LAMMAT', 'LAMSK', 'LAMBSC', 'LAMSOFT', 'LAMSAND']\n                        },\n                        {\n                            selector: 'label-production',\n                            optionValues: ['1']\n                        },\n                    ]\n                },\n                {\n                    selector: 'label-substrate',\n                    option: 'PE GC',\n                    disableSelectors: ['label-foiling', 'label-embossing'],\n                    disableOptions: [\n                        {\n                            selector: 'label-laminate-varnishes',\n                            optionValues: ['LAMMAT', 'LAMSK', 'LAMBSC', 'LAMSOFT', 'LAMSAND']\n                        },\n                        {\n                            selector: 'label-production',\n                            optionValues: ['1']\n                        },\n                    ]\n                },\n                {\n                    selector: 'label-substrate',\n                    option: 'TTOP',\n                    disableSelectors: ['label-foiling', 'label-embossing'],\n                    disableOptions: [\n                        {\n                            selector: 'label-laminate-varnishes',\n                            optionValues: ['LAMMAT', 'LAMSK', 'LAMBSC', 'LAMSOFT', 'LAMSAND', 'Gloss', 'Matt', 'Praimer']\n                        },\n                    ]\n                },\n                {\n                    selector: 'label-substrate',\n                    option: 'Silvervac',\n                    disableSelectors: ['label-foiling'],\n                    disableOptions: [\n                        {\n                            selector: 'label-laminate-varnishes',\n                            optionValues: ['Gloss', 'Matt', 'Praimer', 'Thermo']\n                        },\n                    ]\n                },\n                {\n                    selector: 'label-substrate',\n                    option: 'Antique White',\n                    disableSelectors: ['label-laminate-varnishes'],\n                    disableOptions: []\n                },\n                {\n                    selector: 'label-substrate',\n                    option: 'Rustique Blanc',\n                    disableSelectors: ['label-laminate-varnishes'],\n                    disableOptions: []\n                },\n                {\n                    selector: 'label-substrate',\n                    option: 'Rustique Blanc Plus',\n                    disableSelectors: ['label-laminate-varnishes'],\n                    disableOptions: []\n                },\n                {\n                    selector: 'label-substrate',\n                    option: 'Martele Blanc',\n                    disableSelectors: ['label-laminate-varnishes'],\n                    disableOptions: []\n                },\n                {\n                    selector: 'label-substrate',\n                    option: 'Verge Blanc',\n                    disableSelectors: ['label-laminate-varnishes'],\n                    disableOptions: []\n                },\n                {\n                    selector: 'label-laminate-varnishes',\n                    option: 'LAMSOFT',\n                    disableSelectors: [],\n                    disableOptions: [\n                        {\n                            selector: 'label-production',\n                            optionValues: ['1']\n                        }\n                    ]\n                },\n                {\n                    selector: 'label-production',\n                    option: '1',\n                    disableSelectors: ['label-foiling', 'label-embossing', 'label-changing-press', 'label-exact-circulation', 'label-only-full-rolls', 'label-only-cutting-form', 'label-packing-amount'],\n                    disableOptions: []\n                },\n                {\n                    selector: 'label-foiling',\n                    option: 'FOLSILVER',\n                    disableSelectors: [],\n                    disableOptions: [\n                        {\n                            selector: 'label-production',\n                            optionValues: ['1']\n                        }\n                    ]\n                },\n                {\n                    selector: 'label-foiling',\n                    option: 'FOLGOLD',\n                    disableSelectors: [],\n                    disableOptions: [\n                        {\n                            selector: 'label-production',\n                            optionValues: ['1']\n                        }\n                    ]\n                },\n                {\n                    selector: 'label-foiling',\n                    option: 'FOLSILVER',\n                    disableSelectors: [],\n                    disableOptions: [\n                        {\n                            selector: 'label-production',\n                            optionValues: ['1']\n                        }\n                    ]\n                },\n                {\n                    selector: 'label-embossing',\n                    option: true,\n                    disableSelectors: [],\n                    disableOptions: [\n                        {\n                            selector: 'label-production',\n                            optionValues: ['1']\n                        }\n                    ]\n                },\n                {\n                    selector: 'label-changing-press',\n                    option: true,\n                    disableSelectors: [],\n                    disableOptions: [\n                        {\n                            selector: 'label-production',\n                            optionValues: ['1']\n                        }\n                    ]\n                },\n                {\n                    selector: 'label-exact-circulation',\n                    option: true,\n                    disableSelectors: [],\n                    disableOptions: [\n                        {\n                            selector: 'label-production',\n                            optionValues: ['1']\n                        }\n                    ]\n                },\n                {\n                    selector: 'label-only-full-rolls',\n                    option: true,\n                    disableSelectors: [],\n                    disableOptions: [\n                        {\n                            selector: 'label-production',\n                            optionValues: ['1']\n                        }\n                    ]\n                },\n                {\n                    selector: 'label-only-cutting-form',\n                    option: true,\n                    disableSelectors: [],\n                    disableOptions: [\n                        {\n                            selector: 'label-production',\n                            optionValues: ['1']\n                        }\n                    ]\n                },\n                {\n                    selector: 'label-packing-amount',\n                    option: true,\n                    disableSelectors: [],\n                    disableOptions: [\n                        {\n                            selector: 'label-production',\n                            optionValues: ['1']\n                        }\n                    ]\n                },\n                {\n                    selector: 'label-material',\n                    option: '800023',\n                    disableSelectors: ['label-foiling'],\n                    disableOptions: [\n                        {\n                            selector: 'label-laminate-varnishes',\n                            optionValues: ['Gloss', 'Matt', 'Praimer', 'Thermo']\n                        }\n                    ]\n                }\n            ]\n\n            this.calcAllowConditions = [\n                {\n                    selector: 'label-substrate',\n                    option: 'TTOP',\n                    enableSelectors: [],\n                    enableOptions: [\n                        {\n                            selector: 'label-laminate-varnishes',\n                            optionValues: ['Thermo']\n                        },\n                    ]\n                },\n            ]\n\n            this.shapeData = {\n                shape: \"Circle\",\n                direction: \"even\",\n                rotation: \"outside\"\n            }\n        }\n\n        getSelectors() {\n\n            // Form elements\n            this.form = this.main.querySelector('.js-calculator-form');\n            this.siblingInputs = this.main.querySelectorAll('.js-sibling-input');\n            this.extraCalc = this.main.querySelector('.js-extra');\n            this.tableWrapper = this.main.querySelector('.js-info-table');\n            this.loader = this.main.querySelector('.js-loader');\n            this.shapeImages = this.main.querySelectorAll('.js-shape-img');\n            this.extraGeneralNotes = this.main.querySelector('.js-general-notes');\n\n            // Buttons\n            this.submitBtn = this.main.querySelector('.js-submit-btn');\n            this.calcBtn = this.main.querySelector('.js-calculate-btn');\n            this.sendPDFBtn = this.main.querySelector('.js-send-pdf-btn');\n            // this.modalSendPDFBtn = this.main.querySelector('.js-modal-calculator-pdf-btn');\n            this.expandBtn = this.main.querySelector('.js-expand-extra-btn');\n            this.sendBtn = this.main.querySelector('.js-send-btn');\n            this.offerModalSendBtn = this.main.querySelector('.js-offer-send-btn');\n\n            // Tool tips\n            this.toolTipsBtns = this.main.querySelectorAll('.js-tool-tip-btn');\n            this.toolTipsBox = this.main.querySelectorAll('.js-tool-tip-box');\n            this.toolTipsCloseBtns = this.main.querySelectorAll('.js-tool-tip-close-btn');\n\n            // Order modal\n            this.modal = this.main.querySelector('.js-calc-modal');\n            this.orderModalCloseBtns = this.main.querySelectorAll('.js-modal-close-btn');\n            this.orderModalContent = this.main.querySelector('.js-order-content');\n            this.orderSuccessWindow = this.main.querySelector('.js-order-success-window');\n            this.orderSuccessMsg = this.main.querySelector('.js-order-success-description');\n            this.finalPrice = this.main.querySelector('.js-final-price');\n\n            // Offer modal\n            this.offerModal = this.main.querySelector('.js-offer-modal');\n            this.offerModalCloseBtns = this.main.querySelectorAll('.js-offer-modal-close-btn');\n            this.offerModalContent = this.main.querySelector('.js-offer-content');\n            this.offerSuccessWindow = this.main.querySelector('.js-offer-success-window');\n\n            // Pdf offer modal\n            this.PDFofferModal = this.main.querySelector('.js-pdf-modal');\n            this.PDFofferModalCloseBtns = this.main.querySelectorAll('.js-pdf-modal-close-btn');\n\n            // Inputs\n            this.calcInputs = this.main.querySelectorAll('.js-form-input'); // all form inputs\n            this.orderModalInputs = this.main.querySelectorAll('.js-order-input');\n            this.numInputs = this.main.querySelectorAll('.js-num-input');\n            this.materialTriggers = this.main.querySelectorAll('[data-reliant=\"label-material\"]');\n            this.shapeTriggers = this.main.querySelectorAll('[data-reliant=\"shape\"]');\n            this.onlyFullRollsTrigger = this.main.querySelectorAll('[data-reliant=\"only-full-rolls\"]');\n            this.formInput = this.main.querySelector('[name=\"label-form\"]');\n            this.widthInput = this.main.querySelector('[name=\"label-width\"]');\n            this.heightInput = this.main.querySelector('[name=\"label-height\"]');\n            this.glueInput = this.main.querySelector('[name=\"label-glue\"]');\n            this.colorInput = this.main.querySelector('[name=\"label-color\"]');\n            this.substrateInput = this.main.querySelector('[name=\"label-substrate\"]');\n            this.laminateVarnishesInput = this.main.querySelector('[name=\"label-laminate-varnishes\"]');\n            this.materialInput = this.main.querySelector('[name=\"label-material\"]');\n            this.typeInput = this.main.querySelector('[name=\"label-type\"]'); //GRSK\n            this.amountInputs = this.main.querySelectorAll('.js-amount-input');\n            this.amountInput1 = this.main.querySelector('[name=\"label-quantity-1\"]');\n            this.amountInput2 = this.main.querySelector('[name=\"label-quantity-2\"]');\n            this.amountInput3 = this.main.querySelector('[name=\"label-quantity-3\"]');\n            this.amountInput4 = this.main.querySelector('[name=\"label-quantity-4\"]');\n            this.amountInput5 = this.main.querySelector('[name=\"label-quantity-5\"]');\n            this.amountInput6 = this.main.querySelector('[name=\"label-quantity-6\"]');\n            this.amountInput7 = this.main.querySelector('[name=\"label-quantity-7\"]');\n            this.amountInput8 = this.main.querySelector('[name=\"label-quantity-8\"]');\n            this.amountInput9 = this.main.querySelector('[name=\"label-quantity-9\"]');\n            this.amountInput10 = this.main.querySelector('[name=\"label-quantity-10\"]');\n            this.productionInput = this.main.querySelector('[name=\"label-production\"]'); // gamyba\n            this.maxLengthInputs = this.main.querySelectorAll('.js-max-length-input');\n\n            // order modal\n            this.orderAmountInput = this.main.querySelector('[name=\"label-final-quantity\"]');\n            this.messageInput = this.main.querySelector('[name=\"label-message\"]');\n            this.privacyCheckboxInput = this.main.querySelector('[name=\"label-privacy-checkbox\"]');\n            this.hubInput = this.main.querySelector('[name=\"label-hub\"]');\n            this.fileInput = this.main.querySelector('[name=\"label-uploaded-files\"]');\n            this.formModalInputs = this.main.querySelectorAll('.js-form-modal-input');\n\n            // extra\n            this.foilingInput = this.main.querySelector('[name=\"label-foiling\"]');\n            this.packingInput = this.main.querySelector('[name=\"label-packing\"]');\n            this.packingAmountInput = this.main.querySelector('[name=\"label-packing-amount\"]')\n            this.embossingInput = this.main.querySelector('[name=\"label-embossing\"]');\n            this.changingPressInput = this.main.querySelector('[name=\"label-changing-press\"]');\n            this.exactCirculationInput = this.main.querySelector('[name=\"label-exact-circulation\"]');\n            this.onlyFullRollsInput = this.main.querySelector('[name=\"label-only-full-rolls\"]');\n            this.onlyCuttingFormInput = this.main.querySelector('[name=\"label-only-cutting-form\"]');\n            this.transportZoneInput = this.main.querySelector('[name=\"label-transport-zone\"]');\n            this.directionInputs = this.main.querySelectorAll('[name=\"label-direction\"]');\n            this.rotationInput = this.main.querySelector('[name=\"label-rotation\"]');\n            this.extraNoteInput = this.main.querySelector('[name=\"extra-note\"]');\n            this.rDiameterWrapper = this.main.querySelector('.js-r-diameter-wrapper');\n            this.rDiameterNumber = this.main.querySelector('.js-r-diameter');\n        }\n\n        setEventListeners() {\n\n            this.exactCirculationInput.addEventListener('change', () => {\n                if (this.exactCirculationInput.checked) {\n                    if (this.main.querySelector('.js-exact-circulation-note')) {\n                        this.main.querySelector('.js-exact-circulation-note').classList.add('hide')\n                    }\n                } else {\n                    if (this.main.querySelector('.js-exact-circulation-note')) {\n                        this.main.querySelector('.js-exact-circulation-note').classList.remove('hide')\n                    }\n                }\n            })\n\n            this.offerModalCloseBtns.forEach(btn => {\n                btn.addEventListener('click', () => {\n                    this.offerModal.classList.remove('active');\n\n                    setTimeout(() => {\n                        this.offerModalContent.classList.remove('hide');\n                        this.offerSuccessWindow.classList.remove('active');\n                    }, 500)\n                });\n            })\n\n            this.offerModalSendBtn.addEventListener('click', () => {\n                if (this.validateValues(this.calcInputs)) {\n                    this.sendOfferToEmail();\n                }\n            })\n\n            this.calcBtn.addEventListener('click', () => {\n                if (this.validateValues(this.calcInputs)) {\n                    this.calculateValues();\n                }\n            })\n\n            this.submitBtn.addEventListener('click', () => {\n                if (this.validateValues(this.calcInputs) && this.isCalculated) {\n                    this.insertDataToModal();\n                    this.modal.classList.add('active');\n                }\n            });\n\n            this.orderModalCloseBtns.forEach(btn => {\n                btn.addEventListener('click', () => {\n                    if (this.isSubmited) {\n                        this.orderModalContent.classList.remove('hide');\n                        this.orderSuccessWindow.classList.remove('active');\n\n                        this.isSubmited = false;\n\n                        this.resetFields(this.formModalInputs);\n                    }\n\n                    this.modal.classList.remove('active');\n                });\n            })\n\n            this.PDFofferModalCloseBtns.forEach(btn => {\n                btn.addEventListener('click', () => {\n                    this.PDFofferModal.classList.remove('active');\n                });\n            });\n\n            this.rotationInput.addEventListener('change', () => {\n                const directionValues = this.main.querySelectorAll('.js-direction-value');\n\n                if (directionValues.length > 0) {\n                    directionValues.forEach(value => {\n                        if (this.rotationInput.checked) {\n                            value.innerText = value.dataset.inside;\n                        } else {\n                            value.innerText = value.dataset.outside;\n                        }\n                    })\n                }\n            })\n\n            this.expandBtn.addEventListener('click', () => {\n                this.expandBtn.classList.toggle('is-open');\n                this.extraCalc.classList.toggle('is-open');\n\n                this.extraOpen = !this.extraOpen;\n\n                if (this.extraOpen) {\n                    this.extraCalc.style.height = this.extraCalc.scrollHeight + 'px';\n                } else {\n                    this.extraCalc.style.height = '0px';\n                }\n            })\n\n            this.formInput.addEventListener('change', () => {\n                [this.heightInput, this.widthInput].forEach(input => {\n                    input.value = '';\n                });\n            });\n\n            [this.heightInput, this.widthInput].forEach(input => {\n                input.addEventListener('input', () => {\n                    if (this.formInput.value === 'Circle') {\n\n                        let value = input.value;\n\n                        this.heightInput.value = value;\n                        this.widthInput.value = value;\n                    }\n                })\n\n                input.addEventListener('blur', () => {\n                    if (this.formInput.value === 'Circle') {\n\n                        [this.heightInput, this.widthInput].forEach(activeInput => {\n                            this.checkInputMaxMin(activeInput);\n\n                            if (this.heightInput.value !== this.widthInput.value) {\n                                this.heightInput.value = '';\n                                this.widthInput.value = '';\n                            }\n                        })\n                    }\n                })\n            })\n\n            if (this.siblingInputs.length > 0) {\n                this.siblingInputs.forEach(input => {\n                    input.addEventListener('input', () => {\n                        if (input.value !== '') {\n                            if (input.nextElementSibling) {\n                                input.nextElementSibling.style.display = 'block';\n                            }\n                        } else {\n                            if (input.nextElementSibling) {\n                                if (input.nextElementSibling.value === '') {\n                                    input.nextElementSibling.style.display = 'none';\n                                }\n                            }\n\n                            if (input.previousElementSibling && input.previousElementSibling.value === '') {\n                                input.style.display = 'none';\n                            }\n                        }\n                    })\n                })\n            }\n\n            if (this.orderModalInputs.length > 0) {\n                this.orderModalInputs.forEach(input => {\n                    input.addEventListener('change', () => {\n                        this.errorInputHandler(false, input.name);\n                    })\n                })\n            }\n\n            this.sendBtn.addEventListener('click', () => {\n                if (this.validateValues(this.calcInputs) && this.isCalculated && !this.isSpecialOffer) {\n                    if (this.validateValues(this.orderModalInputs, true)) {\n                        this.ajaxCall('POST', 'saveValues', this.calcParameters, this.uploadedFiles)\n                            .then((response) => {\n                                if (response.data.success) {\n\n                                    this.loader.classList.remove('active');\n\n                                    if (response.data.data.calcID) {\n                                        this.calcID = response.data.data.calcID;\n                                    }\n                                    // else {\n                                    //     this.modalSendPDFBtn.classList.add('hide');\n                                    // }\n\n                                    this.orderModalContent.classList.add('hide');\n                                    this.orderSuccessWindow.classList.add('active');\n\n                                    if (response.data.data.successMessage) {\n                                        this.orderSuccessMsg.innerText = response.data.data.successMessage;\n                                    }\n\n                                    this.isSubmited = true;\n                                }\n                            })\n                    }\n                }\n            })\n\n            this.sendPDFBtn.addEventListener('click', () => {\n                if (this.validateValues(this.calcInputs) && this.isCalculated) {\n                    this.ajaxCall('POST', 'sendPDFProposal', this.calcParameters)\n                        .then((response) => {\n                            if (response.success) {\n                                if (response.data.isLoggedIn) {\n                                    let title = this.PDFofferModal.querySelector('.js-title');\n                                    title.innerText = ((response.data.msg !== null) && (response.data.msg !== undefined)) ? response.data.msg : '';\n                                    this.PDFofferModal.classList.add('active');\n                                    this.loader.classList.remove('active');\n                                } else {\n                                    window.open(response.data.url, '_self');\n                                }\n                            }\n                        })\n                }\n            })\n\n            if (this.numInputs.length > 0) {\n                this.numInputs.forEach(input => {\n                    input.addEventListener('blur', () => {\n                        this.checkInputMaxMin(input);\n                    })\n                })\n            }\n\n            if (this.calcInputs.length > 0) {\n                this.calcInputs.forEach(input => {\n                    input.addEventListener('change', () => {\n\n                        this.calcInputs.forEach(activeInput => {\n                            this.errorInputHandler(false, activeInput.name);\n                        })\n\n                        if (input.name === 'label-production') {\n                            if (input.value === \"1\") {\n                                this.urgentProdNoteOnTriggerHandler(true);\n                            } else {\n                                this.urgentProdNoteOnTriggerHandler(false);\n                            }\n                        }\n\n                        this.isCalculated = false;\n\n                        if (this.submitBtn.classList.contains('active')) {\n                            this.submitBtn.classList.remove('active');\n                        }\n\n                        if (this.sendPDFBtn.classList.contains('active')) {\n                            this.sendPDFBtn.classList.remove('active');\n                        }\n\n                        this.checkConditions();\n                    })\n                })\n            }\n\n            this.orderAmountInput.addEventListener('change', () => {\n                if (this.orderAmountInput.value !== '' && this.calculatedCirculations.length > 0) {\n\n                    this.calculatedCirculations.forEach(circulation => {\n                        if (this.orderAmountInput.value == circulation.SkTirazas) {\n                            if (circulation.GautiSpecPasiulyma === 'Y') {\n                                this.modalSpecOfferHandler(true);\n                            } else {\n                                this.modalSpecOfferHandler(false);\n\n                                this.finalPrice.innerText = ((circulation.KainaKlientui !== null) && (circulation.KainaKlientui !== undefined)) ? circulation.KainaKlientui : '';\n                            }\n                        }\n                    })\n                }\n            })\n\n\n            if (this.maxLengthInputs.length > 0) {\n                this.maxLengthInputs.forEach(input => {\n                    input.addEventListener('input', () => {\n                        const maxLength = input.getAttribute('maxlength') ? parseInt(input.getAttribute('maxlength'), 10) : 90;\n                        const counter = input.nextElementSibling;\n\n                        if (counter && counter.classList.contains('js-max-length')) {\n                            counter.textContent = maxLength - input.value.length;\n                        }\n                    })\n                })\n            }\n\n            // events with expanded functions\n\n            this.fileInputHandler();\n\n            this.getMaterialsByData();\n\n            this.showShapeImg();\n\n            this.checkOnlyFullRolls();\n        }\n\n        resetFields(inputs) {\n\n            inputs.forEach(function (input) {\n                const selector = this.getSelectInput(input.name);\n\n                if (selector) {\n                    selector.setChoiceByValue(['']);\n                } else {\n                    if (input.type === 'text' || input.type === 'textarea') {\n                        input.value = '';\n                    }\n\n                    if (input.type === 'checkbox') {\n                        input.checked = false;\n                    }\n\n                    if (input.type === 'file') {\n                        input.value = '';\n\n                        this.uploadedFiles = [];\n\n                        const fileCards = this.main.querySelectorAll('.js-file-card');\n                        const uploadFilesDescription = this.main.querySelector('.js-uploaded-files-description');\n\n                        uploadFilesDescription && uploadFilesDescription.classList.remove('error');\n\n                        if (fileCards.length > 0) {\n                            fileCards.forEach(function (card) {\n                                card.remove();\n                            })\n                        }\n                    }\n                }\n            })\n        }\n\n        checkInputMaxMin(input) {\n            if (input.value === '') return;\n\n            if (Number(input.dataset.min) > Number(input.value)) {\n                input.value = input.dataset.min;\n\n                input.classList.add('error');\n\n                setTimeout(() => {\n                    input.classList.remove('error');\n                }, 1000)\n            }\n\n            if (Number(input.value) > Number(input.dataset.max)) {\n                input.value = input.dataset.max;\n\n                input.classList.add('error');\n\n                setTimeout(() => {\n                    input.classList.remove('error');\n                }, 1000)\n            }\n        }\n\n        changeInputState(handler, name) {\n\n            let selector = this.getSelectInput(name);\n            const label = this.getInputLabel(name);\n            let ignoredInputs = ['label-packing-amount'];\n\n            if (ignoredInputs.includes(name)) return;\n\n            if (selector) { // check if selector is choice.js\n                if (handler) {\n                    selector.enable();\n\n                    if (label) {\n                        label.classList.remove('locked');\n                    }\n\n                } else {\n                    if (selector.getValue().value) {\n                        selector.setChoiceByValue(['']);\n                    }\n\n                    if (label) {\n                        label.classList.add('locked');\n                    }\n\n                    selector.disable();\n                }\n            } else {\n                const inputs = this.main.querySelectorAll(`input[name=${name}]`);\n\n                if (inputs.length > 0) {\n                    inputs.forEach(input => {\n                        if (!handler) {\n                            if (input.type === 'text') {\n                                input.value = ''\n                            } else if (input.type === 'checkbox') {\n                                input.checked = false;\n                            }\n                        }\n\n                        if (label) {\n                            handler ? label.classList.remove('locked') : label.classList.add('locked');\n                        }\n\n                        input.disabled = !handler;\n                    })\n                }\n            }\n        }\n\n        checkConditions() {\n\n            let conditions = [];\n            let disabledSelectors = [];\n            let disabledOptions = [];\n            let disabledOptionsNames = [];\n            let allowConditions = [];\n            let ignoredInputs = Array.from(this.main.querySelectorAll('[data-ignore-checking]')).map(element => element.id);\n\n            const convertOptgroupsToChoicesArray = (element) => {\n\n                let presetGroups = element._presetGroups;\n                let presetChoices = element._presetChoices;\n\n                return presetGroups.map((optgroup, index) => {\n                    const choices = Array.from(optgroup.querySelectorAll('option')).map(option => {\n\n                        let disabled;\n\n                        presetChoices.forEach(item => {\n                            if (option.value === item.value) {\n                                disabled = item.disabled;\n                            }\n                        })\n\n                        return {\n                            value: option.value,\n                            label: option.textContent,\n                            disabled: disabled\n                        };\n                    });\n\n                    return {\n                        label: optgroup.label,\n                        id: index + 1,\n                        disabled: false,\n                        choices: choices\n                    };\n                });\n            };\n\n            this.calcInputs.forEach(input => {\n\n                const matchingConditions = this.calcDisableConditions.filter(obj => {\n                    return obj.selector === input.name && obj.option === (input.type === 'checkbox' ? input.checked : input.value);\n                });\n\n                conditions = conditions.concat(matchingConditions);\n            });\n\n            this.calcInputs.forEach(input => {\n                const matchingAllowConditions = this.calcAllowConditions.filter(obj => {\n                    return obj.selector === input.name && obj.option !== (input.type === 'checkbox' ? input.checked : input.value);\n                });\n\n                allowConditions = allowConditions.concat(matchingAllowConditions);\n            });\n\n            if (conditions.length > 0) {\n                conditions.forEach(condition => {\n                    if (condition.disableSelectors.length > 0) {\n                        condition.disableSelectors.forEach(name => {\n                            disabledSelectors.push(name);\n\n                            this.changeInputState(false, name);\n                        })\n                    }\n\n                    if (condition.disableOptions.length > 0) {\n                        condition.disableOptions.forEach(option => {\n                            disabledOptions.push(option);\n                        })\n                    }\n                })\n            }\n\n            if (allowConditions.length > 0) {\n                allowConditions.forEach(condition => {\n                    if (condition.enableOptions.length > 0) {\n                        condition.enableOptions.forEach(option => {\n                            disabledOptions.push(option);\n                        })\n                    }\n                })\n            }\n\n            if (disabledOptions.length > 0) {\n                if (disabledOptions.some(obj => obj.selector === \"label-production\")) {\n\n                } else {\n                    this.urgentProdNoteTriggerHandler(false);\n                }\n            }\n\n            this.calcInputs.forEach(input => {\n                if (!disabledSelectors.includes(input.name)) {\n                    this.changeInputState(true, input.name);\n                }\n\n                const select = this.getSelectInput(input.name);\n\n                if (select) {\n                    select._presetChoices.forEach(choice => {\n                        disabledOptions.forEach(option => {\n                            if (option.optionValues.includes(choice.value) && select.config.labelId === option.selector) {\n                                disabledOptionsNames.push({\n                                    name: select.config.labelId,\n                                    value: choice.value\n                                });\n                            }\n                        })\n                    })\n                }\n            })\n\n            this.choices.forEach(Choice => {\n                let currentValue = Choice.getValue() ? Choice.getValue().value : false;\n\n                Choice._presetChoices.forEach(item => {\n                    item.disabled = false;\n\n                    disabledOptionsNames.forEach(name => {\n                        if (Choice.config.labelId === name.name && item.value === name.value) {\n                            item.disabled = true;\n                        }\n                    })\n                })\n\n                if (Choice._presetGroups.length > 0) {\n                    const convertedGroups = convertOptgroupsToChoicesArray(Choice);\n\n                    if (convertedGroups) {\n                        convertedGroups.push({\n                            value: '', label: translations.select\n                        })\n\n                        Choice.setChoices(convertedGroups, 'value', 'label', true);\n                    }\n                } else {\n                    if (!ignoredInputs.includes(Choice.config.labelId)) {\n                        Choice.setChoices(Choice._presetChoices, 'value', 'label', true);\n                    }\n                }\n\n                if (currentValue) {\n\n                    Choice.setChoiceByValue([currentValue])\n\n                    disabledOptionsNames.forEach(name => {\n                        if (Choice.config.labelId === name.name && currentValue === name.value) {\n\n                            if (name.name === \"label-production\" && name.value === \"1\") {\n                                this.urgentProdNoteTriggerHandler(true);\n                                this.urgentProdNoteOnTriggerHandler(false);\n                            }\n\n                            for (const option of Choice._presetChoices) {\n                                if (option.value === '') {\n                                    Choice.setChoiceByValue(['']);\n\n                                    this.checkConditions();\n\n                                    break;\n                                } else {\n                                    if (!option.disabled) {\n                                        Choice.setChoiceByValue([option.value]);\n\n                                        this.checkConditions();\n\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    })\n                } else {\n                    // auto select value if only one available\n                    const dropdownChoices = Choice._currentState.choices;\n                    let count = 0;\n\n                    if (dropdownChoices.length > 0) {\n                        for (const dropdownChoice of dropdownChoices) {\n                            if (!dropdownChoice.disabled && dropdownChoice.value !== \"\") {\n                                count++;\n                            }\n                        }\n\n                        if (count === 1) {\n                            for (const activeDropdownChoice of dropdownChoices) {\n                                if (!activeDropdownChoice.disabled && activeDropdownChoice.value !== \"\") {\n                                    Choice.setChoiceByValue([activeDropdownChoice.value]);\n\n                                    this.getAndSetMaterials();\n                                }\n                            }\n                        }\n                    }\n                }\n            })\n        }\n\n        toolTipsEvents() {\n            if (this.toolTipsBtns.length > 0) {\n                this.toolTipsBtns.forEach(btn => {\n                    btn.addEventListener('click', (event) => {\n                        event.stopPropagation();\n\n                        if (btn.nextElementSibling) {\n                            this.toolTipsBox.forEach(box => closeTooltip(box));\n\n                            let tooltip = btn.nextElementSibling;\n\n                            if (tooltip.classList.contains('loaded')) {\n                                btn.classList.add('active');\n                                tooltip.classList.add('active');\n                            } else {\n                                this.ajaxCall('POST', 'getTooltip', {\n                                    ID: tooltip.dataset.tableId,\n                                })\n                                    .then((response) => {\n                                        if (response.data.success) {\n                                            if (response.data.data) {\n\n                                                let title = tooltip.querySelector('.js-title');\n                                                let description = tooltip.querySelector('.js-description');\n                                                let image = tooltip.querySelector('.js-image');\n\n                                                title.innerText = ((response.data.data.title !== null) && (response.data.data.title !== undefined)) ? response.data.data.title : '';\n                                                description.innerText = ((response.data.data.description !== null) && (response.data.data.description !== undefined)) ? response.data.data.description : '';\n\n                                                if (response.data.data.image) {\n                                                    image.src = response.data.data.image;\n                                                    image.classList.add('active');\n                                                }\n\n                                                this.loader.classList.remove('active');\n                                                btn.classList.add('active');\n                                                tooltip.classList.add('active', 'loaded');\n                                            } else {\n                                                this.loader.classList.remove('active');\n                                            }\n                                        } else {\n                                            this.loader.classList.remove('active');\n                                        }\n                                    })\n\n                            }\n\n                            document.addEventListener('click', closeTooltipsOutside);\n                        }\n                    });\n                });\n            }\n\n            if (this.toolTipsCloseBtns.length > 0) {\n                this.toolTipsCloseBtns.forEach(btn => {\n                    btn.addEventListener('click', (event) => {\n                        event.stopPropagation();\n\n                        if (btn.parentElement) {\n                            closeTooltip(btn.parentElement);\n                        }\n                    });\n                });\n            }\n\n            const closeTooltipsOutside = (event) => {\n                this.toolTipsBox.forEach(box => {\n                    if (!box.contains(event.target)) {\n                        closeTooltip(box);\n                    }\n                });\n\n                this.toolTipsBtns.forEach(btn => {\n                    if (!btn.contains(event.target) && !btn.nextElementSibling.contains(event.target)) {\n                        closeTooltip(btn.nextElementSibling);\n                    }\n                });\n            }\n\n            const closeTooltip = (box) => {\n                if (!box) return;\n\n                box.classList.remove('active');\n                box.previousElementSibling.classList.remove('active');\n\n                document.removeEventListener('click', closeTooltipsOutside);\n            }\n        }\n\n        urgentProdNoteTriggerHandler(show) {\n            const note = this.main.querySelector('.js-urgent-production-note');\n\n            if (!note) return;\n\n            if (show) {\n                note.classList.remove('hide');\n            } else {\n                note.classList.add('hide');\n            }\n        }\n\n        urgentProdNoteOnTriggerHandler(show) {\n            const notes = this.main.querySelectorAll('.js-urgent-on-production-note');\n\n            if (notes.length === 0) return;\n\n            if (show) {\n                notes.forEach(note => {\n                    note.classList.remove('hide');\n                })\n            } else {\n                notes.forEach(note => {\n                    note.classList.add('hide');\n                })\n            }\n        }\n\n\n        checkOnlyFullRolls() {\n\n            let active = false;\n            let onlyFullRollsChecked = false;\n            let packingSelected = false;\n\n            const roundToPacking = (currentValue, packingValue) => {\n\n                const cValue = Number(currentValue);\n                const pValue = Number(packingValue);\n\n                if (cValue < pValue) {\n                    return pValue;\n                }\n\n                const remainder = cValue % pValue;\n\n                if (remainder > 0) {\n                    return cValue + (pValue - remainder);\n                }\n\n                return cValue;\n            }\n\n            const calculateFullRolls = () => {\n\n                let packingValue = this.packingAmountInput.value;\n\n                if (!active) return;\n\n                this.amountInputs.forEach(input => {\n                    if (input.value !== '') {\n                        input.value = roundToPacking(input.value, packingValue);\n                    }\n                })\n            }\n\n            this.onlyFullRollsTrigger.forEach(trigger => {\n                trigger.addEventListener('change', () => {\n                    this.onlyFullRollsTrigger.forEach(activeTrigger => {\n                        if (activeTrigger.id === 'label-only-full-rolls') {\n                            onlyFullRollsChecked = !!activeTrigger.checked;\n                        }\n\n                        if (activeTrigger.id === 'label-packing') {\n                            packingSelected = activeTrigger.value !== '';\n\n                            if (!packingSelected) {\n                                this.packingAmountInput.value = 1000;\n                            }\n                        }\n                    })\n\n                    if (onlyFullRollsChecked) {\n                        if (this.main.querySelector('.js-only-full-rolls-note')) {\n                            this.main.querySelector('.js-only-full-rolls-note').classList.add('hide')\n                        }\n                    } else {\n                        if (this.main.querySelector('.js-only-full-rolls-note')) {\n                            this.main.querySelector('.js-only-full-rolls-note').classList.remove('hide')\n                        }\n                    }\n\n                    active = onlyFullRollsChecked && packingSelected;\n\n                    if (active) {\n                        calculateFullRolls();\n                    }\n                })\n            });\n\n            if (this.amountInputs.length > 0) {\n                this.amountInputs.forEach(aInput => {\n                    aInput.addEventListener('blur', calculateFullRolls)\n                })\n            }\n        }\n\n        insertDataToModal() {\n            const packingCaption = this.main.querySelector('.js-packing-caption');\n            const select = this.getSelectInput('label-packing');\n            const packingLabel = select.getValue().placeholder ? '' : select.getValue().label;\n            const packingValue = ((this.packingAmountInput.value !== null) && (this.packingAmountInput.value !== undefined)) ? this.packingAmountInput.value : '';\n            const orderModalDirectionImg = this.main.querySelector('.js-modal-direction-img');\n            const modalNotes = this.modal.querySelector('.js-notes');\n            const selectedPackingChoice = select._presetChoices.find((choice) => choice.selected)\n\n            if (this.calcNotes.length > 0) {\n                let notesList = '<ul>';\n                for (var i = 0; i < this.calcNotes.length; i++) {\n                    notesList += '<li>' + this.calcNotes[i] + '</li>';\n                }\n                notesList += '</ul>';\n                modalNotes.innerHTML = notesList;\n            } else {\n                modalNotes.innerHTML = '';\n            }\n\n            packingCaption.innerText = `${packingLabel}: ${packingValue} ${selectedPackingChoice ? selectedPackingChoice.customProperties : ''}`;\n\n            for (const direction of this.directionInputs) {\n                if (direction.checked) {\n                    const labelWrapper = this.getInputLabel(direction.id);\n\n                    if (labelWrapper) {\n                        let images = labelWrapper.querySelectorAll('.js-shape-img');\n\n                        if (images.length > 0) {\n                            images.forEach(image => {\n                                if (image.classList.contains('active')) {\n                                    orderModalDirectionImg.src = image.src;\n                                }\n                            })\n                        }\n                    }\n                }\n            }\n        }\n\n        getMaterialsByData() {\n            let glue, substrate;\n\n            this.materialTriggers.forEach(trigger => {\n                trigger.addEventListener('change', () => {\n\n                    this.errorInputHandler(false, 'label-material')\n\n                    if (trigger.id === 'label-substrate') {\n                        substrate = trigger.value;\n\n                        this.ajaxCall('POST', 'getAdhesives', {\n                            \"Substrate\": substrate\n                        })\n                            .then((response) => {\n\n                                let select = this.getSelectInput('label-glue');\n                                let available = []\n\n                                if (response.success) {\n                                    if (response.data.success) {\n\n                                        let adhesives = response.data.data;\n                                        available = adhesives.map(i => Object.values(i)[0]);\n\n                                        select._presetChoices.forEach(item => {\n                                            item.disabled = true;\n\n                                            available.forEach(name => {\n                                                if (item.value === name) {\n                                                    item.disabled = false;\n                                                }\n                                            })\n                                        })\n\n                                        select.setChoices(select._presetChoices, 'value', 'label', true);\n\n                                        this.checkConditions();\n\n                                    } else {\n                                        select._presetChoices.forEach(item => {\n                                            available.forEach(name => {\n                                                if (item.value === name) {\n                                                    item.disabled = true;\n                                                }\n                                            })\n                                        })\n\n                                        select.setChoices(select._presetChoices, 'value', 'label', true);\n                                    }\n\n                                    this.loader.classList.remove('active');\n                                }\n                            })\n                    }\n\n                    if (trigger.id === 'label-glue') {\n                        glue = trigger.value;\n                    }\n\n                    if (substrate && glue) {\n                        this.getAndSetMaterials();\n                    }\n                })\n            })\n        }\n\n        getAndSetMaterials() {\n            let substrate, adhesive, filteredMaterial;\n\n            this.materialTriggers.forEach(trigger => {\n                if (trigger.id === 'label-glue') {\n                    adhesive = trigger.value;\n                }\n\n                if (trigger.id === 'label-substrate') {\n                    substrate = trigger.value;\n                }\n            })\n\n            if (substrate && adhesive) {\n                this.ajaxCall('POST', 'getMaterials', {\n                    \"Substrate\": substrate,\n                    \"Adhesive\": adhesive\n                })\n                    .then((response) => {\n                        if (response.success) {\n                            let initialChoices = response.data.data;\n\n                            let select = this.getSelectInput('label-material');\n\n                            select.removeActiveItems(1);\n\n                            if (initialChoices.length > 0) {\n                                if (initialChoices.length === 1) {\n                                    filteredMaterial = initialChoices[0];\n                                } else {\n                                    filteredMaterial = initialChoices.find(obj => obj.Attribute === 'SKT1');\n\n                                    if (!filteredMaterial) {\n                                        filteredMaterial = initialChoices[0];\n                                    }\n                                }\n\n                                if (filteredMaterial) {\n                                    select.setChoices([\n                                        {\n                                            value: filteredMaterial.SubstrateID,\n                                            label: filteredMaterial.SubstrateName + ' ' + filteredMaterial.SubstrateNameOrig\n                                        }\n                                    ], 'value', 'label', true);\n\n                                    select.setChoiceByValue([filteredMaterial.SubstrateID]);\n\n                                    this.checkConditions();\n\n                                } else {\n                                    this.errorInputHandler(true, 'label-material')\n                                }\n                            } else {\n                                select.setChoices([], 'value', 'label', true);\n\n                                this.errorInputHandler(true, 'label-material')\n                            }\n\n                            this.loader.classList.remove('active');\n                        }\n                    })\n            }\n        }\n\n        getInputLabel(name) {\n            const label = this.main.querySelector(`label[for=\"${name}\"]`);\n\n            if (label) {\n                return label;\n            } else {\n                return false;\n            }\n        }\n\n        showShapeImg() {\n\n            let width = 0, height = 0, direction;\n\n            this.shapeTriggers.forEach(trigger => {\n                trigger.addEventListener('change', () => {\n                    if (trigger.name === 'label-form') {\n                        this.shapeData.shape = trigger.value;\n                    }\n\n                    if (trigger.name === 'label-rotation') {\n                        this.shapeData.rotation = trigger.checked ? 'inside' : 'outside';\n                    }\n\n                    if (trigger.name === 'label-width') {\n                        width = Number(trigger.value);\n                    }\n\n                    if (trigger.name === 'label-height') {\n                        height = Number(trigger.value);\n                    }\n\n                    if (this.shapeData.shape === 'Rectangle') {\n                        direction = width > height ? 'horizontal' : (width === height ? 'even' : 'vertical');\n                    } else if (this.shapeData.shape === 'Oval') {\n                        direction = width > height ? 'horizontal' : 'vertical';\n                    } else {\n                        direction = 'even'\n                    }\n\n                    this.shapeData.direction = direction;\n\n                    this.shapeImages.forEach(img => {\n                        if (img.dataset.shape === this.shapeData.shape && img.dataset.rotation === this.shapeData.rotation && img.dataset.direction === this.shapeData.direction) {\n                            new Promise(resolve => {\n                                resolve(this.shapeImages.forEach(activeImg => activeImg.classList.remove('active')));\n                            }).then(() => img.classList.add('active'))\n                        }\n                    });\n                })\n            })\n        }\n\n        calculateValues() {\n\n            this.finalPrice.innerText = '';\n\n            this.ajaxCall('POST', 'calculateValues', this.calcParameters)\n                .then((response) => {\n                    if (response.success) {\n                        if (response.data.isLoggedIn) {\n                            if (response.data.data) {\n                                this.tableWrapper.innerHTML = response.data.data.table;\n\n                                this.loader.classList.remove('active');\n\n                                if (response.data.success) {\n                                    this.submitBtn.classList.add('active');\n                                    this.sendPDFBtn.classList.add('active');\n\n                                    this.isCalculated = true;\n\n                                    this.specOfferHandler();\n\n                                    if (response.data.data.circulations) {\n\n                                        let convertedToArray = Object.values(response.data.data.circulations);\n\n                                        this.setValuesToOrderAmountInput(convertedToArray);\n\n                                        this.calculatedCirculations = convertedToArray;\n\n                                        this.modalSpecOfferHandler(false);\n                                    }\n\n                                    if (response.data.data.costsNotes) {\n                                        this.calcNotes = response.data.data.costsNotes\n                                    }\n\n                                    if (response.data.data.rDiameter) {\n                                        this.rDiameterNumber.innerText = response.data.data.rDiameter;\n                                        this.rDiameterWrapper.classList.remove('hide');\n\n                                        if (this.extraOpen) {\n                                            this.extraCalc.style.height = this.extraCalc.scrollHeight + 'px';\n                                        }\n                                    } else {\n                                        this.rDiameterNumber.innerText = '';\n                                        this.rDiameterWrapper.classList.add('hide');\n\n                                        if (this.extraOpen) {\n                                            this.extraCalc.style.height = this.extraCalc.scrollHeight + 'px';\n                                        }\n                                    }\n                                }\n                            }\n                        } else {\n                            window.open(response.data.url, '_self');\n                        }\n                    }\n                })\n        }\n\n        setValuesToOrderAmountInput(values) {\n            const orderAmountInput = this.getSelectInput('label-final-quantity');\n\n            if (!orderAmountInput) return;\n\n            if (values.length > 0) {\n                orderAmountInput.setChoices(values.map(item => ({\n                    label: item.SkTirazas,\n                    value: item.SkTirazas\n                })), 'value', 'label', true);\n\n            } else {\n                orderAmountInput.setChoices([], 'value', 'label', true);\n            }\n        }\n\n        sendOfferToEmail() {\n\n            this.ajaxCall('POST', 'sendOffer', this.calcParameters)\n                .then((response) => {\n                    if (response.success) {\n                        if (response.data.isLoggedIn) {\n                            if (response.data.data) {\n                                this.offerModalContent.classList.add('hide');\n                                this.offerSuccessWindow.classList.add('active');\n                                this.loader.classList.remove('active');\n\n                            } else {\n                                this.offerModal.classList.remove('active');\n                                this.loader.classList.remove('active');\n                            }\n                        } else {\n                            window.open(response.data.url, '_self');\n                        }\n                    }\n                })\n        }\n\n        fileInputHandler() {\n\n            const uploadedFilesCardsWrapper = this.main.querySelector('.js-uploaded-files');\n            const uploadFilesDescription = this.main.querySelector('.js-uploaded-files-description');\n            const uploadDropArea = this.main.querySelector('.js-uploaded-files-drop');\n\n            const updateFilesInput = (file) => {\n                const objectToRemove = file.name;\n\n                const indexToRemove = this.uploadedFiles.findIndex(obj => obj.name === objectToRemove);\n\n                if (indexToRemove !== -1) {\n                    this.uploadedFiles.splice(indexToRemove, 1);\n                }\n            }\n\n            const createCard = (file, allowed = true) => {\n                const fileCard = document.createElement('div');\n                fileCard.className = allowed ? 'file-card js-file-card' : 'file-card js-file-card error';\n                fileCard.id = file.name;\n\n                const fileNameSpan = document.createElement('p');\n                fileNameSpan.className = 'file-name';\n                fileNameSpan.textContent = file.name;\n\n                const deleteButton = document.createElement('button');\n                deleteButton.textContent = '';\n                deleteButton.addEventListener('click', function () {\n                    fileCard.remove();\n                    updateFilesInput(file);\n                });\n\n                fileCard.appendChild(fileNameSpan);\n                fileCard.appendChild(deleteButton);\n\n                uploadedFilesCardsWrapper.appendChild(fileCard);\n            }\n\n            const fileUploadHandler = (file) => {\n                if (this.uploadedFiles.some(item => item.name === file.name)) return;\n\n                this.ajaxCall('POST', 'checkFile', this.calcParameters, [file])\n                    .then(response => {\n                        this.loader.classList.remove('active');\n\n                        if (response.data.success) {\n                            this.uploadedFiles.push(file);\n\n                            createCard(file);\n                        } else {\n                            createCard(file, false);\n\n                            uploadFilesDescription.classList.add('error');\n                        }\n                    })\n            }\n\n            this.fileInput.addEventListener('change', () => {\n\n                uploadFilesDescription.classList.remove('error');\n\n                if (this.fileInput.files.length > 0) {\n                    Array.from(this.fileInput.files).forEach(file => {\n                        fileUploadHandler(file);\n                    });\n                }\n            });\n\n            ['dragover', 'dragleave'].forEach(evt => {\n                uploadDropArea.addEventListener(evt, (e) => {\n                    e.preventDefault();\n                })\n            })\n\n            uploadDropArea.addEventListener('drop', (e) => {\n                e.preventDefault();\n\n                uploadFilesDescription.classList.remove('error');\n\n                if (e.dataTransfer.files.length > 0) {\n                    for (const file of e.dataTransfer.files) {\n                        fileUploadHandler(file);\n                    }\n                }\n            })\n        }\n\n        specOfferHandler() {\n\n            const specOfferTriggers = this.main.querySelectorAll('.js-spec-offer');\n\n            if (specOfferTriggers.length > 0) {\n                specOfferTriggers.forEach(btn => {\n                    btn.addEventListener('click', () => {\n                        this.modal.classList.remove('active');\n\n                        this.offerModal.classList.add('active');\n                    })\n                })\n            }\n        }\n\n        modalSpecOfferHandler(handler) {\n            this.isSpecialOffer = handler;\n\n            const checkoutBox = this.main.querySelector('.js-checkout-box');\n            const specOfferBox = this.main.querySelector('.js-spec-offer-box');\n\n            if (handler) {\n                checkoutBox.classList.add('hide');\n                specOfferBox.classList.remove('hide');\n            } else {\n                checkoutBox.classList.remove('hide');\n                specOfferBox.classList.add('hide');\n            }\n        }\n\n        validateValues(values, overWriteAmount = false) {\n\n            let isValid = true;\n\n            if (values.length === 0) return false;\n\n            for (const input of values) {\n                if (input.hasAttribute('required') && !input.hasAttribute('disabled')) {\n                    if ((input.type !== 'checkbox' && input.value === '') || (input.type === 'checkbox' && !input.checked)) {\n                        this.errorInputHandler(true, input.name);\n\n                        isValid = false;\n                    } else {\n                        this.errorInputHandler(false, input.name);\n                    }\n                } else {\n                    this.errorInputHandler(false, input.name);\n                }\n            }\n\n            if (isValid) {\n                this.setValues(overWriteAmount);\n            }\n\n            return isValid;\n        }\n\n        setValues(overWriteAmount) {\n\n            const tableCaption = this.main.querySelector('.js-table-caption');\n\n            let laminateVarnishesLabel = '';\n\n            const laminateVarnishesSelector = this.getSelectInput('label-laminate-varnishes');\n\n            let laminateVarnishesValue = this.getSelectInput('label-laminate-varnishes').getValue();\n\n            if (laminateVarnishesSelector) {\n                laminateVarnishesSelector._presetChoices.forEach(choice => {\n                    if (choice.value === laminateVarnishesValue.value) {\n                        laminateVarnishesLabel = choice.customProperties;\n                    }\n                })\n            }\n\n            const directionRadioButton = [...this.directionInputs].find(input => input.checked);\n\n            this.calcParameters.Forma = this.formInput.value;\n            this.calcParameters.Plotis = this.widthInput.value;\n            this.calcParameters.Ilgis = this.heightInput.value;\n            this.calcParameters.SpalvuSk = this.colorInput.value;\n            this.calcParameters.Klijai = this.glueInput.value;\n            this.calcParameters.Pavirsius = this.substrateInput.value;\n            this.calcParameters.Laminatas = laminateVarnishesLabel === 'Laminate' ? this.laminateVarnishesInput.value : 'N';\n            this.calcParameters.Lakas = laminateVarnishesLabel === 'Varnish' ? this.laminateVarnishesInput.value : 'N';\n            this.calcParameters.Substrate = this.materialInput.value;\n            this.calcParameters.GRSk = this.typeInput.value;\n            this.calcParameters.Tirazas1 = overWriteAmount ? this.orderAmountInput.value : this.amountInput1.value;\n            this.calcParameters.Tirazas2 = overWriteAmount ? '0' : (((this.amountInput2.value !== null) && (this.amountInput2.value !== undefined)) ? this.amountInput2.value : '0');\n            this.calcParameters.Tirazas3 = overWriteAmount ? '0' : (((this.amountInput3.value !== null) && (this.amountInput3.value !== undefined)) ? this.amountInput3.value : '0');\n            this.calcParameters.Tirazas4 = overWriteAmount ? '0' : (((this.amountInput4.value !== null) && (this.amountInput4.value !== undefined)) ? this.amountInput4.value : '0');\n            this.calcParameters.Tirazas5 = overWriteAmount ? '0' : (((this.amountInput5.value !== null) && (this.amountInput5.value !== undefined)) ? this.amountInput5.value : '0');\n            this.calcParameters.Tirazas6 = overWriteAmount ? '0' : (((this.amountInput6.value !== null) && (this.amountInput6.value !== undefined)) ? this.amountInput6.value : '0');\n            this.calcParameters.Tirazas7 = overWriteAmount ? '0' : (((this.amountInput7.value !== null) && (this.amountInput7.value !== undefined)) ? this.amountInput7.value : '0');\n            this.calcParameters.Tirazas8 = overWriteAmount ? '0' : (((this.amountInput8.value !== null) && (this.amountInput8.value !== undefined)) ? this.amountInput8.value : '0');\n            this.calcParameters.Tirazas9 = overWriteAmount ? '0' : (((this.amountInput9.value !== null) && (this.amountInput9.value !== undefined)) ? this.amountInput9.value : '0');\n            this.calcParameters.Tirazas10 = overWriteAmount ? '0' : (((this.amountInput10.value !== null) && (this.amountInput10.value !== undefined)) ? this.amountInput10.value : '0');\n            this.calcParameters.GamybosLaikas = this.productionInput.value;\n            this.calcParameters.EtSkRit = this.packingAmountInput.value;\n            this.calcParameters.Folija = ((this.foilingInput.value !== null) && (this.foilingInput.value !== undefined)) ? this.foilingInput.value : \"N\";\n            this.calcParameters.Embozingas = this.embossingInput.checked ? '1' : null;\n            this.calcParameters.KSpauda = this.changingPressInput.checked ? '1' : null;\n            this.calcParameters.TikslusTirazas = this.exactCirculationInput.checked ? '1' : null;\n            this.calcParameters.TikPilniRit = this.onlyFullRollsInput.checked ? '1' : null;\n            this.calcParameters.TikSuKirtForma = this.onlyCuttingFormInput.checked ? '1' : null;\n            this.calcParameters.TranspZonaID = ((this.transportZoneInput.value !== null) && (this.transportZoneInput.value !== undefined)) ? this.transportZoneInput.value : '';\n            this.calcParameters.TranspZona = this.transportZoneInput.value !== '' ? this.transportZoneInput.options[this.transportZoneInput.selectedIndex].text : '';\n            this.calcParameters.windings = this.rotationInput.checked ? Number(directionRadioButton.value) + 4 : Number(directionRadioButton.value);\n            this.calcParameters.pastabos = tableCaption ? tableCaption.textContent : '';\n            // order modal inputs\n            this.calcParameters.Comment = ((this.messageInput.value !== null) && (this.messageInput.value !== undefined)) ? this.messageInput.value : '';\n            this.calcParameters.IvoresDiam = ((this.hubInput.value !== null) && (this.hubInput.value !== undefined)) ? this.hubInput.value : '';\n            this.calcParameters.ClientComment = ((this.extraNoteInput.value !== null) && (this.extraNoteInput.value !== undefined)) ? this.extraNoteInput.value : '';\n\n            if (this.calcParameters.Laminatas === 'LAMSK' && this.calcParameters.Folija !== \"N\") {\n                this.calcParameters.Laminatas = 'LAMBSC';\n            }\n        }\n\n        errorInputHandler(handler, name) {\n            const selector = this.main.querySelector(`.${name}`);\n\n            if (!selector) return;\n\n            if (handler) {\n                selector.classList.add('error');\n\n                selector.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"nearest\"});\n            } else {\n                selector.classList.remove('error');\n            }\n        }\n\n        ajaxCall(method, action, data, files) {\n\n            this.loader.classList.add('active');\n\n            return post(method, action, data, files)\n        }\n\n        getSelectInput(id) {\n            for (const select of this.choices) {\n                if (id === select.config.labelId) {\n                    return select;\n                }\n            }\n        }\n    }\n\n    new Calculator();\n})();"]}